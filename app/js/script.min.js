"use strict";

var _excluded = ["mask"],
  _excluded2 = ["mask"],
  _excluded3 = ["chunks"],
  _excluded4 = ["parent", "isOptional", "placeholderChar", "displayChar", "lazy", "eager"],
  _excluded5 = ["expose", "repeat"],
  _excluded6 = ["_blocks"],
  _excluded7 = ["to", "from", "maxLength", "autofix"],
  _excluded8 = ["mask", "pattern", "blocks"],
  _excluded9 = ["mask", "pattern"],
  _excluded10 = ["expose"],
  _excluded11 = ["compiledMasks", "currentMaskRef", "currentMask"],
  _excluded12 = ["mask"],
  _excluded13 = ["enum"],
  _excluded14 = ["repeat"];
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e64) { throw _e64; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e65) { didErr = true; err = _e65; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function set(target, property, value, receiver) { if (typeof Reflect !== "undefined" && Reflect.set) { set = Reflect.set; } else { set = function set(target, property, value, receiver) { var base = _superPropBase(target, property); var desc; if (base) { desc = Object.getOwnPropertyDescriptor(base, property); if (desc.set) { desc.set.call(receiver, value); return true; } else if (!desc.writable) { return false; } } desc = Object.getOwnPropertyDescriptor(receiver, property); if (desc) { if (!desc.writable) { return false; } desc.value = value; Object.defineProperty(receiver, property, desc); } else { _defineProperty(receiver, property, value); } return true; }; } return set(target, property, value, receiver); }
function _set(target, property, value, receiver, isStrict) { var s = set(target, property, value, receiver || target); if (!s && isStrict) { throw new Error('failed to set property'); } return value; }
function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }
function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
!function (t, e) {
  "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "undefined" != typeof module ? e(exports) : "function" == typeof define && define.amd ? define(["exports"], e) : e((t = "undefined" != typeof globalThis ? globalThis : t || self).IMask = {});
}(void 0, function (t) {
  "use strict";

  function e(t) {
    return "string" == typeof t || t instanceof String;
  }
  function s(t) {
    var e;
    return "object" == _typeof(t) && null != t && "Object" === (null == t || null == (e = t.constructor) ? void 0 : e.name);
  }
  function i(t, e) {
    return Array.isArray(e) ? i(t, function (t, s) {
      return e.includes(s);
    }) : Object.entries(t).reduce(function (t, s) {
      var _s2 = _slicedToArray(s, 2),
        i = _s2[0],
        a = _s2[1];
      return e(a, i) && (t[i] = a), t;
    }, {});
  }
  var a = {
    NONE: "NONE",
    LEFT: "LEFT",
    FORCE_LEFT: "FORCE_LEFT",
    RIGHT: "RIGHT",
    FORCE_RIGHT: "FORCE_RIGHT"
  };
  function u(t) {
    switch (t) {
      case a.LEFT:
        return a.FORCE_LEFT;
      case a.RIGHT:
        return a.FORCE_RIGHT;
      default:
        return t;
    }
  }
  function n(t) {
    return t.replace(/([.*+?^=!:${}()|[\]/\\])/g, "\\$1");
  }
  function r(t, e) {
    if (e === t) return !0;
    var s = Array.isArray(e),
      i = Array.isArray(t);
    var a;
    if (s && i) {
      if (e.length != t.length) return !1;
      for (a = 0; a < e.length; a++) {
        if (!r(e[a], t[a])) return !1;
      }
      return !0;
    }
    if (s != i) return !1;
    if (e && t && "object" == _typeof(e) && "object" == _typeof(t)) {
      var _s3 = e instanceof Date,
        _i2 = t instanceof Date;
      if (_s3 && _i2) return e.getTime() == t.getTime();
      if (_s3 != _i2) return !1;
      var _u = e instanceof RegExp,
        _n2 = t instanceof RegExp;
      if (_u && _n2) return e.toString() == t.toString();
      if (_u != _n2) return !1;
      var _h = Object.keys(e);
      for (a = 0; a < _h.length; a++) {
        if (!Object.prototype.hasOwnProperty.call(t, _h[a])) return !1;
      }
      for (a = 0; a < _h.length; a++) {
        if (!r(t[_h[a]], e[_h[a]])) return !1;
      }
      return !0;
    }
    return !(!e || !t || "function" != typeof e || "function" != typeof t) && e.toString() === t.toString();
  }
  var h = /*#__PURE__*/function () {
    function h(t) {
      _classCallCheck(this, h);
      for (Object.assign(this, t); this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos);) {
        --this.oldSelection.start;
      }
      if (this.insertedCount) for (; this.value.slice(this.cursorPos) !== this.oldValue.slice(this.oldSelection.end);) {
        this.value.length - this.cursorPos < this.oldValue.length - this.oldSelection.end ? ++this.oldSelection.end : ++this.cursorPos;
      }
    }
    _createClass(h, [{
      key: "startChangePos",
      get: function get() {
        return Math.min(this.cursorPos, this.oldSelection.start);
      }
    }, {
      key: "insertedCount",
      get: function get() {
        return this.cursorPos - this.startChangePos;
      }
    }, {
      key: "inserted",
      get: function get() {
        return this.value.substr(this.startChangePos, this.insertedCount);
      }
    }, {
      key: "removedCount",
      get: function get() {
        return Math.max(this.oldSelection.end - this.startChangePos || this.oldValue.length - this.value.length, 0);
      }
    }, {
      key: "removed",
      get: function get() {
        return this.oldValue.substr(this.startChangePos, this.removedCount);
      }
    }, {
      key: "head",
      get: function get() {
        return this.value.substring(0, this.startChangePos);
      }
    }, {
      key: "tail",
      get: function get() {
        return this.value.substring(this.startChangePos + this.insertedCount);
      }
    }, {
      key: "removeDirection",
      get: function get() {
        return !this.removedCount || this.insertedCount ? a.NONE : this.oldSelection.end !== this.cursorPos && this.oldSelection.start !== this.cursorPos || this.oldSelection.end !== this.oldSelection.start ? a.LEFT : a.RIGHT;
      }
    }]);
    return h;
  }();
  function o(t, e) {
    return new o.InputMask(t, e);
  }
  function l(t) {
    if (null == t) throw new Error("mask property should be defined");
    return t instanceof RegExp ? o.MaskedRegExp : e(t) ? o.MaskedPattern : t === Date ? o.MaskedDate : t === Number ? o.MaskedNumber : Array.isArray(t) || t === Array ? o.MaskedDynamic : o.Masked && t.prototype instanceof o.Masked ? t : o.Masked && t instanceof o.Masked ? t.constructor : t instanceof Function ? o.MaskedFunction : (console.warn("Mask not found for mask", t), o.Masked);
  }
  function p(t) {
    if (!t) throw new Error("Options in not defined");
    if (o.Masked) {
      if (t.prototype instanceof o.Masked) return {
        mask: t
      };
      var _ref = t instanceof o.Masked ? {
          mask: t
        } : s(t) && t.mask instanceof o.Masked ? t : {},
        _e2 = _ref.mask,
        _a = _objectWithoutProperties(_ref, _excluded);
      if (_e2) {
        var _t = _e2.mask;
        return _objectSpread(_objectSpread({}, i(_e2, function (t, e) {
          return !e.startsWith("_");
        })), {}, {
          mask: _e2.constructor,
          _mask: _t
        }, _a);
      }
    }
    return s(t) ? _objectSpread({}, t) : {
      mask: t
    };
  }
  function d(t) {
    if (o.Masked && t instanceof o.Masked) return t;
    var e = p(t),
      s = l(e.mask);
    if (!s) throw new Error("Masked class is not found for provided mask " + e.mask + ", appropriate module needs to be imported manually before creating mask.");
    return e.mask === s && delete e.mask, e._mask && (e.mask = e._mask, delete e._mask), new s(e);
  }
  o.createMask = d;
  var c = /*#__PURE__*/function () {
    function c() {
      _classCallCheck(this, c);
    }
    _createClass(c, [{
      key: "selectionStart",
      get: function get() {
        var t;
        try {
          t = this._unsafeSelectionStart;
        } catch (_unused) {}
        return null != t ? t : this.value.length;
      }
    }, {
      key: "selectionEnd",
      get: function get() {
        var t;
        try {
          t = this._unsafeSelectionEnd;
        } catch (_unused2) {}
        return null != t ? t : this.value.length;
      }
    }, {
      key: "select",
      value: function select(t, e) {
        if (null != t && null != e && (t !== this.selectionStart || e !== this.selectionEnd)) try {
          this._unsafeSelect(t, e);
        } catch (_unused3) {}
      }
    }, {
      key: "isActive",
      get: function get() {
        return !1;
      }
    }]);
    return c;
  }();
  o.MaskElement = c;
  var g = /*#__PURE__*/function (_c) {
    _inherits(g, _c);
    var _super = _createSuper(g);
    function g(t) {
      var _this;
      _classCallCheck(this, g);
      _this = _super.call(this), _this.input = t, _this._onKeydown = _this._onKeydown.bind(_assertThisInitialized(_this)), _this._onInput = _this._onInput.bind(_assertThisInitialized(_this)), _this._onBeforeinput = _this._onBeforeinput.bind(_assertThisInitialized(_this)), _this._onCompositionEnd = _this._onCompositionEnd.bind(_assertThisInitialized(_this));
      return _this;
    }
    _createClass(g, [{
      key: "rootElement",
      get: function get() {
        var t, e, s;
        return null != (t = null == (e = (s = this.input).getRootNode) ? void 0 : e.call(s)) ? t : document;
      }
    }, {
      key: "isActive",
      get: function get() {
        return this.input === this.rootElement.activeElement;
      }
    }, {
      key: "bindEvents",
      value: function bindEvents(t) {
        this.input.addEventListener("keydown", this._onKeydown), this.input.addEventListener("input", this._onInput), this.input.addEventListener("beforeinput", this._onBeforeinput), this.input.addEventListener("compositionend", this._onCompositionEnd), this.input.addEventListener("drop", t.drop), this.input.addEventListener("click", t.click), this.input.addEventListener("focus", t.focus), this.input.addEventListener("blur", t.commit), this._handlers = t;
      }
    }, {
      key: "_onKeydown",
      value: function _onKeydown(t) {
        return this._handlers.redo && (90 === t.keyCode && t.shiftKey && (t.metaKey || t.ctrlKey) || 89 === t.keyCode && t.ctrlKey) ? (t.preventDefault(), this._handlers.redo(t)) : this._handlers.undo && 90 === t.keyCode && (t.metaKey || t.ctrlKey) ? (t.preventDefault(), this._handlers.undo(t)) : void (t.isComposing || this._handlers.selectionChange(t));
      }
    }, {
      key: "_onBeforeinput",
      value: function _onBeforeinput(t) {
        return "historyUndo" === t.inputType && this._handlers.undo ? (t.preventDefault(), this._handlers.undo(t)) : "historyRedo" === t.inputType && this._handlers.redo ? (t.preventDefault(), this._handlers.redo(t)) : void 0;
      }
    }, {
      key: "_onCompositionEnd",
      value: function _onCompositionEnd(t) {
        this._handlers.input(t);
      }
    }, {
      key: "_onInput",
      value: function _onInput(t) {
        t.isComposing || this._handlers.input(t);
      }
    }, {
      key: "unbindEvents",
      value: function unbindEvents() {
        this.input.removeEventListener("keydown", this._onKeydown), this.input.removeEventListener("input", this._onInput), this.input.removeEventListener("beforeinput", this._onBeforeinput), this.input.removeEventListener("compositionend", this._onCompositionEnd), this.input.removeEventListener("drop", this._handlers.drop), this.input.removeEventListener("click", this._handlers.click), this.input.removeEventListener("focus", this._handlers.focus), this.input.removeEventListener("blur", this._handlers.commit), this._handlers = {};
      }
    }]);
    return g;
  }(c);
  o.HTMLMaskElement = g;
  var k = /*#__PURE__*/function (_g) {
    _inherits(k, _g);
    var _super2 = _createSuper(k);
    function k(t) {
      var _this2;
      _classCallCheck(this, k);
      _this2 = _super2.call(this, t), _this2.input = t;
      return _this2;
    }
    _createClass(k, [{
      key: "_unsafeSelectionStart",
      get: function get() {
        return null != this.input.selectionStart ? this.input.selectionStart : this.value.length;
      }
    }, {
      key: "_unsafeSelectionEnd",
      get: function get() {
        return this.input.selectionEnd;
      }
    }, {
      key: "_unsafeSelect",
      value: function _unsafeSelect(t, e) {
        this.input.setSelectionRange(t, e);
      }
    }, {
      key: "value",
      get: function get() {
        return this.input.value;
      },
      set: function set(t) {
        this.input.value = t;
      }
    }]);
    return k;
  }(g);
  o.HTMLMaskElement = g;
  var m = /*#__PURE__*/function (_g2) {
    _inherits(m, _g2);
    var _super3 = _createSuper(m);
    function m() {
      _classCallCheck(this, m);
      return _super3.apply(this, arguments);
    }
    _createClass(m, [{
      key: "_unsafeSelectionStart",
      get: function get() {
        var t = this.rootElement,
          e = t.getSelection && t.getSelection(),
          s = e && e.anchorOffset,
          i = e && e.focusOffset;
        return null == i || null == s || s < i ? s : i;
      }
    }, {
      key: "_unsafeSelectionEnd",
      get: function get() {
        var t = this.rootElement,
          e = t.getSelection && t.getSelection(),
          s = e && e.anchorOffset,
          i = e && e.focusOffset;
        return null == i || null == s || s > i ? s : i;
      }
    }, {
      key: "_unsafeSelect",
      value: function _unsafeSelect(t, e) {
        if (!this.rootElement.createRange) return;
        var s = this.rootElement.createRange();
        s.setStart(this.input.firstChild || this.input, t), s.setEnd(this.input.lastChild || this.input, e);
        var i = this.rootElement,
          a = i.getSelection && i.getSelection();
        a && (a.removeAllRanges(), a.addRange(s));
      }
    }, {
      key: "value",
      get: function get() {
        return this.input.textContent || "";
      },
      set: function set(t) {
        this.input.textContent = t;
      }
    }]);
    return m;
  }(g);
  o.HTMLContenteditableMaskElement = m;
  var _ = /*#__PURE__*/function () {
    function _() {
      _classCallCheck(this, _);
      this.states = [], this.currentIndex = 0;
    }
    _createClass(_, [{
      key: "currentState",
      get: function get() {
        return this.states[this.currentIndex];
      }
    }, {
      key: "isEmpty",
      get: function get() {
        return 0 === this.states.length;
      }
    }, {
      key: "push",
      value: function push(t) {
        this.currentIndex < this.states.length - 1 && (this.states.length = this.currentIndex + 1), this.states.push(t), this.states.length > _.MAX_LENGTH && this.states.shift(), this.currentIndex = this.states.length - 1;
      }
    }, {
      key: "go",
      value: function go(t) {
        return this.currentIndex = Math.min(Math.max(this.currentIndex + t, 0), this.states.length - 1), this.currentState;
      }
    }, {
      key: "undo",
      value: function undo() {
        return this.go(-1);
      }
    }, {
      key: "redo",
      value: function redo() {
        return this.go(1);
      }
    }, {
      key: "clear",
      value: function clear() {
        this.states.length = 0, this.currentIndex = 0;
      }
    }]);
    return _;
  }();
  _.MAX_LENGTH = 100;
  var f = /*#__PURE__*/function () {
    function f(t, e) {
      _classCallCheck(this, f);
      this.el = t instanceof c ? t : t.isContentEditable && "INPUT" !== t.tagName && "TEXTAREA" !== t.tagName ? new m(t) : new k(t), this.masked = d(e), this._listeners = {}, this._value = "", this._unmaskedValue = "", this._rawInputValue = "", this.history = new _(), this._saveSelection = this._saveSelection.bind(this), this._onInput = this._onInput.bind(this), this._onChange = this._onChange.bind(this), this._onDrop = this._onDrop.bind(this), this._onFocus = this._onFocus.bind(this), this._onClick = this._onClick.bind(this), this._onUndo = this._onUndo.bind(this), this._onRedo = this._onRedo.bind(this), this.alignCursor = this.alignCursor.bind(this), this.alignCursorFriendly = this.alignCursorFriendly.bind(this), this._bindEvents(), this.updateValue(), this._onChange();
    }
    _createClass(f, [{
      key: "maskEquals",
      value: function maskEquals(t) {
        var e;
        return null == t || (null == (e = this.masked) ? void 0 : e.maskEquals(t));
      }
    }, {
      key: "mask",
      get: function get() {
        return this.masked.mask;
      },
      set: function set(t) {
        if (this.maskEquals(t)) return;
        if (!(t instanceof o.Masked) && this.masked.constructor === l(t)) return void this.masked.updateOptions({
          mask: t
        });
        var e = t instanceof o.Masked ? t : d({
          mask: t
        });
        e.unmaskedValue = this.masked.unmaskedValue, this.masked = e;
      }
    }, {
      key: "value",
      get: function get() {
        return this._value;
      },
      set: function set(t) {
        this.value !== t && (this.masked.value = t, this.updateControl("auto"));
      }
    }, {
      key: "unmaskedValue",
      get: function get() {
        return this._unmaskedValue;
      },
      set: function set(t) {
        this.unmaskedValue !== t && (this.masked.unmaskedValue = t, this.updateControl("auto"));
      }
    }, {
      key: "rawInputValue",
      get: function get() {
        return this._rawInputValue;
      },
      set: function set(t) {
        this.rawInputValue !== t && (this.masked.rawInputValue = t, this.updateControl(), this.alignCursor());
      }
    }, {
      key: "typedValue",
      get: function get() {
        return this.masked.typedValue;
      },
      set: function set(t) {
        this.masked.typedValueEquals(t) || (this.masked.typedValue = t, this.updateControl("auto"));
      }
    }, {
      key: "displayValue",
      get: function get() {
        return this.masked.displayValue;
      }
    }, {
      key: "_bindEvents",
      value: function _bindEvents() {
        this.el.bindEvents({
          selectionChange: this._saveSelection,
          input: this._onInput,
          drop: this._onDrop,
          click: this._onClick,
          focus: this._onFocus,
          commit: this._onChange,
          undo: this._onUndo,
          redo: this._onRedo
        });
      }
    }, {
      key: "_unbindEvents",
      value: function _unbindEvents() {
        this.el && this.el.unbindEvents();
      }
    }, {
      key: "_fireEvent",
      value: function _fireEvent(t, e) {
        var s = this._listeners[t];
        s && s.forEach(function (t) {
          return t(e);
        });
      }
    }, {
      key: "selectionStart",
      get: function get() {
        return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;
      }
    }, {
      key: "cursorPos",
      get: function get() {
        return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;
      },
      set: function set(t) {
        this.el && this.el.isActive && (this.el.select(t, t), this._saveSelection());
      }
    }, {
      key: "_saveSelection",
      value: function _saveSelection() {
        this.displayValue !== this.el.value && console.warn("Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly."), this._selection = {
          start: this.selectionStart,
          end: this.cursorPos
        };
      }
    }, {
      key: "updateValue",
      value: function updateValue() {
        this.masked.value = this.el.value, this._value = this.masked.value;
      }
    }, {
      key: "updateControl",
      value: function updateControl(t) {
        var e = this.masked.unmaskedValue,
          s = this.masked.value,
          i = this.masked.rawInputValue,
          a = this.displayValue,
          u = this.unmaskedValue !== e || this.value !== s || this._rawInputValue !== i;
        this._unmaskedValue = e, this._value = s, this._rawInputValue = i, this.el.value !== a && (this.el.value = a), "auto" === t ? this.alignCursor() : null != t && (this.cursorPos = t), u && this._fireChangeEvents(), this._historyChanging || !u && !this.history.isEmpty || this.history.push({
          unmaskedValue: e,
          selection: {
            start: this.selectionStart,
            end: this.cursorPos
          }
        });
      }
    }, {
      key: "updateOptions",
      value: function updateOptions(t) {
        var e = t.mask,
          s = _objectWithoutProperties(t, _excluded2),
          i = !this.maskEquals(e),
          a = this.masked.optionsIsChanged(s);
        i && (this.mask = e), a && this.masked.updateOptions(s), (i || a) && this.updateControl();
      }
    }, {
      key: "updateCursor",
      value: function updateCursor(t) {
        null != t && (this.cursorPos = t, this._delayUpdateCursor(t));
      }
    }, {
      key: "_delayUpdateCursor",
      value: function _delayUpdateCursor(t) {
        var _this3 = this;
        this._abortUpdateCursor(), this._changingCursorPos = t, this._cursorChanging = setTimeout(function () {
          _this3.el && (_this3.cursorPos = _this3._changingCursorPos, _this3._abortUpdateCursor());
        }, 10);
      }
    }, {
      key: "_fireChangeEvents",
      value: function _fireChangeEvents() {
        this._fireEvent("accept", this._inputEvent), this.masked.isComplete && this._fireEvent("complete", this._inputEvent);
      }
    }, {
      key: "_abortUpdateCursor",
      value: function _abortUpdateCursor() {
        this._cursorChanging && (clearTimeout(this._cursorChanging), delete this._cursorChanging);
      }
    }, {
      key: "alignCursor",
      value: function alignCursor() {
        this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, a.LEFT));
      }
    }, {
      key: "alignCursorFriendly",
      value: function alignCursorFriendly() {
        this.selectionStart === this.cursorPos && this.alignCursor();
      }
    }, {
      key: "on",
      value: function on(t, e) {
        return this._listeners[t] || (this._listeners[t] = []), this._listeners[t].push(e), this;
      }
    }, {
      key: "off",
      value: function off(t, e) {
        if (!this._listeners[t]) return this;
        if (!e) return delete this._listeners[t], this;
        var s = this._listeners[t].indexOf(e);
        return s >= 0 && this._listeners[t].splice(s, 1), this;
      }
    }, {
      key: "_onInput",
      value: function _onInput(t) {
        this._inputEvent = t, this._abortUpdateCursor();
        var e = new h({
            value: this.el.value,
            cursorPos: this.cursorPos,
            oldValue: this.displayValue,
            oldSelection: this._selection
          }),
          s = this.masked.rawInputValue,
          i = this.masked.splice(e.startChangePos, e.removed.length, e.inserted, e.removeDirection, {
            input: !0,
            raw: !0
          }).offset,
          u = s === this.masked.rawInputValue ? e.removeDirection : a.NONE;
        var n = this.masked.nearestInputPos(e.startChangePos + i, u);
        u !== a.NONE && (n = this.masked.nearestInputPos(n, a.NONE)), this.updateControl(n), delete this._inputEvent;
      }
    }, {
      key: "_onChange",
      value: function _onChange() {
        this.displayValue !== this.el.value && this.updateValue(), this.masked.doCommit(), this.updateControl(), this._saveSelection();
      }
    }, {
      key: "_onDrop",
      value: function _onDrop(t) {
        t.preventDefault(), t.stopPropagation();
      }
    }, {
      key: "_onFocus",
      value: function _onFocus(t) {
        this.alignCursorFriendly();
      }
    }, {
      key: "_onClick",
      value: function _onClick(t) {
        this.alignCursorFriendly();
      }
    }, {
      key: "_onUndo",
      value: function _onUndo() {
        this._applyHistoryState(this.history.undo());
      }
    }, {
      key: "_onRedo",
      value: function _onRedo() {
        this._applyHistoryState(this.history.redo());
      }
    }, {
      key: "_applyHistoryState",
      value: function _applyHistoryState(t) {
        t && (this._historyChanging = !0, this.unmaskedValue = t.unmaskedValue, this.el.select(t.selection.start, t.selection.end), this._saveSelection(), this._historyChanging = !1);
      }
    }, {
      key: "destroy",
      value: function destroy() {
        this._unbindEvents(), this._listeners.length = 0, delete this.el;
      }
    }]);
    return f;
  }();
  o.InputMask = f;
  var v = /*#__PURE__*/function () {
    function v(t) {
      _classCallCheck(this, v);
      Object.assign(this, {
        inserted: "",
        rawInserted: "",
        tailShift: 0,
        skip: !1
      }, t);
    }
    _createClass(v, [{
      key: "aggregate",
      value: function aggregate(t) {
        return this.inserted += t.inserted, this.rawInserted += t.rawInserted, this.tailShift += t.tailShift, this.skip = this.skip || t.skip, this;
      }
    }, {
      key: "offset",
      get: function get() {
        return this.tailShift + this.inserted.length;
      }
    }, {
      key: "consumed",
      get: function get() {
        return Boolean(this.rawInserted) || this.skip;
      }
    }, {
      key: "equals",
      value: function equals(t) {
        return this.inserted === t.inserted && this.tailShift === t.tailShift && this.rawInserted === t.rawInserted && this.skip === t.skip;
      }
    }], [{
      key: "normalize",
      value: function normalize(t) {
        return Array.isArray(t) ? t : [t, new v()];
      }
    }]);
    return v;
  }();
  o.ChangeDetails = v;
  var E = /*#__PURE__*/function () {
    function E(t, e, s) {
      _classCallCheck(this, E);
      void 0 === t && (t = ""), void 0 === e && (e = 0), this.value = t, this.from = e, this.stop = s;
    }
    _createClass(E, [{
      key: "toString",
      value: function toString() {
        return this.value;
      }
    }, {
      key: "extend",
      value: function extend(t) {
        this.value += String(t);
      }
    }, {
      key: "appendTo",
      value: function appendTo(t) {
        return t.append(this.toString(), {
          tail: !0
        }).aggregate(t._appendPlaceholder());
      }
    }, {
      key: "state",
      get: function get() {
        return {
          value: this.value,
          from: this.from,
          stop: this.stop
        };
      },
      set: function set(t) {
        Object.assign(this, t);
      }
    }, {
      key: "unshift",
      value: function unshift(t) {
        if (!this.value.length || null != t && this.from >= t) return "";
        var e = this.value[0];
        return this.value = this.value.slice(1), e;
      }
    }, {
      key: "shift",
      value: function shift() {
        if (!this.value.length) return "";
        var t = this.value[this.value.length - 1];
        return this.value = this.value.slice(0, -1), t;
      }
    }]);
    return E;
  }();
  var C = /*#__PURE__*/function () {
    function C(t) {
      _classCallCheck(this, C);
      this._value = "", this._update(_objectSpread(_objectSpread({}, C.DEFAULTS), t)), this._initialized = !0;
    }
    _createClass(C, [{
      key: "updateOptions",
      value: function updateOptions(t) {
        this.optionsIsChanged(t) && this.withValueRefresh(this._update.bind(this, t));
      }
    }, {
      key: "_update",
      value: function _update(t) {
        Object.assign(this, t);
      }
    }, {
      key: "state",
      get: function get() {
        return {
          _value: this.value,
          _rawInputValue: this.rawInputValue
        };
      },
      set: function set(t) {
        this._value = t._value;
      }
    }, {
      key: "reset",
      value: function reset() {
        this._value = "";
      }
    }, {
      key: "value",
      get: function get() {
        return this._value;
      },
      set: function set(t) {
        this.resolve(t, {
          input: !0
        });
      }
    }, {
      key: "resolve",
      value: function resolve(t, e) {
        void 0 === e && (e = {
          input: !0
        }), this.reset(), this.append(t, e, ""), this.doCommit();
      }
    }, {
      key: "unmaskedValue",
      get: function get() {
        return this.value;
      },
      set: function set(t) {
        this.resolve(t, {});
      }
    }, {
      key: "typedValue",
      get: function get() {
        return this.parse ? this.parse(this.value, this) : this.unmaskedValue;
      },
      set: function set(t) {
        this.format ? this.value = this.format(t, this) : this.unmaskedValue = String(t);
      }
    }, {
      key: "rawInputValue",
      get: function get() {
        return this.extractInput(0, this.displayValue.length, {
          raw: !0
        });
      },
      set: function set(t) {
        this.resolve(t, {
          raw: !0
        });
      }
    }, {
      key: "displayValue",
      get: function get() {
        return this.value;
      }
    }, {
      key: "isComplete",
      get: function get() {
        return !0;
      }
    }, {
      key: "isFilled",
      get: function get() {
        return this.isComplete;
      }
    }, {
      key: "nearestInputPos",
      value: function nearestInputPos(t, e) {
        return t;
      }
    }, {
      key: "totalInputPositions",
      value: function totalInputPositions(t, e) {
        return void 0 === t && (t = 0), void 0 === e && (e = this.displayValue.length), Math.min(this.displayValue.length, e - t);
      }
    }, {
      key: "extractInput",
      value: function extractInput(t, e, s) {
        return void 0 === t && (t = 0), void 0 === e && (e = this.displayValue.length), this.displayValue.slice(t, e);
      }
    }, {
      key: "extractTail",
      value: function extractTail(t, e) {
        return void 0 === t && (t = 0), void 0 === e && (e = this.displayValue.length), new E(this.extractInput(t, e), t);
      }
    }, {
      key: "appendTail",
      value: function appendTail(t) {
        return e(t) && (t = new E(String(t))), t.appendTo(this);
      }
    }, {
      key: "_appendCharRaw",
      value: function _appendCharRaw(t, e) {
        return t ? (this._value += t, new v({
          inserted: t,
          rawInserted: t
        })) : new v();
      }
    }, {
      key: "_appendChar",
      value: function _appendChar(t, e, s) {
        var _this$doPrepareChar, _this$doPrepareChar2;
        void 0 === e && (e = {});
        var i = this.state;
        var a;
        if ((_this$doPrepareChar = this.doPrepareChar(t, e), _this$doPrepareChar2 = _slicedToArray(_this$doPrepareChar, 2), t = _this$doPrepareChar2[0], a = _this$doPrepareChar2[1]), t && (a = a.aggregate(this._appendCharRaw(t, e)), !a.rawInserted && "pad" === this.autofix)) {
          var _s4 = this.state;
          this.state = i;
          var _u2 = this.pad(e);
          var _n3 = this._appendCharRaw(t, e);
          _u2 = _u2.aggregate(_n3), _n3.rawInserted || _u2.equals(a) ? a = _u2 : this.state = _s4;
        }
        if (a.inserted) {
          var _t2,
            _u3 = !1 !== this.doValidate(e);
          if (_u3 && null != s) {
            var _e3 = this.state;
            if (!0 === this.overwrite) {
              _t2 = s.state;
              for (var _t3 = 0; _t3 < a.rawInserted.length; ++_t3) {
                s.unshift(this.displayValue.length - a.tailShift);
              }
            }
            var _i3 = this.appendTail(s);
            if (_u3 = _i3.rawInserted.length === s.toString().length, !(_u3 && _i3.inserted || "shift" !== this.overwrite)) {
              this.state = _e3, _t2 = s.state;
              for (var _t4 = 0; _t4 < a.rawInserted.length; ++_t4) {
                s.shift();
              }
              _i3 = this.appendTail(s), _u3 = _i3.rawInserted.length === s.toString().length;
            }
            _u3 && _i3.inserted && (this.state = _e3);
          }
          _u3 || (a = new v(), this.state = i, s && _t2 && (s.state = _t2));
        }
        return a;
      }
    }, {
      key: "_appendPlaceholder",
      value: function _appendPlaceholder() {
        return new v();
      }
    }, {
      key: "_appendEager",
      value: function _appendEager() {
        return new v();
      }
    }, {
      key: "append",
      value: function append(t, s, i) {
        var _this$doPrepare, _this$doPrepare2;
        if (!e(t)) throw new Error("value should be string");
        var a = e(i) ? new E(String(i)) : i;
        var u;
        null != s && s.tail && (s._beforeTailState = this.state), (_this$doPrepare = this.doPrepare(t, s), _this$doPrepare2 = _slicedToArray(_this$doPrepare, 2), t = _this$doPrepare2[0], u = _this$doPrepare2[1]);
        for (var _e4 = 0; _e4 < t.length; ++_e4) {
          var _i4 = this._appendChar(t[_e4], s, a);
          if (!_i4.rawInserted && !this.doSkipInvalid(t[_e4], s, a)) break;
          u.aggregate(_i4);
        }
        return (!0 === this.eager || "append" === this.eager) && null != s && s.input && t && u.aggregate(this._appendEager()), null != a && (u.tailShift += this.appendTail(a).tailShift), u;
      }
    }, {
      key: "remove",
      value: function remove(t, e) {
        return void 0 === t && (t = 0), void 0 === e && (e = this.displayValue.length), this._value = this.displayValue.slice(0, t) + this.displayValue.slice(e), new v();
      }
    }, {
      key: "withValueRefresh",
      value: function withValueRefresh(t) {
        if (this._refreshing || !this._initialized) return t();
        this._refreshing = !0;
        var e = this.rawInputValue,
          s = this.value,
          i = t();
        return this.rawInputValue = e, this.value && this.value !== s && 0 === s.indexOf(this.value) && (this.append(s.slice(this.displayValue.length), {}, ""), this.doCommit()), delete this._refreshing, i;
      }
    }, {
      key: "runIsolated",
      value: function runIsolated(t) {
        if (this._isolated || !this._initialized) return t(this);
        this._isolated = !0;
        var e = this.state,
          s = t(this);
        return this.state = e, delete this._isolated, s;
      }
    }, {
      key: "doSkipInvalid",
      value: function doSkipInvalid(t, e, s) {
        return Boolean(this.skipInvalid);
      }
    }, {
      key: "doPrepare",
      value: function doPrepare(t, e) {
        return void 0 === e && (e = {}), v.normalize(this.prepare ? this.prepare(t, this, e) : t);
      }
    }, {
      key: "doPrepareChar",
      value: function doPrepareChar(t, e) {
        return void 0 === e && (e = {}), v.normalize(this.prepareChar ? this.prepareChar(t, this, e) : t);
      }
    }, {
      key: "doValidate",
      value: function doValidate(t) {
        return (!this.validate || this.validate(this.value, this, t)) && (!this.parent || this.parent.doValidate(t));
      }
    }, {
      key: "doCommit",
      value: function doCommit() {
        this.commit && this.commit(this.value, this);
      }
    }, {
      key: "splice",
      value: function splice(t, e, s, i, n) {
        void 0 === s && (s = ""), void 0 === i && (i = a.NONE), void 0 === n && (n = {
          input: !0
        });
        var r = t + e,
          h = this.extractTail(r),
          o = !0 === this.eager || "remove" === this.eager;
        var l;
        o && (i = u(i), l = this.extractInput(0, r, {
          raw: !0
        }));
        var p = t;
        var d = new v();
        if (i !== a.NONE && (p = this.nearestInputPos(t, e > 1 && 0 !== t && !o ? a.NONE : i), d.tailShift = p - t), d.aggregate(this.remove(p)), o && i !== a.NONE && l === this.rawInputValue) if (i === a.FORCE_LEFT) {
          var _t5;
          for (; l === this.rawInputValue && (_t5 = this.displayValue.length);) {
            d.aggregate(new v({
              tailShift: -1
            })).aggregate(this.remove(_t5 - 1));
          }
        } else i === a.FORCE_RIGHT && h.unshift();
        return d.aggregate(this.append(s, n, h));
      }
    }, {
      key: "maskEquals",
      value: function maskEquals(t) {
        return this.mask === t;
      }
    }, {
      key: "optionsIsChanged",
      value: function optionsIsChanged(t) {
        return !r(this, t);
      }
    }, {
      key: "typedValueEquals",
      value: function typedValueEquals(t) {
        var e = this.typedValue;
        return t === e || C.EMPTY_VALUES.includes(t) && C.EMPTY_VALUES.includes(e) || !!this.format && this.format(t, this) === this.format(this.typedValue, this);
      }
    }, {
      key: "pad",
      value: function pad(t) {
        return new v();
      }
    }]);
    return C;
  }();
  C.DEFAULTS = {
    skipInvalid: !0
  }, C.EMPTY_VALUES = [void 0, null, ""], o.Masked = C;
  var A = /*#__PURE__*/function () {
    function A(t, e) {
      _classCallCheck(this, A);
      void 0 === t && (t = []), void 0 === e && (e = 0), this.chunks = t, this.from = e;
    }
    _createClass(A, [{
      key: "toString",
      value: function toString() {
        return this.chunks.map(String).join("");
      }
    }, {
      key: "extend",
      value: function extend(t) {
        if (!String(t)) return;
        t = e(t) ? new E(String(t)) : t;
        var s = this.chunks[this.chunks.length - 1],
          i = s && (s.stop === t.stop || null == t.stop) && t.from === s.from + s.toString().length;
        if (t instanceof E) i ? s.extend(t.toString()) : this.chunks.push(t);else if (t instanceof A) {
          if (null == t.stop) {
            var _e5;
            for (; t.chunks.length && null == t.chunks[0].stop;) {
              _e5 = t.chunks.shift(), _e5.from += t.from, this.extend(_e5);
            }
          }
          t.toString() && (t.stop = t.blockIndex, this.chunks.push(t));
        }
      }
    }, {
      key: "appendTo",
      value: function appendTo(t) {
        if (!(t instanceof o.MaskedPattern)) {
          return new E(this.toString()).appendTo(t);
        }
        var e = new v();
        for (var _s5 = 0; _s5 < this.chunks.length; ++_s5) {
          var _i5 = this.chunks[_s5],
            _a2 = t._mapPosToBlock(t.displayValue.length),
            _u4 = _i5.stop;
          var _n4 = void 0;
          if (null != _u4 && (!_a2 || _a2.index <= _u4) && ((_i5 instanceof A || t._stops.indexOf(_u4) >= 0) && e.aggregate(t._appendPlaceholder(_u4)), _n4 = _i5 instanceof A && t._blocks[_u4]), _n4) {
            var _s6 = _n4.appendTail(_i5);
            e.aggregate(_s6);
            var _a3 = _i5.toString().slice(_s6.rawInserted.length);
            _a3 && e.aggregate(t.append(_a3, {
              tail: !0
            }));
          } else e.aggregate(t.append(_i5.toString(), {
            tail: !0
          }));
        }
        return e;
      }
    }, {
      key: "state",
      get: function get() {
        return {
          chunks: this.chunks.map(function (t) {
            return t.state;
          }),
          from: this.from,
          stop: this.stop,
          blockIndex: this.blockIndex
        };
      },
      set: function set(t) {
        var e = t.chunks,
          s = _objectWithoutProperties(t, _excluded3);
        Object.assign(this, s), this.chunks = e.map(function (t) {
          var e = "chunks" in t ? new A() : new E();
          return e.state = t, e;
        });
      }
    }, {
      key: "unshift",
      value: function unshift(t) {
        if (!this.chunks.length || null != t && this.from >= t) return "";
        var e = null != t ? t - this.from : t;
        var s = 0;
        for (; s < this.chunks.length;) {
          var _t6 = this.chunks[s],
            _i6 = _t6.unshift(e);
          if (_t6.toString()) {
            if (!_i6) break;
            ++s;
          } else this.chunks.splice(s, 1);
          if (_i6) return _i6;
        }
        return "";
      }
    }, {
      key: "shift",
      value: function shift() {
        if (!this.chunks.length) return "";
        var t = this.chunks.length - 1;
        for (; 0 <= t;) {
          var _e6 = this.chunks[t],
            _s7 = _e6.shift();
          if (_e6.toString()) {
            if (!_s7) break;
            --t;
          } else this.chunks.splice(t, 1);
          if (_s7) return _s7;
        }
        return "";
      }
    }]);
    return A;
  }();
  var F = /*#__PURE__*/function () {
    function F(t, e) {
      _classCallCheck(this, F);
      this.masked = t, this._log = [];
      var _ref2 = t._mapPosToBlock(e) || (e < 0 ? {
          index: 0,
          offset: 0
        } : {
          index: this.masked._blocks.length,
          offset: 0
        }),
        s = _ref2.offset,
        i = _ref2.index;
      this.offset = s, this.index = i, this.ok = !1;
    }
    _createClass(F, [{
      key: "block",
      get: function get() {
        return this.masked._blocks[this.index];
      }
    }, {
      key: "pos",
      get: function get() {
        return this.masked._blockStartPos(this.index) + this.offset;
      }
    }, {
      key: "state",
      get: function get() {
        return {
          index: this.index,
          offset: this.offset,
          ok: this.ok
        };
      },
      set: function set(t) {
        Object.assign(this, t);
      }
    }, {
      key: "pushState",
      value: function pushState() {
        this._log.push(this.state);
      }
    }, {
      key: "popState",
      value: function popState() {
        var t = this._log.pop();
        return t && (this.state = t), t;
      }
    }, {
      key: "bindBlock",
      value: function bindBlock() {
        this.block || (this.index < 0 && (this.index = 0, this.offset = 0), this.index >= this.masked._blocks.length && (this.index = this.masked._blocks.length - 1, this.offset = this.block.displayValue.length));
      }
    }, {
      key: "_pushLeft",
      value: function _pushLeft(t) {
        for (this.pushState(), this.bindBlock(); 0 <= this.index; --this.index, this.offset = (null == (e = this.block) ? void 0 : e.displayValue.length) || 0) {
          var e;
          if (t()) return this.ok = !0;
        }
        return this.ok = !1;
      }
    }, {
      key: "_pushRight",
      value: function _pushRight(t) {
        for (this.pushState(), this.bindBlock(); this.index < this.masked._blocks.length; ++this.index, this.offset = 0) {
          if (t()) return this.ok = !0;
        }
        return this.ok = !1;
      }
    }, {
      key: "pushLeftBeforeFilled",
      value: function pushLeftBeforeFilled() {
        var _this4 = this;
        return this._pushLeft(function () {
          if (!_this4.block.isFixed && _this4.block.value) return _this4.offset = _this4.block.nearestInputPos(_this4.offset, a.FORCE_LEFT), 0 !== _this4.offset || void 0;
        });
      }
    }, {
      key: "pushLeftBeforeInput",
      value: function pushLeftBeforeInput() {
        var _this5 = this;
        return this._pushLeft(function () {
          if (!_this5.block.isFixed) return _this5.offset = _this5.block.nearestInputPos(_this5.offset, a.LEFT), !0;
        });
      }
    }, {
      key: "pushLeftBeforeRequired",
      value: function pushLeftBeforeRequired() {
        var _this6 = this;
        return this._pushLeft(function () {
          if (!(_this6.block.isFixed || _this6.block.isOptional && !_this6.block.value)) return _this6.offset = _this6.block.nearestInputPos(_this6.offset, a.LEFT), !0;
        });
      }
    }, {
      key: "pushRightBeforeFilled",
      value: function pushRightBeforeFilled() {
        var _this7 = this;
        return this._pushRight(function () {
          if (!_this7.block.isFixed && _this7.block.value) return _this7.offset = _this7.block.nearestInputPos(_this7.offset, a.FORCE_RIGHT), _this7.offset !== _this7.block.value.length || void 0;
        });
      }
    }, {
      key: "pushRightBeforeInput",
      value: function pushRightBeforeInput() {
        var _this8 = this;
        return this._pushRight(function () {
          if (!_this8.block.isFixed) return _this8.offset = _this8.block.nearestInputPos(_this8.offset, a.NONE), !0;
        });
      }
    }, {
      key: "pushRightBeforeRequired",
      value: function pushRightBeforeRequired() {
        var _this9 = this;
        return this._pushRight(function () {
          if (!(_this9.block.isFixed || _this9.block.isOptional && !_this9.block.value)) return _this9.offset = _this9.block.nearestInputPos(_this9.offset, a.NONE), !0;
        });
      }
    }]);
    return F;
  }();
  var x = /*#__PURE__*/function () {
    function x(t) {
      _classCallCheck(this, x);
      Object.assign(this, t), this._value = "", this.isFixed = !0;
    }
    _createClass(x, [{
      key: "value",
      get: function get() {
        return this._value;
      }
    }, {
      key: "unmaskedValue",
      get: function get() {
        return this.isUnmasking ? this.value : "";
      }
    }, {
      key: "rawInputValue",
      get: function get() {
        return this._isRawInput ? this.value : "";
      }
    }, {
      key: "displayValue",
      get: function get() {
        return this.value;
      }
    }, {
      key: "reset",
      value: function reset() {
        this._isRawInput = !1, this._value = "";
      }
    }, {
      key: "remove",
      value: function remove(t, e) {
        return void 0 === t && (t = 0), void 0 === e && (e = this._value.length), this._value = this._value.slice(0, t) + this._value.slice(e), this._value || (this._isRawInput = !1), new v();
      }
    }, {
      key: "nearestInputPos",
      value: function nearestInputPos(t, e) {
        void 0 === e && (e = a.NONE);
        var s = this._value.length;
        switch (e) {
          case a.LEFT:
          case a.FORCE_LEFT:
            return 0;
          default:
            return s;
        }
      }
    }, {
      key: "totalInputPositions",
      value: function totalInputPositions(t, e) {
        return void 0 === t && (t = 0), void 0 === e && (e = this._value.length), this._isRawInput ? e - t : 0;
      }
    }, {
      key: "extractInput",
      value: function extractInput(t, e, s) {
        return void 0 === t && (t = 0), void 0 === e && (e = this._value.length), void 0 === s && (s = {}), s.raw && this._isRawInput && this._value.slice(t, e) || "";
      }
    }, {
      key: "isComplete",
      get: function get() {
        return !0;
      }
    }, {
      key: "isFilled",
      get: function get() {
        return Boolean(this._value);
      }
    }, {
      key: "_appendChar",
      value: function _appendChar(t, e) {
        if (void 0 === e && (e = {}), this.isFilled) return new v();
        var s = !0 === this.eager || "append" === this.eager,
          i = this["char"] === t && (this.isUnmasking || e.input || e.raw) && (!e.raw || !s) && !e.tail,
          a = new v({
            inserted: this["char"],
            rawInserted: i ? this["char"] : ""
          });
        return this._value = this["char"], this._isRawInput = i && (e.raw || e.input), a;
      }
    }, {
      key: "_appendEager",
      value: function _appendEager() {
        return this._appendChar(this["char"], {
          tail: !0
        });
      }
    }, {
      key: "_appendPlaceholder",
      value: function _appendPlaceholder() {
        var t = new v();
        return this.isFilled || (this._value = t.inserted = this["char"]), t;
      }
    }, {
      key: "extractTail",
      value: function extractTail() {
        return new E("");
      }
    }, {
      key: "appendTail",
      value: function appendTail(t) {
        return e(t) && (t = new E(String(t))), t.appendTo(this);
      }
    }, {
      key: "append",
      value: function append(t, e, s) {
        var i = this._appendChar(t[0], e);
        return null != s && (i.tailShift += this.appendTail(s).tailShift), i;
      }
    }, {
      key: "doCommit",
      value: function doCommit() {}
    }, {
      key: "state",
      get: function get() {
        return {
          _value: this._value,
          _rawInputValue: this.rawInputValue
        };
      },
      set: function set(t) {
        this._value = t._value, this._isRawInput = Boolean(t._rawInputValue);
      }
    }, {
      key: "pad",
      value: function pad(t) {
        return this._appendPlaceholder();
      }
    }]);
    return x;
  }();
  var S = /*#__PURE__*/function () {
    function S(t) {
      _classCallCheck(this, S);
      var e = t.parent,
        s = t.isOptional,
        i = t.placeholderChar,
        a = t.displayChar,
        u = t.lazy,
        n = t.eager,
        r = _objectWithoutProperties(t, _excluded4);
      this.masked = d(r), Object.assign(this, {
        parent: e,
        isOptional: s,
        placeholderChar: i,
        displayChar: a,
        lazy: u,
        eager: n
      });
    }
    _createClass(S, [{
      key: "reset",
      value: function reset() {
        this.isFilled = !1, this.masked.reset();
      }
    }, {
      key: "remove",
      value: function remove(t, e) {
        return void 0 === t && (t = 0), void 0 === e && (e = this.value.length), 0 === t && e >= 1 ? (this.isFilled = !1, this.masked.remove(t, e)) : new v();
      }
    }, {
      key: "value",
      get: function get() {
        return this.masked.value || (this.isFilled && !this.isOptional ? this.placeholderChar : "");
      }
    }, {
      key: "unmaskedValue",
      get: function get() {
        return this.masked.unmaskedValue;
      }
    }, {
      key: "rawInputValue",
      get: function get() {
        return this.masked.rawInputValue;
      }
    }, {
      key: "displayValue",
      get: function get() {
        return this.masked.value && this.displayChar || this.value;
      }
    }, {
      key: "isComplete",
      get: function get() {
        return Boolean(this.masked.value) || this.isOptional;
      }
    }, {
      key: "_appendChar",
      value: function _appendChar(t, e) {
        if (void 0 === e && (e = {}), this.isFilled) return new v();
        var s = this.masked.state;
        var i = this.masked._appendChar(t, this.currentMaskFlags(e));
        return i.inserted && !1 === this.doValidate(e) && (i = new v(), this.masked.state = s), i.inserted || this.isOptional || this.lazy || e.input || (i.inserted = this.placeholderChar), i.skip = !i.inserted && !this.isOptional, this.isFilled = Boolean(i.inserted), i;
      }
    }, {
      key: "append",
      value: function append(t, e, s) {
        return this.masked.append(t, this.currentMaskFlags(e), s);
      }
    }, {
      key: "_appendPlaceholder",
      value: function _appendPlaceholder() {
        return this.isFilled || this.isOptional ? new v() : (this.isFilled = !0, new v({
          inserted: this.placeholderChar
        }));
      }
    }, {
      key: "_appendEager",
      value: function _appendEager() {
        return new v();
      }
    }, {
      key: "extractTail",
      value: function extractTail(t, e) {
        return this.masked.extractTail(t, e);
      }
    }, {
      key: "appendTail",
      value: function appendTail(t) {
        return this.masked.appendTail(t);
      }
    }, {
      key: "extractInput",
      value: function extractInput(t, e, s) {
        return void 0 === t && (t = 0), void 0 === e && (e = this.value.length), this.masked.extractInput(t, e, s);
      }
    }, {
      key: "nearestInputPos",
      value: function nearestInputPos(t, e) {
        void 0 === e && (e = a.NONE);
        var s = this.value.length,
          i = Math.min(Math.max(t, 0), s);
        switch (e) {
          case a.LEFT:
          case a.FORCE_LEFT:
            return this.isComplete ? i : 0;
          case a.RIGHT:
          case a.FORCE_RIGHT:
            return this.isComplete ? i : s;
          default:
            return i;
        }
      }
    }, {
      key: "totalInputPositions",
      value: function totalInputPositions(t, e) {
        return void 0 === t && (t = 0), void 0 === e && (e = this.value.length), this.value.slice(t, e).length;
      }
    }, {
      key: "doValidate",
      value: function doValidate(t) {
        return this.masked.doValidate(this.currentMaskFlags(t)) && (!this.parent || this.parent.doValidate(this.currentMaskFlags(t)));
      }
    }, {
      key: "doCommit",
      value: function doCommit() {
        this.masked.doCommit();
      }
    }, {
      key: "state",
      get: function get() {
        return {
          _value: this.value,
          _rawInputValue: this.rawInputValue,
          masked: this.masked.state,
          isFilled: this.isFilled
        };
      },
      set: function set(t) {
        this.masked.state = t.masked, this.isFilled = t.isFilled;
      }
    }, {
      key: "currentMaskFlags",
      value: function currentMaskFlags(t) {
        var e;
        return _objectSpread(_objectSpread({}, t), {}, {
          _beforeTailState: (null == t || null == (e = t._beforeTailState) ? void 0 : e.masked) || (null == t ? void 0 : t._beforeTailState)
        });
      }
    }, {
      key: "pad",
      value: function pad(t) {
        return new v();
      }
    }]);
    return S;
  }();
  S.DEFAULT_DEFINITIONS = {
    0: /\d/,
    a: /[\u0041-\u005A\u0061-\u007A\u00AA\u00B5\u00BA\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0\u08A2-\u08AC\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097F\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C33\u0C35-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191C\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA697\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA793\uA7A0-\uA7AA\uA7F8-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA80-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
    "*": /./
  };
  var B = /*#__PURE__*/function (_C) {
    _inherits(B, _C);
    var _super4 = _createSuper(B);
    function B() {
      _classCallCheck(this, B);
      return _super4.apply(this, arguments);
    }
    _createClass(B, [{
      key: "updateOptions",
      value: function updateOptions(t) {
        _get(_getPrototypeOf(B.prototype), "updateOptions", this).call(this, t);
      }
    }, {
      key: "_update",
      value: function _update(t) {
        var e = t.mask;
        e && (t.validate = function (t) {
          return t.search(e) >= 0;
        }), _get(_getPrototypeOf(B.prototype), "_update", this).call(this, t);
      }
    }]);
    return B;
  }(C);
  o.MaskedRegExp = B;
  var b = /*#__PURE__*/function (_C2) {
    _inherits(b, _C2);
    var _super5 = _createSuper(b);
    function b(t) {
      _classCallCheck(this, b);
      return _super5.call(this, _objectSpread(_objectSpread(_objectSpread({}, b.DEFAULTS), t), {}, {
        definitions: Object.assign({}, S.DEFAULT_DEFINITIONS, null == t ? void 0 : t.definitions)
      }));
    }
    _createClass(b, [{
      key: "updateOptions",
      value: function updateOptions(t) {
        _get(_getPrototypeOf(b.prototype), "updateOptions", this).call(this, t);
      }
    }, {
      key: "_update",
      value: function _update(t) {
        t.definitions = Object.assign({}, this.definitions, t.definitions), _get(_getPrototypeOf(b.prototype), "_update", this).call(this, t), this._rebuildMask();
      }
    }, {
      key: "_rebuildMask",
      value: function _rebuildMask() {
        var _this10 = this;
        var t = this.definitions;
        this._blocks = [], this.exposeBlock = void 0, this._stops = [], this._maskedBlocks = {};
        var e = this.mask;
        if (!e || !t) return;
        var s = !1,
          i = !1;
        for (var _a4 = 0; _a4 < e.length; ++_a4) {
          if (this.blocks) {
            var _ret = function () {
              var t = e.slice(_a4),
                s = Object.keys(_this10.blocks).filter(function (e) {
                  return 0 === t.indexOf(e);
                });
              s.sort(function (t, e) {
                return e.length - t.length;
              });
              var i = s[0];
              if (i) {
                var _p = p(_this10.blocks[i]),
                  _t7 = _p.expose,
                  _e7 = _p.repeat,
                  _s8 = _objectWithoutProperties(_p, _excluded5),
                  _u6 = _objectSpread(_objectSpread({
                    lazy: _this10.lazy,
                    eager: _this10.eager,
                    placeholderChar: _this10.placeholderChar,
                    displayChar: _this10.displayChar,
                    overwrite: _this10.overwrite,
                    autofix: _this10.autofix
                  }, _s8), {}, {
                    repeat: _e7,
                    parent: _this10
                  }),
                  _n6 = null != _e7 ? new o.RepeatBlock(_u6) : d(_u6);
                _n6 && (_this10._blocks.push(_n6), _t7 && (_this10.exposeBlock = _n6), _this10._maskedBlocks[i] || (_this10._maskedBlocks[i] = []), _this10._maskedBlocks[i].push(_this10._blocks.length - 1)), _a4 += i.length - 1;
                return "continue";
              }
            }();
            if (_ret === "continue") continue;
          }
          var _u5 = e[_a4],
            _n5 = (_u5 in t);
          if (_u5 === b.STOP_CHAR) {
            this._stops.push(this._blocks.length);
            continue;
          }
          if ("{" === _u5 || "}" === _u5) {
            s = !s;
            continue;
          }
          if ("[" === _u5 || "]" === _u5) {
            i = !i;
            continue;
          }
          if (_u5 === b.ESCAPE_CHAR) {
            if (++_a4, _u5 = e[_a4], !_u5) break;
            _n5 = !1;
          }
          var _r = _n5 ? new S(_objectSpread(_objectSpread({
            isOptional: i,
            lazy: this.lazy,
            eager: this.eager,
            placeholderChar: this.placeholderChar,
            displayChar: this.displayChar
          }, p(t[_u5])), {}, {
            parent: this
          })) : new x({
            "char": _u5,
            eager: this.eager,
            isUnmasking: s
          });
          this._blocks.push(_r);
        }
      }
    }, {
      key: "state",
      get: function get() {
        return _objectSpread(_objectSpread({}, _get(_getPrototypeOf(b.prototype), "state", this)), {}, {
          _blocks: this._blocks.map(function (t) {
            return t.state;
          })
        });
      },
      set: function set(t) {
        if (!t) return void this.reset();
        var e = t._blocks,
          s = _objectWithoutProperties(t, _excluded6);
        this._blocks.forEach(function (t, s) {
          return t.state = e[s];
        }), _set(_getPrototypeOf(b.prototype), "state", s, this, true);
      }
    }, {
      key: "reset",
      value: function reset() {
        _get(_getPrototypeOf(b.prototype), "reset", this).call(this), this._blocks.forEach(function (t) {
          return t.reset();
        });
      }
    }, {
      key: "isComplete",
      get: function get() {
        return this.exposeBlock ? this.exposeBlock.isComplete : this._blocks.every(function (t) {
          return t.isComplete;
        });
      }
    }, {
      key: "isFilled",
      get: function get() {
        return this._blocks.every(function (t) {
          return t.isFilled;
        });
      }
    }, {
      key: "isFixed",
      get: function get() {
        return this._blocks.every(function (t) {
          return t.isFixed;
        });
      }
    }, {
      key: "isOptional",
      get: function get() {
        return this._blocks.every(function (t) {
          return t.isOptional;
        });
      }
    }, {
      key: "doCommit",
      value: function doCommit() {
        this._blocks.forEach(function (t) {
          return t.doCommit();
        }), _get(_getPrototypeOf(b.prototype), "doCommit", this).call(this);
      }
    }, {
      key: "unmaskedValue",
      get: function get() {
        return this.exposeBlock ? this.exposeBlock.unmaskedValue : this._blocks.reduce(function (t, e) {
          return t + e.unmaskedValue;
        }, "");
      },
      set: function set(t) {
        if (this.exposeBlock) {
          var _e8 = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);
          this.exposeBlock.unmaskedValue = t, this.appendTail(_e8), this.doCommit();
        } else _set(_getPrototypeOf(b.prototype), "unmaskedValue", t, this, true);
      }
    }, {
      key: "value",
      get: function get() {
        return this.exposeBlock ? this.exposeBlock.value : this._blocks.reduce(function (t, e) {
          return t + e.value;
        }, "");
      },
      set: function set(t) {
        if (this.exposeBlock) {
          var _e9 = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);
          this.exposeBlock.value = t, this.appendTail(_e9), this.doCommit();
        } else _set(_getPrototypeOf(b.prototype), "value", t, this, true);
      }
    }, {
      key: "typedValue",
      get: function get() {
        return this.exposeBlock ? this.exposeBlock.typedValue : _get(_getPrototypeOf(b.prototype), "typedValue", this);
      },
      set: function set(t) {
        if (this.exposeBlock) {
          var _e10 = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);
          this.exposeBlock.typedValue = t, this.appendTail(_e10), this.doCommit();
        } else _set(_getPrototypeOf(b.prototype), "typedValue", t, this, true);
      }
    }, {
      key: "displayValue",
      get: function get() {
        return this._blocks.reduce(function (t, e) {
          return t + e.displayValue;
        }, "");
      }
    }, {
      key: "appendTail",
      value: function appendTail(t) {
        return _get(_getPrototypeOf(b.prototype), "appendTail", this).call(this, t).aggregate(this._appendPlaceholder());
      }
    }, {
      key: "_appendEager",
      value: function _appendEager() {
        var t;
        var e = new v();
        var s = null == (t = this._mapPosToBlock(this.displayValue.length)) ? void 0 : t.index;
        if (null == s) return e;
        this._blocks[s].isFilled && ++s;
        for (var _t8 = s; _t8 < this._blocks.length; ++_t8) {
          var _s9 = this._blocks[_t8]._appendEager();
          if (!_s9.inserted) break;
          e.aggregate(_s9);
        }
        return e;
      }
    }, {
      key: "_appendCharRaw",
      value: function _appendCharRaw(t, e) {
        void 0 === e && (e = {});
        var s = this._mapPosToBlock(this.displayValue.length),
          i = new v();
        if (!s) return i;
        for (var _u7, _n7 = s.index; _u7 = this._blocks[_n7]; ++_n7) {
          var a;
          var _s10 = _u7._appendChar(t, _objectSpread(_objectSpread({}, e), {}, {
            _beforeTailState: null == (a = e._beforeTailState) || null == (a = a._blocks) ? void 0 : a[_n7]
          }));
          if (i.aggregate(_s10), _s10.consumed) break;
        }
        return i;
      }
    }, {
      key: "extractTail",
      value: function extractTail(t, e) {
        var _this11 = this;
        void 0 === t && (t = 0), void 0 === e && (e = this.displayValue.length);
        var s = new A();
        return t === e || this._forEachBlocksInRange(t, e, function (t, e, i, a) {
          var u = t.extractTail(i, a);
          u.stop = _this11._findStopBefore(e), u.from = _this11._blockStartPos(e), u instanceof A && (u.blockIndex = e), s.extend(u);
        }), s;
      }
    }, {
      key: "extractInput",
      value: function extractInput(t, e, s) {
        if (void 0 === t && (t = 0), void 0 === e && (e = this.displayValue.length), void 0 === s && (s = {}), t === e) return "";
        var i = "";
        return this._forEachBlocksInRange(t, e, function (t, e, a, u) {
          i += t.extractInput(a, u, s);
        }), i;
      }
    }, {
      key: "_findStopBefore",
      value: function _findStopBefore(t) {
        var e;
        for (var _s11 = 0; _s11 < this._stops.length; ++_s11) {
          var _i7 = this._stops[_s11];
          if (!(_i7 <= t)) break;
          e = _i7;
        }
        return e;
      }
    }, {
      key: "_appendPlaceholder",
      value: function _appendPlaceholder(t) {
        var e = new v();
        if (this.lazy && null == t) return e;
        var s = this._mapPosToBlock(this.displayValue.length);
        if (!s) return e;
        var i = s.index,
          a = null != t ? t : this._blocks.length;
        return this._blocks.slice(i, a).forEach(function (s) {
          var i;
          s.lazy && null == t || e.aggregate(s._appendPlaceholder(null == (i = s._blocks) ? void 0 : i.length));
        }), e;
      }
    }, {
      key: "_mapPosToBlock",
      value: function _mapPosToBlock(t) {
        var e = "";
        for (var _s12 = 0; _s12 < this._blocks.length; ++_s12) {
          var _i8 = this._blocks[_s12],
            _a5 = e.length;
          if (e += _i8.displayValue, t <= e.length) return {
            index: _s12,
            offset: t - _a5
          };
        }
      }
    }, {
      key: "_blockStartPos",
      value: function _blockStartPos(t) {
        return this._blocks.slice(0, t).reduce(function (t, e) {
          return t + e.displayValue.length;
        }, 0);
      }
    }, {
      key: "_forEachBlocksInRange",
      value: function _forEachBlocksInRange(t, e, s) {
        void 0 === e && (e = this.displayValue.length);
        var i = this._mapPosToBlock(t);
        if (i) {
          var _t9 = this._mapPosToBlock(e),
            _a6 = _t9 && i.index === _t9.index,
            _u8 = i.offset,
            _n8 = _t9 && _a6 ? _t9.offset : this._blocks[i.index].displayValue.length;
          if (s(this._blocks[i.index], i.index, _u8, _n8), _t9 && !_a6) {
            for (var _e11 = i.index + 1; _e11 < _t9.index; ++_e11) {
              s(this._blocks[_e11], _e11, 0, this._blocks[_e11].displayValue.length);
            }
            s(this._blocks[_t9.index], _t9.index, 0, _t9.offset);
          }
        }
      }
    }, {
      key: "remove",
      value: function remove(t, e) {
        void 0 === t && (t = 0), void 0 === e && (e = this.displayValue.length);
        var s = _get(_getPrototypeOf(b.prototype), "remove", this).call(this, t, e);
        return this._forEachBlocksInRange(t, e, function (t, e, i, a) {
          s.aggregate(t.remove(i, a));
        }), s;
      }
    }, {
      key: "nearestInputPos",
      value: function nearestInputPos(t, e) {
        if (void 0 === e && (e = a.NONE), !this._blocks.length) return 0;
        var s = new F(this, t);
        if (e === a.NONE) return s.pushRightBeforeInput() ? s.pos : (s.popState(), s.pushLeftBeforeInput() ? s.pos : this.displayValue.length);
        if (e === a.LEFT || e === a.FORCE_LEFT) {
          if (e === a.LEFT) {
            if (s.pushRightBeforeFilled(), s.ok && s.pos === t) return t;
            s.popState();
          }
          if (s.pushLeftBeforeInput(), s.pushLeftBeforeRequired(), s.pushLeftBeforeFilled(), e === a.LEFT) {
            if (s.pushRightBeforeInput(), s.pushRightBeforeRequired(), s.ok && s.pos <= t) return s.pos;
            if (s.popState(), s.ok && s.pos <= t) return s.pos;
            s.popState();
          }
          return s.ok ? s.pos : e === a.FORCE_LEFT ? 0 : (s.popState(), s.ok ? s.pos : (s.popState(), s.ok ? s.pos : 0));
        }
        return e === a.RIGHT || e === a.FORCE_RIGHT ? (s.pushRightBeforeInput(), s.pushRightBeforeRequired(), s.pushRightBeforeFilled() ? s.pos : e === a.FORCE_RIGHT ? this.displayValue.length : (s.popState(), s.ok ? s.pos : (s.popState(), s.ok ? s.pos : this.nearestInputPos(t, a.LEFT)))) : t;
      }
    }, {
      key: "totalInputPositions",
      value: function totalInputPositions(t, e) {
        void 0 === t && (t = 0), void 0 === e && (e = this.displayValue.length);
        var s = 0;
        return this._forEachBlocksInRange(t, e, function (t, e, i, a) {
          s += t.totalInputPositions(i, a);
        }), s;
      }
    }, {
      key: "maskedBlock",
      value: function maskedBlock(t) {
        return this.maskedBlocks(t)[0];
      }
    }, {
      key: "maskedBlocks",
      value: function maskedBlocks(t) {
        var _this12 = this;
        var e = this._maskedBlocks[t];
        return e ? e.map(function (t) {
          return _this12._blocks[t];
        }) : [];
      }
    }, {
      key: "pad",
      value: function pad(t) {
        var e = new v();
        return this._forEachBlocksInRange(0, this.displayValue.length, function (s) {
          return e.aggregate(s.pad(t));
        }), e;
      }
    }]);
    return b;
  }(C);
  b.DEFAULTS = _objectSpread(_objectSpread({}, C.DEFAULTS), {}, {
    lazy: !0,
    placeholderChar: "_"
  }), b.STOP_CHAR = "`", b.ESCAPE_CHAR = "\\", b.InputDefinition = S, b.FixedDefinition = x, o.MaskedPattern = b;
  var D = /*#__PURE__*/function (_b) {
    _inherits(D, _b);
    var _super6 = _createSuper(D);
    function D(t) {
      _classCallCheck(this, D);
      return _super6.call(this, t);
    }
    _createClass(D, [{
      key: "_matchFrom",
      get: function get() {
        return this.maxLength - String(this.from).length;
      }
    }, {
      key: "updateOptions",
      value: function updateOptions(t) {
        _get(_getPrototypeOf(D.prototype), "updateOptions", this).call(this, t);
      }
    }, {
      key: "_update",
      value: function _update(t) {
        var _t$to = t.to,
          e = _t$to === void 0 ? this.to || 0 : _t$to,
          _t$from = t.from,
          s = _t$from === void 0 ? this.from || 0 : _t$from,
          _t$maxLength = t.maxLength,
          i = _t$maxLength === void 0 ? this.maxLength || 0 : _t$maxLength,
          _t$autofix = t.autofix,
          a = _t$autofix === void 0 ? this.autofix : _t$autofix,
          u = _objectWithoutProperties(t, _excluded7);
        this.to = e, this.from = s, this.maxLength = Math.max(String(e).length, i), this.autofix = a;
        var n = String(this.from).padStart(this.maxLength, "0"),
          r = String(this.to).padStart(this.maxLength, "0");
        var h = 0;
        for (; h < r.length && r[h] === n[h];) {
          ++h;
        }
        u.mask = r.slice(0, h).replace(/0/g, "\\0") + "0".repeat(this.maxLength - h), _get(_getPrototypeOf(D.prototype), "_update", this).call(this, u);
      }
    }, {
      key: "isComplete",
      get: function get() {
        return _get(_getPrototypeOf(D.prototype), "isComplete", this) && Boolean(this.value);
      }
    }, {
      key: "boundaries",
      value: function boundaries(t) {
        var e = "",
          s = "";
        var _ref3 = t.match(/^(\D*)(\d*)(\D*)/) || [],
          _ref4 = _slicedToArray(_ref3, 3),
          i = _ref4[1],
          a = _ref4[2];
        return a && (e = "0".repeat(i.length) + a, s = "9".repeat(i.length) + a), e = e.padEnd(this.maxLength, "0"), s = s.padEnd(this.maxLength, "9"), [e, s];
      }
    }, {
      key: "doPrepareChar",
      value: function doPrepareChar(t, e) {
        var _get$call, _get$call2;
        var s;
        return void 0 === e && (e = {}), (_get$call = _get(_getPrototypeOf(D.prototype), "doPrepareChar", this).call(this, t.replace(/\D/g, ""), e), _get$call2 = _slicedToArray(_get$call, 2), t = _get$call2[0], s = _get$call2[1]), t || (s.skip = !this.isComplete), [t, s];
      }
    }, {
      key: "_appendCharRaw",
      value: function _appendCharRaw(t, e) {
        if (void 0 === e && (e = {}), !this.autofix || this.value.length + 1 > this.maxLength) return _get(_getPrototypeOf(D.prototype), "_appendCharRaw", this).call(this, t, e);
        var s = String(this.from).padStart(this.maxLength, "0"),
          i = String(this.to).padStart(this.maxLength, "0"),
          _this$boundaries = this.boundaries(this.value + t),
          _this$boundaries2 = _slicedToArray(_this$boundaries, 2),
          a = _this$boundaries2[0],
          u = _this$boundaries2[1];
        return Number(u) < this.from ? _get(_getPrototypeOf(D.prototype), "_appendCharRaw", this).call(this, s[this.value.length], e) : Number(a) > this.to ? !e.tail && "pad" === this.autofix && this.value.length + 1 < this.maxLength ? _get(_getPrototypeOf(D.prototype), "_appendCharRaw", this).call(this, s[this.value.length], e).aggregate(this._appendCharRaw(t, e)) : _get(_getPrototypeOf(D.prototype), "_appendCharRaw", this).call(this, i[this.value.length], e) : _get(_getPrototypeOf(D.prototype), "_appendCharRaw", this).call(this, t, e);
      }
    }, {
      key: "doValidate",
      value: function doValidate(t) {
        var e = this.value;
        if (-1 === e.search(/[^0]/) && e.length <= this._matchFrom) return !0;
        var _this$boundaries3 = this.boundaries(e),
          _this$boundaries4 = _slicedToArray(_this$boundaries3, 2),
          s = _this$boundaries4[0],
          i = _this$boundaries4[1];
        return this.from <= Number(i) && Number(s) <= this.to && _get(_getPrototypeOf(D.prototype), "doValidate", this).call(this, t);
      }
    }, {
      key: "pad",
      value: function pad(t) {
        var _this13 = this;
        var e = new v();
        if (this.value.length === this.maxLength) return e;
        var s = this.value,
          i = this.maxLength - this.value.length;
        if (i) {
          this.reset();
          for (var _s13 = 0; _s13 < i; ++_s13) {
            e.aggregate(_get(_getPrototypeOf(D.prototype), "_appendCharRaw", this).call(this, "0", t));
          }
          s.split("").forEach(function (t) {
            return _this13._appendCharRaw(t);
          });
        }
        return e;
      }
    }]);
    return D;
  }(b);
  o.MaskedRange = D;
  var y = /*#__PURE__*/function (_b2) {
    _inherits(y, _b2);
    var _super7 = _createSuper(y);
    function y(t) {
      _classCallCheck(this, y);
      return _super7.call(this, y.extractPatternOptions(_objectSpread(_objectSpread({}, y.DEFAULTS), t)));
    }
    _createClass(y, [{
      key: "updateOptions",
      value: function updateOptions(t) {
        _get(_getPrototypeOf(y.prototype), "updateOptions", this).call(this, t);
      }
    }, {
      key: "_update",
      value: function _update(t) {
        var _y$DEFAULTS$t = _objectSpread(_objectSpread({}, y.DEFAULTS), t),
          s = _y$DEFAULTS$t.mask,
          i = _y$DEFAULTS$t.pattern,
          a = _y$DEFAULTS$t.blocks,
          u = _objectWithoutProperties(_y$DEFAULTS$t, _excluded8),
          n = Object.assign({}, y.GET_DEFAULT_BLOCKS());
        t.min && (n.Y.from = t.min.getFullYear()), t.max && (n.Y.to = t.max.getFullYear()), t.min && t.max && n.Y.from === n.Y.to && (n.m.from = t.min.getMonth() + 1, n.m.to = t.max.getMonth() + 1, n.m.from === n.m.to && (n.d.from = t.min.getDate(), n.d.to = t.max.getDate())), Object.assign(n, this.blocks, a), _get(_getPrototypeOf(y.prototype), "_update", this).call(this, _objectSpread(_objectSpread({}, u), {}, {
          mask: e(s) ? s : i,
          blocks: n
        }));
      }
    }, {
      key: "doValidate",
      value: function doValidate(t) {
        var e = this.date;
        return _get(_getPrototypeOf(y.prototype), "doValidate", this).call(this, t) && (!this.isComplete || this.isDateExist(this.value) && null != e && (null == this.min || this.min <= e) && (null == this.max || e <= this.max));
      }
    }, {
      key: "isDateExist",
      value: function isDateExist(t) {
        return this.format(this.parse(t, this), this).indexOf(t) >= 0;
      }
    }, {
      key: "date",
      get: function get() {
        return this.typedValue;
      },
      set: function set(t) {
        this.typedValue = t;
      }
    }, {
      key: "typedValue",
      get: function get() {
        return this.isComplete ? _get(_getPrototypeOf(y.prototype), "typedValue", this) : null;
      },
      set: function set(t) {
        _set(_getPrototypeOf(y.prototype), "typedValue", t, this, true);
      }
    }, {
      key: "maskEquals",
      value: function maskEquals(t) {
        return t === Date || _get(_getPrototypeOf(y.prototype), "maskEquals", this).call(this, t);
      }
    }, {
      key: "optionsIsChanged",
      value: function optionsIsChanged(t) {
        return _get(_getPrototypeOf(y.prototype), "optionsIsChanged", this).call(this, y.extractPatternOptions(t));
      }
    }], [{
      key: "extractPatternOptions",
      value: function extractPatternOptions(t) {
        var s = t.mask,
          i = t.pattern,
          a = _objectWithoutProperties(t, _excluded9);
        return _objectSpread(_objectSpread({}, a), {}, {
          mask: e(s) ? s : i
        });
      }
    }]);
    return y;
  }(b);
  y.GET_DEFAULT_BLOCKS = function () {
    return {
      d: {
        mask: D,
        from: 1,
        to: 31,
        maxLength: 2
      },
      m: {
        mask: D,
        from: 1,
        to: 12,
        maxLength: 2
      },
      Y: {
        mask: D,
        from: 1900,
        to: 9999
      }
    };
  }, y.DEFAULTS = _objectSpread(_objectSpread({}, b.DEFAULTS), {}, {
    mask: Date,
    pattern: "d{.}`m{.}`Y",
    format: function format(t, e) {
      if (!t) return "";
      return [String(t.getDate()).padStart(2, "0"), String(t.getMonth() + 1).padStart(2, "0"), t.getFullYear()].join(".");
    },
    parse: function parse(t, e) {
      var _t$split$map = t.split(".").map(Number),
        _t$split$map2 = _slicedToArray(_t$split$map, 3),
        s = _t$split$map2[0],
        i = _t$split$map2[1],
        a = _t$split$map2[2];
      return new Date(a, i - 1, s);
    }
  }), o.MaskedDate = y;
  var M = /*#__PURE__*/function (_C3) {
    _inherits(M, _C3);
    var _super8 = _createSuper(M);
    function M(t) {
      var _this14;
      _classCallCheck(this, M);
      _this14 = _super8.call(this, _objectSpread(_objectSpread({}, M.DEFAULTS), t)), _this14.currentMask = void 0;
      return _this14;
    }
    _createClass(M, [{
      key: "updateOptions",
      value: function updateOptions(t) {
        _get(_getPrototypeOf(M.prototype), "updateOptions", this).call(this, t);
      }
    }, {
      key: "_update",
      value: function _update(t) {
        var _this15 = this;
        _get(_getPrototypeOf(M.prototype), "_update", this).call(this, t), "mask" in t && (this.exposeMask = void 0, this.compiledMasks = Array.isArray(t.mask) ? t.mask.map(function (t) {
          var _p2 = p(t),
            e = _p2.expose,
            s = _objectWithoutProperties(_p2, _excluded10),
            i = d(_objectSpread({
              overwrite: _this15._overwrite,
              eager: _this15._eager,
              skipInvalid: _this15._skipInvalid
            }, s));
          return e && (_this15.exposeMask = i), i;
        }) : []);
      }
    }, {
      key: "_appendCharRaw",
      value: function _appendCharRaw(t, e) {
        void 0 === e && (e = {});
        var s = this._applyDispatch(t, e);
        return this.currentMask && s.aggregate(this.currentMask._appendChar(t, this.currentMaskFlags(e))), s;
      }
    }, {
      key: "_applyDispatch",
      value: function _applyDispatch(t, e, s) {
        void 0 === t && (t = ""), void 0 === e && (e = {}), void 0 === s && (s = "");
        var i = e.tail && null != e._beforeTailState ? e._beforeTailState._value : this.value,
          a = this.rawInputValue,
          u = e.tail && null != e._beforeTailState ? e._beforeTailState._rawInputValue : a,
          n = a.slice(u.length),
          r = this.currentMask,
          h = new v(),
          o = null == r ? void 0 : r.state;
        return this.currentMask = this.doDispatch(t, _objectSpread({}, e), s), this.currentMask && (this.currentMask !== r ? (this.currentMask.reset(), u && (this.currentMask.append(u, {
          raw: !0
        }), h.tailShift = this.currentMask.value.length - i.length), n && (h.tailShift += this.currentMask.append(n, {
          raw: !0,
          tail: !0
        }).tailShift)) : o && (this.currentMask.state = o)), h;
      }
    }, {
      key: "_appendPlaceholder",
      value: function _appendPlaceholder() {
        var t = this._applyDispatch();
        return this.currentMask && t.aggregate(this.currentMask._appendPlaceholder()), t;
      }
    }, {
      key: "_appendEager",
      value: function _appendEager() {
        var t = this._applyDispatch();
        return this.currentMask && t.aggregate(this.currentMask._appendEager()), t;
      }
    }, {
      key: "appendTail",
      value: function appendTail(t) {
        var e = new v();
        return t && e.aggregate(this._applyDispatch("", {}, t)), e.aggregate(this.currentMask ? this.currentMask.appendTail(t) : _get(_getPrototypeOf(M.prototype), "appendTail", this).call(this, t));
      }
    }, {
      key: "currentMaskFlags",
      value: function currentMaskFlags(t) {
        var e, s;
        return _objectSpread(_objectSpread({}, t), {}, {
          _beforeTailState: (null == (e = t._beforeTailState) ? void 0 : e.currentMaskRef) === this.currentMask && (null == (s = t._beforeTailState) ? void 0 : s.currentMask) || t._beforeTailState
        });
      }
    }, {
      key: "doDispatch",
      value: function doDispatch(t, e, s) {
        return void 0 === e && (e = {}), void 0 === s && (s = ""), this.dispatch(t, this, e, s);
      }
    }, {
      key: "doValidate",
      value: function doValidate(t) {
        return _get(_getPrototypeOf(M.prototype), "doValidate", this).call(this, t) && (!this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(t)));
      }
    }, {
      key: "doPrepare",
      value: function doPrepare(t, e) {
        void 0 === e && (e = {});
        var _get$call3 = _get(_getPrototypeOf(M.prototype), "doPrepare", this).call(this, t, e),
          _get$call4 = _slicedToArray(_get$call3, 2),
          s = _get$call4[0],
          i = _get$call4[1];
        if (this.currentMask) {
          var _get$call5, _get$call6;
          var _t10;
          (_get$call5 = _get(_getPrototypeOf(M.prototype), "doPrepare", this).call(this, s, this.currentMaskFlags(e)), _get$call6 = _slicedToArray(_get$call5, 2), s = _get$call6[0], _t10 = _get$call6[1]), i = i.aggregate(_t10);
        }
        return [s, i];
      }
    }, {
      key: "doPrepareChar",
      value: function doPrepareChar(t, e) {
        void 0 === e && (e = {});
        var _get$call7 = _get(_getPrototypeOf(M.prototype), "doPrepareChar", this).call(this, t, e),
          _get$call8 = _slicedToArray(_get$call7, 2),
          s = _get$call8[0],
          i = _get$call8[1];
        if (this.currentMask) {
          var _get$call9, _get$call10;
          var _t11;
          (_get$call9 = _get(_getPrototypeOf(M.prototype), "doPrepareChar", this).call(this, s, this.currentMaskFlags(e)), _get$call10 = _slicedToArray(_get$call9, 2), s = _get$call10[0], _t11 = _get$call10[1]), i = i.aggregate(_t11);
        }
        return [s, i];
      }
    }, {
      key: "reset",
      value: function reset() {
        var t;
        null == (t = this.currentMask) || t.reset(), this.compiledMasks.forEach(function (t) {
          return t.reset();
        });
      }
    }, {
      key: "value",
      get: function get() {
        return this.exposeMask ? this.exposeMask.value : this.currentMask ? this.currentMask.value : "";
      },
      set: function set(t) {
        this.exposeMask ? (this.exposeMask.value = t, this.currentMask = this.exposeMask, this._applyDispatch()) : _set(_getPrototypeOf(M.prototype), "value", t, this, true);
      }
    }, {
      key: "unmaskedValue",
      get: function get() {
        return this.exposeMask ? this.exposeMask.unmaskedValue : this.currentMask ? this.currentMask.unmaskedValue : "";
      },
      set: function set(t) {
        this.exposeMask ? (this.exposeMask.unmaskedValue = t, this.currentMask = this.exposeMask, this._applyDispatch()) : _set(_getPrototypeOf(M.prototype), "unmaskedValue", t, this, true);
      }
    }, {
      key: "typedValue",
      get: function get() {
        return this.exposeMask ? this.exposeMask.typedValue : this.currentMask ? this.currentMask.typedValue : "";
      },
      set: function set(t) {
        if (this.exposeMask) return this.exposeMask.typedValue = t, this.currentMask = this.exposeMask, void this._applyDispatch();
        var e = String(t);
        this.currentMask && (this.currentMask.typedValue = t, e = this.currentMask.unmaskedValue), this.unmaskedValue = e;
      }
    }, {
      key: "displayValue",
      get: function get() {
        return this.currentMask ? this.currentMask.displayValue : "";
      }
    }, {
      key: "isComplete",
      get: function get() {
        var t;
        return Boolean(null == (t = this.currentMask) ? void 0 : t.isComplete);
      }
    }, {
      key: "isFilled",
      get: function get() {
        var t;
        return Boolean(null == (t = this.currentMask) ? void 0 : t.isFilled);
      }
    }, {
      key: "remove",
      value: function remove(t, e) {
        var s = new v();
        return this.currentMask && s.aggregate(this.currentMask.remove(t, e)).aggregate(this._applyDispatch()), s;
      }
    }, {
      key: "state",
      get: function get() {
        var t;
        return _objectSpread(_objectSpread({}, _get(_getPrototypeOf(M.prototype), "state", this)), {}, {
          _rawInputValue: this.rawInputValue,
          compiledMasks: this.compiledMasks.map(function (t) {
            return t.state;
          }),
          currentMaskRef: this.currentMask,
          currentMask: null == (t = this.currentMask) ? void 0 : t.state
        });
      },
      set: function set(t) {
        var e = t.compiledMasks,
          s = t.currentMaskRef,
          i = t.currentMask,
          a = _objectWithoutProperties(t, _excluded11);
        e && this.compiledMasks.forEach(function (t, s) {
          return t.state = e[s];
        }), null != s && (this.currentMask = s, this.currentMask.state = i), _set(_getPrototypeOf(M.prototype), "state", a, this, true);
      }
    }, {
      key: "extractInput",
      value: function extractInput(t, e, s) {
        return this.currentMask ? this.currentMask.extractInput(t, e, s) : "";
      }
    }, {
      key: "extractTail",
      value: function extractTail(t, e) {
        return this.currentMask ? this.currentMask.extractTail(t, e) : _get(_getPrototypeOf(M.prototype), "extractTail", this).call(this, t, e);
      }
    }, {
      key: "doCommit",
      value: function doCommit() {
        this.currentMask && this.currentMask.doCommit(), _get(_getPrototypeOf(M.prototype), "doCommit", this).call(this);
      }
    }, {
      key: "nearestInputPos",
      value: function nearestInputPos(t, e) {
        return this.currentMask ? this.currentMask.nearestInputPos(t, e) : _get(_getPrototypeOf(M.prototype), "nearestInputPos", this).call(this, t, e);
      }
    }, {
      key: "overwrite",
      get: function get() {
        return this.currentMask ? this.currentMask.overwrite : this._overwrite;
      },
      set: function set(t) {
        this._overwrite = t;
      }
    }, {
      key: "eager",
      get: function get() {
        return this.currentMask ? this.currentMask.eager : this._eager;
      },
      set: function set(t) {
        this._eager = t;
      }
    }, {
      key: "skipInvalid",
      get: function get() {
        return this.currentMask ? this.currentMask.skipInvalid : this._skipInvalid;
      },
      set: function set(t) {
        this._skipInvalid = t;
      }
    }, {
      key: "autofix",
      get: function get() {
        return this.currentMask ? this.currentMask.autofix : this._autofix;
      },
      set: function set(t) {
        this._autofix = t;
      }
    }, {
      key: "maskEquals",
      value: function maskEquals(t) {
        return Array.isArray(t) ? this.compiledMasks.every(function (e, s) {
          if (!t[s]) return;
          var _t$s = t[s],
            i = _t$s.mask,
            a = _objectWithoutProperties(_t$s, _excluded12);
          return r(e, a) && e.maskEquals(i);
        }) : _get(_getPrototypeOf(M.prototype), "maskEquals", this).call(this, t);
      }
    }, {
      key: "typedValueEquals",
      value: function typedValueEquals(t) {
        var e;
        return Boolean(null == (e = this.currentMask) ? void 0 : e.typedValueEquals(t));
      }
    }]);
    return M;
  }(C);
  M.DEFAULTS = _objectSpread(_objectSpread({}, C.DEFAULTS), {}, {
    dispatch: function dispatch(t, e, s, i) {
      if (!e.compiledMasks.length) return;
      var u = e.rawInputValue,
        n = e.compiledMasks.map(function (n, r) {
          var h = e.currentMask === n,
            o = h ? n.displayValue.length : n.nearestInputPos(n.displayValue.length, a.FORCE_LEFT);
          return n.rawInputValue !== u ? (n.reset(), n.append(u, {
            raw: !0
          })) : h || n.remove(o), n.append(t, e.currentMaskFlags(s)), n.appendTail(i), {
            index: r,
            weight: n.rawInputValue.length,
            totalInputPositions: n.totalInputPositions(0, Math.max(o, n.nearestInputPos(n.displayValue.length, a.FORCE_LEFT)))
          };
        });
      return n.sort(function (t, e) {
        return e.weight - t.weight || e.totalInputPositions - t.totalInputPositions;
      }), e.compiledMasks[n[0].index];
    }
  }), o.MaskedDynamic = M;
  var I = /*#__PURE__*/function (_b3) {
    _inherits(I, _b3);
    var _super9 = _createSuper(I);
    function I(t) {
      _classCallCheck(this, I);
      return _super9.call(this, _objectSpread(_objectSpread({}, I.DEFAULTS), t));
    }
    _createClass(I, [{
      key: "updateOptions",
      value: function updateOptions(t) {
        _get(_getPrototypeOf(I.prototype), "updateOptions", this).call(this, t);
      }
    }, {
      key: "_update",
      value: function _update(t) {
        var e = t["enum"],
          s = _objectWithoutProperties(t, _excluded13);
        if (e) {
          var _t12 = e.map(function (t) {
              return t.length;
            }),
            _i9 = Math.min.apply(Math, _toConsumableArray(_t12)),
            _a7 = Math.max.apply(Math, _toConsumableArray(_t12)) - _i9;
          s.mask = "*".repeat(_i9), _a7 && (s.mask += "[" + "*".repeat(_a7) + "]"), this["enum"] = e;
        }
        _get(_getPrototypeOf(I.prototype), "_update", this).call(this, s);
      }
    }, {
      key: "_appendCharRaw",
      value: function _appendCharRaw(t, e) {
        var _this16 = this;
        void 0 === e && (e = {});
        var s = Math.min(this.nearestInputPos(0, a.FORCE_RIGHT), this.value.length),
          i = this["enum"].filter(function (e) {
            return _this16.matchValue(e, _this16.unmaskedValue + t, s);
          });
        if (i.length) {
          1 === i.length && this._forEachBlocksInRange(0, this.value.length, function (t, s) {
            var a = i[0][s];
            s >= _this16.value.length || a === t.value || (t.reset(), t._appendChar(a, e));
          });
          var _t13 = _get(_getPrototypeOf(I.prototype), "_appendCharRaw", this).call(this, i[0][this.value.length], e);
          return 1 === i.length && i[0].slice(this.unmaskedValue.length).split("").forEach(function (e) {
            return _t13.aggregate(_get(_getPrototypeOf(I.prototype), "_appendCharRaw", _this16).call(_this16, e));
          }), _t13;
        }
        return new v();
      }
    }, {
      key: "extractTail",
      value: function extractTail(t, e) {
        return void 0 === t && (t = 0), void 0 === e && (e = this.displayValue.length), new E("", t);
      }
    }, {
      key: "remove",
      value: function remove(t, e) {
        var _this17 = this;
        if (void 0 === t && (t = 0), void 0 === e && (e = this.displayValue.length), t === e) return new v();
        var s = Math.min(_get(_getPrototypeOf(I.prototype), "nearestInputPos", this).call(this, 0, a.FORCE_RIGHT), this.value.length);
        var i;
        for (i = t; i >= 0; --i) {
          if (this["enum"].filter(function (t) {
            return _this17.matchValue(t, _this17.value.slice(s, i), s);
          }).length > 1) break;
        }
        var u = _get(_getPrototypeOf(I.prototype), "remove", this).call(this, i, e);
        return u.tailShift += i - t, u;
      }
    }]);
    return I;
  }(b);
  I.DEFAULTS = _objectSpread(_objectSpread({}, b.DEFAULTS), {}, {
    matchValue: function matchValue(t, e, s) {
      return t.indexOf(e, s) === s;
    }
  }), o.MaskedEnum = I;
  var V = /*#__PURE__*/function (_C4) {
    _inherits(V, _C4);
    var _super10 = _createSuper(V);
    function V() {
      _classCallCheck(this, V);
      return _super10.apply(this, arguments);
    }
    _createClass(V, [{
      key: "updateOptions",
      value: function updateOptions(t) {
        _get(_getPrototypeOf(V.prototype), "updateOptions", this).call(this, t);
      }
    }, {
      key: "_update",
      value: function _update(t) {
        _get(_getPrototypeOf(V.prototype), "_update", this).call(this, _objectSpread(_objectSpread({}, t), {}, {
          validate: t.mask
        }));
      }
    }]);
    return V;
  }(C);
  var T;
  o.MaskedFunction = V;
  var w = /*#__PURE__*/function (_C5) {
    _inherits(w, _C5);
    var _super11 = _createSuper(w);
    function w(t) {
      _classCallCheck(this, w);
      return _super11.call(this, _objectSpread(_objectSpread({}, w.DEFAULTS), t));
    }
    _createClass(w, [{
      key: "updateOptions",
      value: function updateOptions(t) {
        _get(_getPrototypeOf(w.prototype), "updateOptions", this).call(this, t);
      }
    }, {
      key: "_update",
      value: function _update(t) {
        _get(_getPrototypeOf(w.prototype), "_update", this).call(this, t), this._updateRegExps();
      }
    }, {
      key: "_updateRegExps",
      value: function _updateRegExps() {
        var t = "^" + (this.allowNegative ? "[+|\\-]?" : ""),
          e = (this.scale ? "(" + n(this.radix) + "\\d{0," + this.scale + "})?" : "") + "$";
        this._numberRegExp = new RegExp(t + "\\d*" + e), this._mapToRadixRegExp = new RegExp("[" + this.mapToRadix.map(n).join("") + "]", "g"), this._thousandsSeparatorRegExp = new RegExp(n(this.thousandsSeparator), "g");
      }
    }, {
      key: "_removeThousandsSeparators",
      value: function _removeThousandsSeparators(t) {
        return t.replace(this._thousandsSeparatorRegExp, "");
      }
    }, {
      key: "_insertThousandsSeparators",
      value: function _insertThousandsSeparators(t) {
        var e = t.split(this.radix);
        return e[0] = e[0].replace(/\B(?=(\d{3})+(?!\d))/g, this.thousandsSeparator), e.join(this.radix);
      }
    }, {
      key: "doPrepareChar",
      value: function doPrepareChar(t, e) {
        void 0 === e && (e = {});
        var _get$call11 = _get(_getPrototypeOf(w.prototype), "doPrepareChar", this).call(this, this._removeThousandsSeparators(this.scale && this.mapToRadix.length && (e.input && e.raw || !e.input && !e.raw) ? t.replace(this._mapToRadixRegExp, this.radix) : t), e),
          _get$call12 = _slicedToArray(_get$call11, 2),
          s = _get$call12[0],
          i = _get$call12[1];
        return t && !s && (i.skip = !0), !s || this.allowPositive || this.value || "-" === s || i.aggregate(this._appendChar("-")), [s, i];
      }
    }, {
      key: "_separatorsCount",
      value: function _separatorsCount(t, e) {
        void 0 === e && (e = !1);
        var s = 0;
        for (var _i10 = 0; _i10 < t; ++_i10) {
          this._value.indexOf(this.thousandsSeparator, _i10) === _i10 && (++s, e && (t += this.thousandsSeparator.length));
        }
        return s;
      }
    }, {
      key: "_separatorsCountFromSlice",
      value: function _separatorsCountFromSlice(t) {
        return void 0 === t && (t = this._value), this._separatorsCount(this._removeThousandsSeparators(t).length, !0);
      }
    }, {
      key: "extractInput",
      value: function extractInput(t, e, s) {
        var _this$_adjustRangeWit, _this$_adjustRangeWit2;
        return void 0 === t && (t = 0), void 0 === e && (e = this.displayValue.length), (_this$_adjustRangeWit = this._adjustRangeWithSeparators(t, e), _this$_adjustRangeWit2 = _slicedToArray(_this$_adjustRangeWit, 2), t = _this$_adjustRangeWit2[0], e = _this$_adjustRangeWit2[1]), this._removeThousandsSeparators(_get(_getPrototypeOf(w.prototype), "extractInput", this).call(this, t, e, s));
      }
    }, {
      key: "_appendCharRaw",
      value: function _appendCharRaw(t, e) {
        void 0 === e && (e = {});
        var s = e.tail && e._beforeTailState ? e._beforeTailState._value : this._value,
          i = this._separatorsCountFromSlice(s);
        this._value = this._removeThousandsSeparators(this.value);
        var a = this._value;
        this._value += t;
        var u = this.number;
        var n,
          r = !isNaN(u),
          h = !1;
        if (r) {
          var _t14;
          null != this.min && this.min < 0 && this.number < this.min && (_t14 = this.min), null != this.max && this.max > 0 && this.number > this.max && (_t14 = this.max), null != _t14 && (this.autofix ? (this._value = this.format(_t14, this).replace(w.UNMASKED_RADIX, this.radix), h || (h = a === this._value && !e.tail)) : r = !1), r && (r = Boolean(this._value.match(this._numberRegExp)));
        }
        r ? n = new v({
          inserted: this._value.slice(a.length),
          rawInserted: h ? "" : t,
          skip: h
        }) : (this._value = a, n = new v()), this._value = this._insertThousandsSeparators(this._value);
        var o = e.tail && e._beforeTailState ? e._beforeTailState._value : this._value,
          l = this._separatorsCountFromSlice(o);
        return n.tailShift += (l - i) * this.thousandsSeparator.length, n;
      }
    }, {
      key: "_findSeparatorAround",
      value: function _findSeparatorAround(t) {
        if (this.thousandsSeparator) {
          var _e12 = t - this.thousandsSeparator.length + 1,
            _s14 = this.value.indexOf(this.thousandsSeparator, _e12);
          if (_s14 <= t) return _s14;
        }
        return -1;
      }
    }, {
      key: "_adjustRangeWithSeparators",
      value: function _adjustRangeWithSeparators(t, e) {
        var s = this._findSeparatorAround(t);
        s >= 0 && (t = s);
        var i = this._findSeparatorAround(e);
        return i >= 0 && (e = i + this.thousandsSeparator.length), [t, e];
      }
    }, {
      key: "remove",
      value: function remove(t, e) {
        var _this$_adjustRangeWit3, _this$_adjustRangeWit4;
        void 0 === t && (t = 0), void 0 === e && (e = this.displayValue.length), (_this$_adjustRangeWit3 = this._adjustRangeWithSeparators(t, e), _this$_adjustRangeWit4 = _slicedToArray(_this$_adjustRangeWit3, 2), t = _this$_adjustRangeWit4[0], e = _this$_adjustRangeWit4[1]);
        var s = this.value.slice(0, t),
          i = this.value.slice(e),
          a = this._separatorsCount(s.length);
        this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(s + i));
        var u = this._separatorsCountFromSlice(s);
        return new v({
          tailShift: (u - a) * this.thousandsSeparator.length
        });
      }
    }, {
      key: "nearestInputPos",
      value: function nearestInputPos(t, e) {
        if (!this.thousandsSeparator) return t;
        switch (e) {
          case a.NONE:
          case a.LEFT:
          case a.FORCE_LEFT:
            {
              var _s15 = this._findSeparatorAround(t - 1);
              if (_s15 >= 0) {
                var _i11 = _s15 + this.thousandsSeparator.length;
                if (t < _i11 || this.value.length <= _i11 || e === a.FORCE_LEFT) return _s15;
              }
              break;
            }
          case a.RIGHT:
          case a.FORCE_RIGHT:
            {
              var _e13 = this._findSeparatorAround(t);
              if (_e13 >= 0) return _e13 + this.thousandsSeparator.length;
            }
        }
        return t;
      }
    }, {
      key: "doCommit",
      value: function doCommit() {
        if (this.value) {
          var _t15 = this.number;
          var _e14 = _t15;
          null != this.min && (_e14 = Math.max(_e14, this.min)), null != this.max && (_e14 = Math.min(_e14, this.max)), _e14 !== _t15 && (this.unmaskedValue = this.format(_e14, this));
          var _s16 = this.value;
          this.normalizeZeros && (_s16 = this._normalizeZeros(_s16)), this.padFractionalZeros && this.scale > 0 && (_s16 = this._padFractionalZeros(_s16)), this._value = _s16;
        }
        _get(_getPrototypeOf(w.prototype), "doCommit", this).call(this);
      }
    }, {
      key: "_normalizeZeros",
      value: function _normalizeZeros(t) {
        var e = this._removeThousandsSeparators(t).split(this.radix);
        return e[0] = e[0].replace(/^(\D*)(0*)(\d*)/, function (t, e, s, i) {
          return e + i;
        }), t.length && !/\d$/.test(e[0]) && (e[0] = e[0] + "0"), e.length > 1 && (e[1] = e[1].replace(/0*$/, ""), e[1].length || (e.length = 1)), this._insertThousandsSeparators(e.join(this.radix));
      }
    }, {
      key: "_padFractionalZeros",
      value: function _padFractionalZeros(t) {
        if (!t) return t;
        var e = t.split(this.radix);
        return e.length < 2 && e.push(""), e[1] = e[1].padEnd(this.scale, "0"), e.join(this.radix);
      }
    }, {
      key: "doSkipInvalid",
      value: function doSkipInvalid(t, e, s) {
        void 0 === e && (e = {});
        var i = 0 === this.scale && t !== this.thousandsSeparator && (t === this.radix || t === w.UNMASKED_RADIX || this.mapToRadix.includes(t));
        return _get(_getPrototypeOf(w.prototype), "doSkipInvalid", this).call(this, t, e, s) && !i;
      }
    }, {
      key: "unmaskedValue",
      get: function get() {
        return this._removeThousandsSeparators(this._normalizeZeros(this.value)).replace(this.radix, w.UNMASKED_RADIX);
      },
      set: function set(t) {
        _set(_getPrototypeOf(w.prototype), "unmaskedValue", t, this, true);
      }
    }, {
      key: "typedValue",
      get: function get() {
        return this.parse(this.unmaskedValue, this);
      },
      set: function set(t) {
        this.rawInputValue = this.format(t, this).replace(w.UNMASKED_RADIX, this.radix);
      }
    }, {
      key: "number",
      get: function get() {
        return this.typedValue;
      },
      set: function set(t) {
        this.typedValue = t;
      }
    }, {
      key: "allowNegative",
      get: function get() {
        return null != this.min && this.min < 0 || null != this.max && this.max < 0;
      }
    }, {
      key: "allowPositive",
      get: function get() {
        return null != this.min && this.min > 0 || null != this.max && this.max > 0;
      }
    }, {
      key: "typedValueEquals",
      value: function typedValueEquals(t) {
        return (_get(_getPrototypeOf(w.prototype), "typedValueEquals", this).call(this, t) || w.EMPTY_VALUES.includes(t) && w.EMPTY_VALUES.includes(this.typedValue)) && !(0 === t && "" === this.value);
      }
    }]);
    return w;
  }(C);
  T = w, w.UNMASKED_RADIX = ".", w.EMPTY_VALUES = [].concat(_toConsumableArray(C.EMPTY_VALUES), [0]), w.DEFAULTS = _objectSpread(_objectSpread({}, C.DEFAULTS), {}, {
    mask: Number,
    radix: ",",
    thousandsSeparator: "",
    mapToRadix: [T.UNMASKED_RADIX],
    min: Number.MIN_SAFE_INTEGER,
    max: Number.MAX_SAFE_INTEGER,
    scale: 2,
    normalizeZeros: !0,
    padFractionalZeros: !1,
    parse: Number,
    format: function format(t) {
      return t.toLocaleString("en-US", {
        useGrouping: !1,
        maximumFractionDigits: 20
      });
    }
  }), o.MaskedNumber = w;
  var R = {
    MASKED: "value",
    UNMASKED: "unmaskedValue",
    TYPED: "typedValue"
  };
  function P(t, e, s) {
    void 0 === e && (e = R.MASKED), void 0 === s && (s = R.MASKED);
    var i = d(t);
    return function (t) {
      return i.runIsolated(function (i) {
        return i[e] = t, i[s];
      });
    };
  }
  function O(t, e, s, i) {
    return P(e, s, i)(t);
  }
  o.PIPE_TYPE = R, o.createPipe = P, o.pipe = O;
  var L = /*#__PURE__*/function (_b4) {
    _inherits(L, _b4);
    var _super12 = _createSuper(L);
    function L(t) {
      _classCallCheck(this, L);
      return _super12.call(this, t);
    }
    _createClass(L, [{
      key: "repeatFrom",
      get: function get() {
        var t;
        return null != (t = Array.isArray(this.repeat) ? this.repeat[0] : this.repeat === 1 / 0 ? 0 : this.repeat) ? t : 0;
      }
    }, {
      key: "repeatTo",
      get: function get() {
        var t;
        return null != (t = Array.isArray(this.repeat) ? this.repeat[1] : this.repeat) ? t : 1 / 0;
      }
    }, {
      key: "updateOptions",
      value: function updateOptions(t) {
        _get(_getPrototypeOf(L.prototype), "updateOptions", this).call(this, t);
      }
    }, {
      key: "_update",
      value: function _update(t) {
        var e, s, i;
        var _p3 = p(t),
          a = _p3.repeat,
          u = _objectWithoutProperties(_p3, _excluded14);
        this._blockOpts = Object.assign({}, this._blockOpts, u);
        var n = d(this._blockOpts);
        this.repeat = null != (e = null != (s = null != a ? a : n.repeat) ? s : this.repeat) ? e : 1 / 0, _get(_getPrototypeOf(L.prototype), "_update", this).call(this, {
          mask: "m".repeat(Math.max(this.repeatTo === 1 / 0 && (null == (i = this._blocks) ? void 0 : i.length) || 0, this.repeatFrom)),
          blocks: {
            m: n
          },
          eager: n.eager,
          overwrite: n.overwrite,
          skipInvalid: n.skipInvalid,
          lazy: n.lazy,
          placeholderChar: n.placeholderChar,
          displayChar: n.displayChar
        });
      }
    }, {
      key: "_allocateBlock",
      value: function _allocateBlock(t) {
        return t < this._blocks.length ? this._blocks[t] : this.repeatTo === 1 / 0 || this._blocks.length < this.repeatTo ? (this._blocks.push(d(this._blockOpts)), this.mask += "m", this._blocks[this._blocks.length - 1]) : void 0;
      }
    }, {
      key: "_appendCharRaw",
      value: function _appendCharRaw(t, e) {
        void 0 === e && (e = {});
        var s = new v();
        for (var _r2, _h2, _o = null != (i = null == (a = this._mapPosToBlock(this.displayValue.length)) ? void 0 : a.index) ? i : Math.max(this._blocks.length - 1, 0); _r2 = null != (u = this._blocks[_o]) ? u : _h2 = !_h2 && this._allocateBlock(_o); ++_o) {
          var i, a, u, n;
          var _l = _r2._appendChar(t, _objectSpread(_objectSpread({}, e), {}, {
            _beforeTailState: null == (n = e._beforeTailState) || null == (n = n._blocks) ? void 0 : n[_o]
          }));
          if (_l.skip && _h2) {
            this._blocks.pop(), this.mask = this.mask.slice(1);
            break;
          }
          if (s.aggregate(_l), _l.consumed) break;
        }
        return s;
      }
    }, {
      key: "_trimEmptyTail",
      value: function _trimEmptyTail(t, e) {
        var s, i;
        void 0 === t && (t = 0);
        var a = Math.max((null == (s = this._mapPosToBlock(t)) ? void 0 : s.index) || 0, this.repeatFrom, 0);
        var u;
        null != e && (u = null == (i = this._mapPosToBlock(e)) ? void 0 : i.index), null == u && (u = this._blocks.length - 1);
        var n = 0;
        for (var _t16 = u; a <= _t16 && !this._blocks[_t16].unmaskedValue; --_t16, ++n) {
          ;
        }
        n && (this._blocks.splice(u - n + 1, n), this.mask = this.mask.slice(n));
      }
    }, {
      key: "reset",
      value: function reset() {
        _get(_getPrototypeOf(L.prototype), "reset", this).call(this), this._trimEmptyTail();
      }
    }, {
      key: "remove",
      value: function remove(t, e) {
        void 0 === t && (t = 0), void 0 === e && (e = this.displayValue.length);
        var s = _get(_getPrototypeOf(L.prototype), "remove", this).call(this, t, e);
        return this._trimEmptyTail(t, e), s;
      }
    }, {
      key: "totalInputPositions",
      value: function totalInputPositions(t, e) {
        return void 0 === t && (t = 0), null == e && this.repeatTo === 1 / 0 ? 1 / 0 : _get(_getPrototypeOf(L.prototype), "totalInputPositions", this).call(this, t, e);
      }
    }, {
      key: "state",
      get: function get() {
        return _get(_getPrototypeOf(L.prototype), "state", this);
      },
      set: function set(t) {
        this._blocks.length = t._blocks.length, this.mask = this.mask.slice(0, this._blocks.length), _set(_getPrototypeOf(L.prototype), "state", t, this, true);
      }
    }]);
    return L;
  }(b);
  o.RepeatBlock = L;
  try {
    globalThis.IMask = o;
  } catch (_unused4) {}
  t.ChangeDetails = v, t.ChunksTailDetails = A, t.DIRECTION = a, t.HTMLContenteditableMaskElement = m, t.HTMLInputMaskElement = k, t.HTMLMaskElement = g, t.InputMask = f, t.MaskElement = c, t.Masked = C, t.MaskedDate = y, t.MaskedDynamic = M, t.MaskedEnum = I, t.MaskedFunction = V, t.MaskedNumber = w, t.MaskedPattern = b, t.MaskedRange = D, t.MaskedRegExp = B, t.PIPE_TYPE = R, t.PatternFixedDefinition = x, t.PatternInputDefinition = S, t.RepeatBlock = L, t.createMask = d, t.createPipe = P, t["default"] = o, t.forceDirection = u, t.normalizeOpts = p, t.pipe = O, Object.defineProperty(t, "__esModule", {
    value: !0
  });
});

/**
 * Swiper 11.0.7
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 * https://swiperjs.com
 *
 * Copyright 2014-2024 Vladimir Kharlampidi
 *
 * Released under the MIT License
 *
 * Released on: March 7, 2024
 */

var Swiper = function () {
  "use strict";

  function e(e) {
    return null !== e && "object" == _typeof(e) && "constructor" in e && e.constructor === Object;
  }
  function t(s, i) {
    void 0 === s && (s = {}), void 0 === i && (i = {}), Object.keys(i).forEach(function (a) {
      void 0 === s[a] ? s[a] = i[a] : e(i[a]) && e(s[a]) && Object.keys(i[a]).length > 0 && t(s[a], i[a]);
    });
  }
  var s = {
    body: {},
    addEventListener: function addEventListener() {},
    removeEventListener: function removeEventListener() {},
    activeElement: {
      blur: function blur() {},
      nodeName: ""
    },
    querySelector: function querySelector() {
      return null;
    },
    querySelectorAll: function querySelectorAll() {
      return [];
    },
    getElementById: function getElementById() {
      return null;
    },
    createEvent: function createEvent() {
      return {
        initEvent: function initEvent() {}
      };
    },
    createElement: function createElement() {
      return {
        children: [],
        childNodes: [],
        style: {},
        setAttribute: function setAttribute() {},
        getElementsByTagName: function getElementsByTagName() {
          return [];
        }
      };
    },
    createElementNS: function createElementNS() {
      return {};
    },
    importNode: function importNode() {
      return null;
    },
    location: {
      hash: "",
      host: "",
      hostname: "",
      href: "",
      origin: "",
      pathname: "",
      protocol: "",
      search: ""
    }
  };
  function i() {
    var e = "undefined" != typeof document ? document : {};
    return t(e, s), e;
  }
  var a = {
    document: s,
    navigator: {
      userAgent: ""
    },
    location: {
      hash: "",
      host: "",
      hostname: "",
      href: "",
      origin: "",
      pathname: "",
      protocol: "",
      search: ""
    },
    history: {
      replaceState: function replaceState() {},
      pushState: function pushState() {},
      go: function go() {},
      back: function back() {}
    },
    CustomEvent: function CustomEvent() {
      return this;
    },
    addEventListener: function addEventListener() {},
    removeEventListener: function removeEventListener() {},
    getComputedStyle: function getComputedStyle() {
      return {
        getPropertyValue: function getPropertyValue() {
          return "";
        }
      };
    },
    Image: function Image() {},
    Date: function Date() {},
    screen: {},
    setTimeout: function setTimeout() {},
    clearTimeout: function clearTimeout() {},
    matchMedia: function matchMedia() {
      return {};
    },
    requestAnimationFrame: function requestAnimationFrame(e) {
      return "undefined" == typeof setTimeout ? (e(), null) : setTimeout(e, 0);
    },
    cancelAnimationFrame: function cancelAnimationFrame(e) {
      "undefined" != typeof setTimeout && clearTimeout(e);
    }
  };
  function r() {
    var e = "undefined" != typeof window ? window : {};
    return t(e, a), e;
  }
  function l(e) {
    return void 0 === e && (e = ""), e.trim().split(" ").filter(function (e) {
      return !!e.trim();
    });
  }
  function n(e, t) {
    return void 0 === t && (t = 0), setTimeout(e, t);
  }
  function o() {
    return Date.now();
  }
  function d(e, t) {
    void 0 === t && (t = "x");
    var s = r();
    var i, a, l;
    var n = function (e) {
      var t = r();
      var s;
      return t.getComputedStyle && (s = t.getComputedStyle(e, null)), !s && e.currentStyle && (s = e.currentStyle), s || (s = e.style), s;
    }(e);
    return s.WebKitCSSMatrix ? (a = n.transform || n.webkitTransform, a.split(",").length > 6 && (a = a.split(", ").map(function (e) {
      return e.replace(",", ".");
    }).join(", ")), l = new s.WebKitCSSMatrix("none" === a ? "" : a)) : (l = n.MozTransform || n.OTransform || n.MsTransform || n.msTransform || n.transform || n.getPropertyValue("transform").replace("translate(", "matrix(1, 0, 0, 1,"), i = l.toString().split(",")), "x" === t && (a = s.WebKitCSSMatrix ? l.m41 : 16 === i.length ? parseFloat(i[12]) : parseFloat(i[4])), "y" === t && (a = s.WebKitCSSMatrix ? l.m42 : 16 === i.length ? parseFloat(i[13]) : parseFloat(i[5])), a || 0;
  }
  function c(e) {
    return "object" == _typeof(e) && null !== e && e.constructor && "Object" === Object.prototype.toString.call(e).slice(8, -1);
  }
  function p() {
    var e = Object(arguments.length <= 0 ? void 0 : arguments[0]),
      t = ["__proto__", "constructor", "prototype"];
    for (var _i12 = 1; _i12 < arguments.length; _i12 += 1) {
      var _a8 = _i12 < 0 || arguments.length <= _i12 ? void 0 : arguments[_i12];
      if (null != _a8 && (s = _a8, !("undefined" != typeof window && void 0 !== window.HTMLElement ? s instanceof HTMLElement : s && (1 === s.nodeType || 11 === s.nodeType)))) {
        var _s17 = Object.keys(Object(_a8)).filter(function (e) {
          return t.indexOf(e) < 0;
        });
        for (var _t17 = 0, _i13 = _s17.length; _t17 < _i13; _t17 += 1) {
          var _i14 = _s17[_t17],
            _r3 = Object.getOwnPropertyDescriptor(_a8, _i14);
          void 0 !== _r3 && _r3.enumerable && (c(e[_i14]) && c(_a8[_i14]) ? _a8[_i14].__swiper__ ? e[_i14] = _a8[_i14] : p(e[_i14], _a8[_i14]) : !c(e[_i14]) && c(_a8[_i14]) ? (e[_i14] = {}, _a8[_i14].__swiper__ ? e[_i14] = _a8[_i14] : p(e[_i14], _a8[_i14])) : e[_i14] = _a8[_i14]);
        }
      }
    }
    var s;
    return e;
  }
  function u(e, t, s) {
    e.style.setProperty(t, s);
  }
  function m(e) {
    var t = e.swiper,
      s = e.targetPosition,
      i = e.side;
    var a = r(),
      l = -t.translate;
    var n,
      o = null;
    var d = t.params.speed;
    t.wrapperEl.style.scrollSnapType = "none", a.cancelAnimationFrame(t.cssModeFrameID);
    var c = s > l ? "next" : "prev",
      p = function p(e, t) {
        return "next" === c && e >= t || "prev" === c && e <= t;
      },
      u = function u() {
        n = new Date().getTime(), null === o && (o = n);
        var e = Math.max(Math.min((n - o) / d, 1), 0),
          r = .5 - Math.cos(e * Math.PI) / 2;
        var c = l + r * (s - l);
        if (p(c, s) && (c = s), t.wrapperEl.scrollTo(_defineProperty({}, i, c)), p(c, s)) return t.wrapperEl.style.overflow = "hidden", t.wrapperEl.style.scrollSnapType = "", setTimeout(function () {
          t.wrapperEl.style.overflow = "", t.wrapperEl.scrollTo(_defineProperty({}, i, c));
        }), void a.cancelAnimationFrame(t.cssModeFrameID);
        t.cssModeFrameID = a.requestAnimationFrame(u);
      };
    u();
  }
  function h(e, t) {
    return void 0 === t && (t = ""), _toConsumableArray(e.children).filter(function (e) {
      return e.matches(t);
    });
  }
  function f(e) {
    try {
      return void console.warn(e);
    } catch (e) {}
  }
  function v(e, t) {
    var _s$classList;
    void 0 === t && (t = []);
    var s = document.createElement(e);
    return (_s$classList = s.classList).add.apply(_s$classList, _toConsumableArray(Array.isArray(t) ? t : l(t))), s;
  }
  function g(e, t) {
    return r().getComputedStyle(e, null).getPropertyValue(t);
  }
  function b(e) {
    var t,
      s = e;
    if (s) {
      for (t = 0; null !== (s = s.previousSibling);) {
        1 === s.nodeType && (t += 1);
      }
      return t;
    }
  }
  function w(e, t) {
    var s = [];
    var i = e.parentElement;
    for (; i;) {
      t ? i.matches(t) && s.push(i) : s.push(i), i = i.parentElement;
    }
    return s;
  }
  function y(e, t, s) {
    var i = r();
    return s ? e["width" === t ? "offsetWidth" : "offsetHeight"] + parseFloat(i.getComputedStyle(e, null).getPropertyValue("width" === t ? "margin-right" : "margin-top")) + parseFloat(i.getComputedStyle(e, null).getPropertyValue("width" === t ? "margin-left" : "margin-bottom")) : e.offsetWidth;
  }
  function T(e) {
    return (Array.isArray(e) ? e : [e]).filter(function (e) {
      return !!e;
    });
  }
  var S, E, x;
  function C() {
    return S || (S = function () {
      var e = r(),
        t = i();
      return {
        smoothScroll: t.documentElement && t.documentElement.style && "scrollBehavior" in t.documentElement.style,
        touch: !!("ontouchstart" in e || e.DocumentTouch && t instanceof e.DocumentTouch)
      };
    }()), S;
  }
  function M(e) {
    return void 0 === e && (e = {}), E || (E = function (e) {
      var _ref5 = void 0 === e ? {} : e,
        t = _ref5.userAgent;
      var s = C(),
        i = r(),
        a = i.navigator.platform,
        l = t || i.navigator.userAgent,
        n = {
          ios: !1,
          android: !1
        },
        o = i.screen.width,
        d = i.screen.height,
        c = l.match(/(Android);?[\s\/]+([\d.]+)?/);
      var p = l.match(/(iPad).*OS\s([\d_]+)/);
      var u = l.match(/(iPod)(.*OS\s([\d_]+))?/),
        m = !p && l.match(/(iPhone\sOS|iOS)\s([\d_]+)/),
        h = "Win32" === a;
      var f = "MacIntel" === a;
      return !p && f && s.touch && ["1024x1366", "1366x1024", "834x1194", "1194x834", "834x1112", "1112x834", "768x1024", "1024x768", "820x1180", "1180x820", "810x1080", "1080x810"].indexOf("".concat(o, "x").concat(d)) >= 0 && (p = l.match(/(Version)\/([\d.]+)/), p || (p = [0, 1, "13_0_0"]), f = !1), c && !h && (n.os = "android", n.android = !0), (p || m || u) && (n.os = "ios", n.ios = !0), n;
    }(e)), E;
  }
  function L() {
    return x || (x = function () {
      var e = r(),
        t = M();
      var s = !1;
      function i() {
        var t = e.navigator.userAgent.toLowerCase();
        return t.indexOf("safari") >= 0 && t.indexOf("chrome") < 0 && t.indexOf("android") < 0;
      }
      if (i()) {
        var _t18 = String(e.navigator.userAgent);
        if (_t18.includes("Version/")) {
          var _t18$split$1$split$0$ = _t18.split("Version/")[1].split(" ")[0].split(".").map(function (e) {
              return Number(e);
            }),
            _t18$split$1$split$0$2 = _slicedToArray(_t18$split$1$split$0$, 2),
            _e15 = _t18$split$1$split$0$2[0],
            _i15 = _t18$split$1$split$0$2[1];
          s = _e15 < 16 || 16 === _e15 && _i15 < 2;
        }
      }
      var a = /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(e.navigator.userAgent),
        l = i();
      return {
        isSafari: s || l,
        needPerspectiveFix: s,
        need3dFix: l || a && t.ios,
        isWebView: a
      };
    }()), x;
  }
  var P = {
    on: function on(e, t, s) {
      var i = this;
      if (!i.eventsListeners || i.destroyed) return i;
      if ("function" != typeof t) return i;
      var a = s ? "unshift" : "push";
      return e.split(" ").forEach(function (e) {
        i.eventsListeners[e] || (i.eventsListeners[e] = []), i.eventsListeners[e][a](t);
      }), i;
    },
    once: function once(e, t, s) {
      var i = this;
      if (!i.eventsListeners || i.destroyed) return i;
      if ("function" != typeof t) return i;
      function a() {
        i.off(e, a), a.__emitterProxy && delete a.__emitterProxy;
        for (var s = arguments.length, r = new Array(s), l = 0; l < s; l++) {
          r[l] = arguments[l];
        }
        t.apply(i, r);
      }
      return a.__emitterProxy = t, i.on(e, a, s);
    },
    onAny: function onAny(e, t) {
      var s = this;
      if (!s.eventsListeners || s.destroyed) return s;
      if ("function" != typeof e) return s;
      var i = t ? "unshift" : "push";
      return s.eventsAnyListeners.indexOf(e) < 0 && s.eventsAnyListeners[i](e), s;
    },
    offAny: function offAny(e) {
      var t = this;
      if (!t.eventsListeners || t.destroyed) return t;
      if (!t.eventsAnyListeners) return t;
      var s = t.eventsAnyListeners.indexOf(e);
      return s >= 0 && t.eventsAnyListeners.splice(s, 1), t;
    },
    off: function off(e, t) {
      var s = this;
      return !s.eventsListeners || s.destroyed ? s : s.eventsListeners ? (e.split(" ").forEach(function (e) {
        void 0 === t ? s.eventsListeners[e] = [] : s.eventsListeners[e] && s.eventsListeners[e].forEach(function (i, a) {
          (i === t || i.__emitterProxy && i.__emitterProxy === t) && s.eventsListeners[e].splice(a, 1);
        });
      }), s) : s;
    },
    emit: function emit() {
      var e = this;
      if (!e.eventsListeners || e.destroyed) return e;
      if (!e.eventsListeners) return e;
      var t, s, i;
      for (var a = arguments.length, r = new Array(a), l = 0; l < a; l++) {
        r[l] = arguments[l];
      }
      "string" == typeof r[0] || Array.isArray(r[0]) ? (t = r[0], s = r.slice(1, r.length), i = e) : (t = r[0].events, s = r[0].data, i = r[0].context || e), s.unshift(i);
      return (Array.isArray(t) ? t : t.split(" ")).forEach(function (t) {
        e.eventsAnyListeners && e.eventsAnyListeners.length && e.eventsAnyListeners.forEach(function (e) {
          e.apply(i, [t].concat(_toConsumableArray(s)));
        }), e.eventsListeners && e.eventsListeners[t] && e.eventsListeners[t].forEach(function (e) {
          e.apply(i, s);
        });
      }), e;
    }
  };
  var k = function k(e, t) {
      if (!e || e.destroyed || !e.params) return;
      var s = t.closest(e.isElement ? "swiper-slide" : ".".concat(e.params.slideClass));
      if (s) {
        var _t19 = s.querySelector(".".concat(e.params.lazyPreloaderClass));
        !_t19 && e.isElement && (s.shadowRoot ? _t19 = s.shadowRoot.querySelector(".".concat(e.params.lazyPreloaderClass)) : requestAnimationFrame(function () {
          s.shadowRoot && (_t19 = s.shadowRoot.querySelector(".".concat(e.params.lazyPreloaderClass)), _t19 && _t19.remove());
        })), _t19 && _t19.remove();
      }
    },
    I = function I(e, t) {
      if (!e.slides[t]) return;
      var s = e.slides[t].querySelector('[loading="lazy"]');
      s && s.removeAttribute("loading");
    },
    A = function A(e) {
      if (!e || e.destroyed || !e.params) return;
      var t = e.params.lazyPreloadPrevNext;
      var s = e.slides.length;
      if (!s || !t || t < 0) return;
      t = Math.min(t, s);
      var i = "auto" === e.params.slidesPerView ? e.slidesPerViewDynamic() : Math.ceil(e.params.slidesPerView),
        a = e.activeIndex;
      if (e.params.grid && e.params.grid.rows > 1) {
        var _s18 = a,
          _r4 = [_s18 - t];
        return _r4.push.apply(_r4, _toConsumableArray(Array.from({
          length: t
        }).map(function (e, t) {
          return _s18 + i + t;
        }))), void e.slides.forEach(function (t, s) {
          _r4.includes(t.column) && I(e, s);
        });
      }
      var r = a + i - 1;
      if (e.params.rewind || e.params.loop) for (var _i16 = a - t; _i16 <= r + t; _i16 += 1) {
        var _t20 = (_i16 % s + s) % s;
        (_t20 < a || _t20 > r) && I(e, _t20);
      } else for (var _i17 = Math.max(a - t, 0); _i17 <= Math.min(r + t, s - 1); _i17 += 1) {
        _i17 !== a && (_i17 > r || _i17 < a) && I(e, _i17);
      }
    };
  var O = {
    updateSize: function updateSize() {
      var e = this;
      var t, s;
      var i = e.el;
      t = void 0 !== e.params.width && null !== e.params.width ? e.params.width : i.clientWidth, s = void 0 !== e.params.height && null !== e.params.height ? e.params.height : i.clientHeight, 0 === t && e.isHorizontal() || 0 === s && e.isVertical() || (t = t - parseInt(g(i, "padding-left") || 0, 10) - parseInt(g(i, "padding-right") || 0, 10), s = s - parseInt(g(i, "padding-top") || 0, 10) - parseInt(g(i, "padding-bottom") || 0, 10), Number.isNaN(t) && (t = 0), Number.isNaN(s) && (s = 0), Object.assign(e, {
        width: t,
        height: s,
        size: e.isHorizontal() ? t : s
      }));
    },
    updateSlides: function updateSlides() {
      var e = this;
      function t(t, s) {
        return parseFloat(t.getPropertyValue(e.getDirectionLabel(s)) || 0);
      }
      var s = e.params,
        i = e.wrapperEl,
        a = e.slidesEl,
        r = e.size,
        l = e.rtlTranslate,
        n = e.wrongRTL,
        o = e.virtual && s.virtual.enabled,
        d = o ? e.virtual.slides.length : e.slides.length,
        c = h(a, ".".concat(e.params.slideClass, ", swiper-slide")),
        p = o ? e.virtual.slides.length : c.length;
      var m = [];
      var f = [],
        v = [];
      var b = s.slidesOffsetBefore;
      "function" == typeof b && (b = s.slidesOffsetBefore.call(e));
      var w = s.slidesOffsetAfter;
      "function" == typeof w && (w = s.slidesOffsetAfter.call(e));
      var T = e.snapGrid.length,
        S = e.slidesGrid.length;
      var E = s.spaceBetween,
        x = -b,
        C = 0,
        M = 0;
      if (void 0 === r) return;
      "string" == typeof E && E.indexOf("%") >= 0 ? E = parseFloat(E.replace("%", "")) / 100 * r : "string" == typeof E && (E = parseFloat(E)), e.virtualSize = -E, c.forEach(function (e) {
        l ? e.style.marginLeft = "" : e.style.marginRight = "", e.style.marginBottom = "", e.style.marginTop = "";
      }), s.centeredSlides && s.cssMode && (u(i, "--swiper-centered-offset-before", ""), u(i, "--swiper-centered-offset-after", ""));
      var L = s.grid && s.grid.rows > 1 && e.grid;
      var P;
      L ? e.grid.initSlides(c) : e.grid && e.grid.unsetSlides();
      var k = "auto" === s.slidesPerView && s.breakpoints && Object.keys(s.breakpoints).filter(function (e) {
        return void 0 !== s.breakpoints[e].slidesPerView;
      }).length > 0;
      for (var _i18 = 0; _i18 < p; _i18 += 1) {
        var _a9 = void 0;
        if (P = 0, c[_i18] && (_a9 = c[_i18]), L && e.grid.updateSlide(_i18, _a9, c), !c[_i18] || "none" !== g(_a9, "display")) {
          if ("auto" === s.slidesPerView) {
            k && (c[_i18].style[e.getDirectionLabel("width")] = "");
            var _r5 = getComputedStyle(_a9),
              _l2 = _a9.style.transform,
              _n9 = _a9.style.webkitTransform;
            if (_l2 && (_a9.style.transform = "none"), _n9 && (_a9.style.webkitTransform = "none"), s.roundLengths) P = e.isHorizontal() ? y(_a9, "width", !0) : y(_a9, "height", !0);else {
              var _e16 = t(_r5, "width"),
                _s19 = t(_r5, "padding-left"),
                _i19 = t(_r5, "padding-right"),
                _l3 = t(_r5, "margin-left"),
                _n10 = t(_r5, "margin-right"),
                _o2 = _r5.getPropertyValue("box-sizing");
              if (_o2 && "border-box" === _o2) P = _e16 + _l3 + _n10;else {
                var _a10 = _a9,
                  _t21 = _a10.clientWidth,
                  _r6 = _a10.offsetWidth;
                P = _e16 + _s19 + _i19 + _l3 + _n10 + (_r6 - _t21);
              }
            }
            _l2 && (_a9.style.transform = _l2), _n9 && (_a9.style.webkitTransform = _n9), s.roundLengths && (P = Math.floor(P));
          } else P = (r - (s.slidesPerView - 1) * E) / s.slidesPerView, s.roundLengths && (P = Math.floor(P)), c[_i18] && (c[_i18].style[e.getDirectionLabel("width")] = "".concat(P, "px"));
          c[_i18] && (c[_i18].swiperSlideSize = P), v.push(P), s.centeredSlides ? (x = x + P / 2 + C / 2 + E, 0 === C && 0 !== _i18 && (x = x - r / 2 - E), 0 === _i18 && (x = x - r / 2 - E), Math.abs(x) < .001 && (x = 0), s.roundLengths && (x = Math.floor(x)), M % s.slidesPerGroup == 0 && m.push(x), f.push(x)) : (s.roundLengths && (x = Math.floor(x)), (M - Math.min(e.params.slidesPerGroupSkip, M)) % e.params.slidesPerGroup == 0 && m.push(x), f.push(x), x = x + P + E), e.virtualSize += P + E, C = P, M += 1;
        }
      }
      if (e.virtualSize = Math.max(e.virtualSize, r) + w, l && n && ("slide" === s.effect || "coverflow" === s.effect) && (i.style.width = "".concat(e.virtualSize + E, "px")), s.setWrapperSize && (i.style[e.getDirectionLabel("width")] = "".concat(e.virtualSize + E, "px")), L && e.grid.updateWrapperSize(P, m), !s.centeredSlides) {
        var _t22 = [];
        for (var _i20 = 0; _i20 < m.length; _i20 += 1) {
          var _a11 = m[_i20];
          s.roundLengths && (_a11 = Math.floor(_a11)), m[_i20] <= e.virtualSize - r && _t22.push(_a11);
        }
        m = _t22, Math.floor(e.virtualSize - r) - Math.floor(m[m.length - 1]) > 1 && m.push(e.virtualSize - r);
      }
      if (o && s.loop) {
        var _t23 = v[0] + E;
        if (s.slidesPerGroup > 1) {
          var _i21 = Math.ceil((e.virtual.slidesBefore + e.virtual.slidesAfter) / s.slidesPerGroup),
            _a12 = _t23 * s.slidesPerGroup;
          for (var _e17 = 0; _e17 < _i21; _e17 += 1) {
            m.push(m[m.length - 1] + _a12);
          }
        }
        for (var _i22 = 0; _i22 < e.virtual.slidesBefore + e.virtual.slidesAfter; _i22 += 1) {
          1 === s.slidesPerGroup && m.push(m[m.length - 1] + _t23), f.push(f[f.length - 1] + _t23), e.virtualSize += _t23;
        }
      }
      if (0 === m.length && (m = [0]), 0 !== E) {
        var _t24 = e.isHorizontal() && l ? "marginLeft" : e.getDirectionLabel("marginRight");
        c.filter(function (e, t) {
          return !(s.cssMode && !s.loop) || t !== c.length - 1;
        }).forEach(function (e) {
          e.style[_t24] = "".concat(E, "px");
        });
      }
      if (s.centeredSlides && s.centeredSlidesBounds) {
        var _e18 = 0;
        v.forEach(function (t) {
          _e18 += t + (E || 0);
        }), _e18 -= E;
        var _t25 = _e18 - r;
        m = m.map(function (e) {
          return e <= 0 ? -b : e > _t25 ? _t25 + w : e;
        });
      }
      if (s.centerInsufficientSlides) {
        var _e19 = 0;
        if (v.forEach(function (t) {
          _e19 += t + (E || 0);
        }), _e19 -= E, _e19 < r) {
          var _t26 = (r - _e19) / 2;
          m.forEach(function (e, s) {
            m[s] = e - _t26;
          }), f.forEach(function (e, s) {
            f[s] = e + _t26;
          });
        }
      }
      if (Object.assign(e, {
        slides: c,
        snapGrid: m,
        slidesGrid: f,
        slidesSizesGrid: v
      }), s.centeredSlides && s.cssMode && !s.centeredSlidesBounds) {
        u(i, "--swiper-centered-offset-before", -m[0] + "px"), u(i, "--swiper-centered-offset-after", e.size / 2 - v[v.length - 1] / 2 + "px");
        var _t27 = -e.snapGrid[0],
          _s20 = -e.slidesGrid[0];
        e.snapGrid = e.snapGrid.map(function (e) {
          return e + _t27;
        }), e.slidesGrid = e.slidesGrid.map(function (e) {
          return e + _s20;
        });
      }
      if (p !== d && e.emit("slidesLengthChange"), m.length !== T && (e.params.watchOverflow && e.checkOverflow(), e.emit("snapGridLengthChange")), f.length !== S && e.emit("slidesGridLengthChange"), s.watchSlidesProgress && e.updateSlidesOffset(), e.emit("slidesUpdated"), !(o || s.cssMode || "slide" !== s.effect && "fade" !== s.effect)) {
        var _t28 = "".concat(s.containerModifierClass, "backface-hidden"),
          _i23 = e.el.classList.contains(_t28);
        p <= s.maxBackfaceHiddenSlides ? _i23 || e.el.classList.add(_t28) : _i23 && e.el.classList.remove(_t28);
      }
    },
    updateAutoHeight: function updateAutoHeight(e) {
      var t = this,
        s = [],
        i = t.virtual && t.params.virtual.enabled;
      var a,
        r = 0;
      "number" == typeof e ? t.setTransition(e) : !0 === e && t.setTransition(t.params.speed);
      var l = function l(e) {
        return i ? t.slides[t.getSlideIndexByData(e)] : t.slides[e];
      };
      if ("auto" !== t.params.slidesPerView && t.params.slidesPerView > 1) {
        if (t.params.centeredSlides) (t.visibleSlides || []).forEach(function (e) {
          s.push(e);
        });else for (a = 0; a < Math.ceil(t.params.slidesPerView); a += 1) {
          var _e20 = t.activeIndex + a;
          if (_e20 > t.slides.length && !i) break;
          s.push(l(_e20));
        }
      } else s.push(l(t.activeIndex));
      for (a = 0; a < s.length; a += 1) {
        if (void 0 !== s[a]) {
          var _e21 = s[a].offsetHeight;
          r = _e21 > r ? _e21 : r;
        }
      }
      (r || 0 === r) && (t.wrapperEl.style.height = "".concat(r, "px"));
    },
    updateSlidesOffset: function updateSlidesOffset() {
      var e = this,
        t = e.slides,
        s = e.isElement ? e.isHorizontal() ? e.wrapperEl.offsetLeft : e.wrapperEl.offsetTop : 0;
      for (var _i24 = 0; _i24 < t.length; _i24 += 1) {
        t[_i24].swiperSlideOffset = (e.isHorizontal() ? t[_i24].offsetLeft : t[_i24].offsetTop) - s - e.cssOverflowAdjustment();
      }
    },
    updateSlidesProgress: function updateSlidesProgress(e) {
      void 0 === e && (e = this && this.translate || 0);
      var t = this,
        s = t.params,
        i = t.slides,
        a = t.rtlTranslate,
        r = t.snapGrid;
      if (0 === i.length) return;
      void 0 === i[0].swiperSlideOffset && t.updateSlidesOffset();
      var l = -e;
      a && (l = e), i.forEach(function (e) {
        e.classList.remove(s.slideVisibleClass, s.slideFullyVisibleClass);
      }), t.visibleSlidesIndexes = [], t.visibleSlides = [];
      var n = s.spaceBetween;
      "string" == typeof n && n.indexOf("%") >= 0 ? n = parseFloat(n.replace("%", "")) / 100 * t.size : "string" == typeof n && (n = parseFloat(n));
      for (var _e22 = 0; _e22 < i.length; _e22 += 1) {
        var _o3 = i[_e22];
        var _d2 = _o3.swiperSlideOffset;
        s.cssMode && s.centeredSlides && (_d2 -= i[0].swiperSlideOffset);
        var _c2 = (l + (s.centeredSlides ? t.minTranslate() : 0) - _d2) / (_o3.swiperSlideSize + n),
          _p4 = (l - r[0] + (s.centeredSlides ? t.minTranslate() : 0) - _d2) / (_o3.swiperSlideSize + n),
          _u9 = -(l - _d2),
          _m = _u9 + t.slidesSizesGrid[_e22],
          _h3 = _u9 >= 0 && _u9 <= t.size - t.slidesSizesGrid[_e22];
        (_u9 >= 0 && _u9 < t.size - 1 || _m > 1 && _m <= t.size || _u9 <= 0 && _m >= t.size) && (t.visibleSlides.push(_o3), t.visibleSlidesIndexes.push(_e22), i[_e22].classList.add(s.slideVisibleClass)), _h3 && i[_e22].classList.add(s.slideFullyVisibleClass), _o3.progress = a ? -_c2 : _c2, _o3.originalProgress = a ? -_p4 : _p4;
      }
    },
    updateProgress: function updateProgress(e) {
      var t = this;
      if (void 0 === e) {
        var _s21 = t.rtlTranslate ? -1 : 1;
        e = t && t.translate && t.translate * _s21 || 0;
      }
      var s = t.params,
        i = t.maxTranslate() - t.minTranslate();
      var a = t.progress,
        r = t.isBeginning,
        l = t.isEnd,
        n = t.progressLoop;
      var o = r,
        d = l;
      if (0 === i) a = 0, r = !0, l = !0;else {
        a = (e - t.minTranslate()) / i;
        var _s22 = Math.abs(e - t.minTranslate()) < 1,
          _n11 = Math.abs(e - t.maxTranslate()) < 1;
        r = _s22 || a <= 0, l = _n11 || a >= 1, _s22 && (a = 0), _n11 && (a = 1);
      }
      if (s.loop) {
        var _s23 = t.getSlideIndexByData(0),
          _i25 = t.getSlideIndexByData(t.slides.length - 1),
          _a13 = t.slidesGrid[_s23],
          _r7 = t.slidesGrid[_i25],
          _l4 = t.slidesGrid[t.slidesGrid.length - 1],
          _o4 = Math.abs(e);
        n = _o4 >= _a13 ? (_o4 - _a13) / _l4 : (_o4 + _l4 - _r7) / _l4, n > 1 && (n -= 1);
      }
      Object.assign(t, {
        progress: a,
        progressLoop: n,
        isBeginning: r,
        isEnd: l
      }), (s.watchSlidesProgress || s.centeredSlides && s.autoHeight) && t.updateSlidesProgress(e), r && !o && t.emit("reachBeginning toEdge"), l && !d && t.emit("reachEnd toEdge"), (o && !r || d && !l) && t.emit("fromEdge"), t.emit("progress", a);
    },
    updateSlidesClasses: function updateSlidesClasses() {
      var e = this,
        t = e.slides,
        s = e.params,
        i = e.slidesEl,
        a = e.activeIndex,
        r = e.virtual && s.virtual.enabled,
        l = e.grid && s.grid && s.grid.rows > 1,
        n = function n(e) {
          return h(i, ".".concat(s.slideClass).concat(e, ", swiper-slide").concat(e))[0];
        };
      var o, d, c;
      if (t.forEach(function (e) {
        e.classList.remove(s.slideActiveClass, s.slideNextClass, s.slidePrevClass);
      }), r) {
        if (s.loop) {
          var _t29 = a - e.virtual.slidesBefore;
          _t29 < 0 && (_t29 = e.virtual.slides.length + _t29), _t29 >= e.virtual.slides.length && (_t29 -= e.virtual.slides.length), o = n("[data-swiper-slide-index=\"".concat(_t29, "\"]"));
        } else o = n("[data-swiper-slide-index=\"".concat(a, "\"]"));
      } else l ? (o = t.filter(function (e) {
        return e.column === a;
      })[0], c = t.filter(function (e) {
        return e.column === a + 1;
      })[0], d = t.filter(function (e) {
        return e.column === a - 1;
      })[0]) : o = t[a];
      o && (o.classList.add(s.slideActiveClass), l ? (c && c.classList.add(s.slideNextClass), d && d.classList.add(s.slidePrevClass)) : (c = function (e, t) {
        var s = [];
        for (; e.nextElementSibling;) {
          var _i26 = e.nextElementSibling;
          t ? _i26.matches(t) && s.push(_i26) : s.push(_i26), e = _i26;
        }
        return s;
      }(o, ".".concat(s.slideClass, ", swiper-slide"))[0], s.loop && !c && (c = t[0]), c && c.classList.add(s.slideNextClass), d = function (e, t) {
        var s = [];
        for (; e.previousElementSibling;) {
          var _i27 = e.previousElementSibling;
          t ? _i27.matches(t) && s.push(_i27) : s.push(_i27), e = _i27;
        }
        return s;
      }(o, ".".concat(s.slideClass, ", swiper-slide"))[0], s.loop && 0 === !d && (d = t[t.length - 1]), d && d.classList.add(s.slidePrevClass))), e.emitSlidesClasses();
    },
    updateActiveIndex: function updateActiveIndex(e) {
      var t = this,
        s = t.rtlTranslate ? t.translate : -t.translate,
        i = t.snapGrid,
        a = t.params,
        r = t.activeIndex,
        l = t.realIndex,
        n = t.snapIndex;
      var o,
        d = e;
      var c = function c(e) {
        var s = e - t.virtual.slidesBefore;
        return s < 0 && (s = t.virtual.slides.length + s), s >= t.virtual.slides.length && (s -= t.virtual.slides.length), s;
      };
      if (void 0 === d && (d = function (e) {
        var t = e.slidesGrid,
          s = e.params,
          i = e.rtlTranslate ? e.translate : -e.translate;
        var a;
        for (var _e23 = 0; _e23 < t.length; _e23 += 1) {
          void 0 !== t[_e23 + 1] ? i >= t[_e23] && i < t[_e23 + 1] - (t[_e23 + 1] - t[_e23]) / 2 ? a = _e23 : i >= t[_e23] && i < t[_e23 + 1] && (a = _e23 + 1) : i >= t[_e23] && (a = _e23);
        }
        return s.normalizeSlideIndex && (a < 0 || void 0 === a) && (a = 0), a;
      }(t)), i.indexOf(s) >= 0) o = i.indexOf(s);else {
        var _e24 = Math.min(a.slidesPerGroupSkip, d);
        o = _e24 + Math.floor((d - _e24) / a.slidesPerGroup);
      }
      if (o >= i.length && (o = i.length - 1), d === r && !t.params.loop) return void (o !== n && (t.snapIndex = o, t.emit("snapIndexChange")));
      if (d === r && t.params.loop && t.virtual && t.params.virtual.enabled) return void (t.realIndex = c(d));
      var p = t.grid && a.grid && a.grid.rows > 1;
      var u;
      if (t.virtual && a.virtual.enabled && a.loop) u = c(d);else if (p) {
        var _e25 = t.slides.filter(function (e) {
          return e.column === d;
        })[0];
        var _s24 = parseInt(_e25.getAttribute("data-swiper-slide-index"), 10);
        Number.isNaN(_s24) && (_s24 = Math.max(t.slides.indexOf(_e25), 0)), u = Math.floor(_s24 / a.grid.rows);
      } else if (t.slides[d]) {
        var _e26 = t.slides[d].getAttribute("data-swiper-slide-index");
        u = _e26 ? parseInt(_e26, 10) : d;
      } else u = d;
      Object.assign(t, {
        previousSnapIndex: n,
        snapIndex: o,
        previousRealIndex: l,
        realIndex: u,
        previousIndex: r,
        activeIndex: d
      }), t.initialized && A(t), t.emit("activeIndexChange"), t.emit("snapIndexChange"), (t.initialized || t.params.runCallbacksOnInit) && (l !== u && t.emit("realIndexChange"), t.emit("slideChange"));
    },
    updateClickedSlide: function updateClickedSlide(e, t) {
      var s = this,
        i = s.params;
      var a = e.closest(".".concat(i.slideClass, ", swiper-slide"));
      !a && s.isElement && t && t.length > 1 && t.includes(e) && _toConsumableArray(t.slice(t.indexOf(e) + 1, t.length)).forEach(function (e) {
        !a && e.matches && e.matches(".".concat(i.slideClass, ", swiper-slide")) && (a = e);
      });
      var r,
        l = !1;
      if (a) for (var _e27 = 0; _e27 < s.slides.length; _e27 += 1) {
        if (s.slides[_e27] === a) {
          l = !0, r = _e27;
          break;
        }
      }
      if (!a || !l) return s.clickedSlide = void 0, void (s.clickedIndex = void 0);
      s.clickedSlide = a, s.virtual && s.params.virtual.enabled ? s.clickedIndex = parseInt(a.getAttribute("data-swiper-slide-index"), 10) : s.clickedIndex = r, i.slideToClickedSlide && void 0 !== s.clickedIndex && s.clickedIndex !== s.activeIndex && s.slideToClickedSlide();
    }
  };
  var z = {
    getTranslate: function getTranslate(e) {
      void 0 === e && (e = this.isHorizontal() ? "x" : "y");
      var t = this.params,
        s = this.rtlTranslate,
        i = this.translate,
        a = this.wrapperEl;
      if (t.virtualTranslate) return s ? -i : i;
      if (t.cssMode) return i;
      var r = d(a, e);
      return r += this.cssOverflowAdjustment(), s && (r = -r), r || 0;
    },
    setTranslate: function setTranslate(e, t) {
      var s = this,
        i = s.rtlTranslate,
        a = s.params,
        r = s.wrapperEl,
        l = s.progress;
      var n,
        o = 0,
        d = 0;
      s.isHorizontal() ? o = i ? -e : e : d = e, a.roundLengths && (o = Math.floor(o), d = Math.floor(d)), s.previousTranslate = s.translate, s.translate = s.isHorizontal() ? o : d, a.cssMode ? r[s.isHorizontal() ? "scrollLeft" : "scrollTop"] = s.isHorizontal() ? -o : -d : a.virtualTranslate || (s.isHorizontal() ? o -= s.cssOverflowAdjustment() : d -= s.cssOverflowAdjustment(), r.style.transform = "translate3d(".concat(o, "px, ").concat(d, "px, 0px)"));
      var c = s.maxTranslate() - s.minTranslate();
      n = 0 === c ? 0 : (e - s.minTranslate()) / c, n !== l && s.updateProgress(e), s.emit("setTranslate", s.translate, t);
    },
    minTranslate: function minTranslate() {
      return -this.snapGrid[0];
    },
    maxTranslate: function maxTranslate() {
      return -this.snapGrid[this.snapGrid.length - 1];
    },
    translateTo: function translateTo(e, t, s, i, a) {
      void 0 === e && (e = 0), void 0 === t && (t = this.params.speed), void 0 === s && (s = !0), void 0 === i && (i = !0);
      var r = this,
        l = r.params,
        n = r.wrapperEl;
      if (r.animating && l.preventInteractionOnTransition) return !1;
      var o = r.minTranslate(),
        d = r.maxTranslate();
      var c;
      if (c = i && e > o ? o : i && e < d ? d : e, r.updateProgress(c), l.cssMode) {
        var _e28 = r.isHorizontal();
        if (0 === t) n[_e28 ? "scrollLeft" : "scrollTop"] = -c;else {
          var _n$scrollTo;
          if (!r.support.smoothScroll) return m({
            swiper: r,
            targetPosition: -c,
            side: _e28 ? "left" : "top"
          }), !0;
          n.scrollTo((_n$scrollTo = {}, _defineProperty(_n$scrollTo, _e28 ? "left" : "top", -c), _defineProperty(_n$scrollTo, "behavior", "smooth"), _n$scrollTo));
        }
        return !0;
      }
      return 0 === t ? (r.setTransition(0), r.setTranslate(c), s && (r.emit("beforeTransitionStart", t, a), r.emit("transitionEnd"))) : (r.setTransition(t), r.setTranslate(c), s && (r.emit("beforeTransitionStart", t, a), r.emit("transitionStart")), r.animating || (r.animating = !0, r.onTranslateToWrapperTransitionEnd || (r.onTranslateToWrapperTransitionEnd = function (e) {
        r && !r.destroyed && e.target === this && (r.wrapperEl.removeEventListener("transitionend", r.onTranslateToWrapperTransitionEnd), r.onTranslateToWrapperTransitionEnd = null, delete r.onTranslateToWrapperTransitionEnd, s && r.emit("transitionEnd"));
      }), r.wrapperEl.addEventListener("transitionend", r.onTranslateToWrapperTransitionEnd))), !0;
    }
  };
  function D(e) {
    var t = e.swiper,
      s = e.runCallbacks,
      i = e.direction,
      a = e.step;
    var r = t.activeIndex,
      l = t.previousIndex;
    var n = i;
    if (n || (n = r > l ? "next" : r < l ? "prev" : "reset"), t.emit("transition".concat(a)), s && r !== l) {
      if ("reset" === n) return void t.emit("slideResetTransition".concat(a));
      t.emit("slideChangeTransition".concat(a)), "next" === n ? t.emit("slideNextTransition".concat(a)) : t.emit("slidePrevTransition".concat(a));
    }
  }
  var G = {
    slideTo: function slideTo(e, t, s, i, a) {
      void 0 === e && (e = 0), void 0 === t && (t = this.params.speed), void 0 === s && (s = !0), "string" == typeof e && (e = parseInt(e, 10));
      var r = this;
      var l = e;
      l < 0 && (l = 0);
      var n = r.params,
        o = r.snapGrid,
        d = r.slidesGrid,
        c = r.previousIndex,
        p = r.activeIndex,
        u = r.rtlTranslate,
        h = r.wrapperEl,
        f = r.enabled;
      if (r.animating && n.preventInteractionOnTransition || !f && !i && !a || r.destroyed) return !1;
      var v = Math.min(r.params.slidesPerGroupSkip, l);
      var g = v + Math.floor((l - v) / r.params.slidesPerGroup);
      g >= o.length && (g = o.length - 1);
      var b = -o[g];
      if (n.normalizeSlideIndex) for (var _e29 = 0; _e29 < d.length; _e29 += 1) {
        var _t30 = -Math.floor(100 * b),
          _s25 = Math.floor(100 * d[_e29]),
          _i28 = Math.floor(100 * d[_e29 + 1]);
        void 0 !== d[_e29 + 1] ? _t30 >= _s25 && _t30 < _i28 - (_i28 - _s25) / 2 ? l = _e29 : _t30 >= _s25 && _t30 < _i28 && (l = _e29 + 1) : _t30 >= _s25 && (l = _e29);
      }
      if (r.initialized && l !== p) {
        if (!r.allowSlideNext && (u ? b > r.translate && b > r.minTranslate() : b < r.translate && b < r.minTranslate())) return !1;
        if (!r.allowSlidePrev && b > r.translate && b > r.maxTranslate() && (p || 0) !== l) return !1;
      }
      var w;
      if (l !== (c || 0) && s && r.emit("beforeSlideChangeStart"), r.updateProgress(b), w = l > p ? "next" : l < p ? "prev" : "reset", u && -b === r.translate || !u && b === r.translate) return r.updateActiveIndex(l), n.autoHeight && r.updateAutoHeight(), r.updateSlidesClasses(), "slide" !== n.effect && r.setTranslate(b), "reset" !== w && (r.transitionStart(s, w), r.transitionEnd(s, w)), !1;
      if (n.cssMode) {
        var _e30 = r.isHorizontal(),
          _s26 = u ? b : -b;
        if (0 === t) {
          var _t31 = r.virtual && r.params.virtual.enabled;
          _t31 && (r.wrapperEl.style.scrollSnapType = "none", r._immediateVirtual = !0), _t31 && !r._cssModeVirtualInitialSet && r.params.initialSlide > 0 ? (r._cssModeVirtualInitialSet = !0, requestAnimationFrame(function () {
            h[_e30 ? "scrollLeft" : "scrollTop"] = _s26;
          })) : h[_e30 ? "scrollLeft" : "scrollTop"] = _s26, _t31 && requestAnimationFrame(function () {
            r.wrapperEl.style.scrollSnapType = "", r._immediateVirtual = !1;
          });
        } else {
          var _h$scrollTo;
          if (!r.support.smoothScroll) return m({
            swiper: r,
            targetPosition: _s26,
            side: _e30 ? "left" : "top"
          }), !0;
          h.scrollTo((_h$scrollTo = {}, _defineProperty(_h$scrollTo, _e30 ? "left" : "top", _s26), _defineProperty(_h$scrollTo, "behavior", "smooth"), _h$scrollTo));
        }
        return !0;
      }
      return r.setTransition(t), r.setTranslate(b), r.updateActiveIndex(l), r.updateSlidesClasses(), r.emit("beforeTransitionStart", t, i), r.transitionStart(s, w), 0 === t ? r.transitionEnd(s, w) : r.animating || (r.animating = !0, r.onSlideToWrapperTransitionEnd || (r.onSlideToWrapperTransitionEnd = function (e) {
        r && !r.destroyed && e.target === this && (r.wrapperEl.removeEventListener("transitionend", r.onSlideToWrapperTransitionEnd), r.onSlideToWrapperTransitionEnd = null, delete r.onSlideToWrapperTransitionEnd, r.transitionEnd(s, w));
      }), r.wrapperEl.addEventListener("transitionend", r.onSlideToWrapperTransitionEnd)), !0;
    },
    slideToLoop: function slideToLoop(e, t, s, i) {
      if (void 0 === e && (e = 0), void 0 === t && (t = this.params.speed), void 0 === s && (s = !0), "string" == typeof e) {
        e = parseInt(e, 10);
      }
      var a = this;
      if (a.destroyed) return;
      var r = a.grid && a.params.grid && a.params.grid.rows > 1;
      var l = e;
      if (a.params.loop) if (a.virtual && a.params.virtual.enabled) l += a.virtual.slidesBefore;else {
        var _e31;
        if (r) {
          var _t33 = l * a.params.grid.rows;
          _e31 = a.slides.filter(function (e) {
            return 1 * e.getAttribute("data-swiper-slide-index") === _t33;
          })[0].column;
        } else _e31 = a.getSlideIndexByData(l);
        var _t32 = r ? Math.ceil(a.slides.length / a.params.grid.rows) : a.slides.length,
          _s27 = a.params.centeredSlides;
        var _i29 = a.params.slidesPerView;
        "auto" === _i29 ? _i29 = a.slidesPerViewDynamic() : (_i29 = Math.ceil(parseFloat(a.params.slidesPerView, 10)), _s27 && _i29 % 2 == 0 && (_i29 += 1));
        var _n12 = _t32 - _e31 < _i29;
        if (_s27 && (_n12 = _n12 || _e31 < Math.ceil(_i29 / 2)), _n12) {
          var _i30 = _s27 ? _e31 < a.activeIndex ? "prev" : "next" : _e31 - a.activeIndex - 1 < a.params.slidesPerView ? "next" : "prev";
          a.loopFix({
            direction: _i30,
            slideTo: !0,
            activeSlideIndex: "next" === _i30 ? _e31 + 1 : _e31 - _t32 + 1,
            slideRealIndex: "next" === _i30 ? a.realIndex : void 0
          });
        }
        if (r) {
          var _e32 = l * a.params.grid.rows;
          l = a.slides.filter(function (t) {
            return 1 * t.getAttribute("data-swiper-slide-index") === _e32;
          })[0].column;
        } else l = a.getSlideIndexByData(l);
      }
      return requestAnimationFrame(function () {
        a.slideTo(l, t, s, i);
      }), a;
    },
    slideNext: function slideNext(e, t, s) {
      void 0 === e && (e = this.params.speed), void 0 === t && (t = !0);
      var i = this,
        a = i.enabled,
        r = i.params,
        l = i.animating;
      if (!a || i.destroyed) return i;
      var n = r.slidesPerGroup;
      "auto" === r.slidesPerView && 1 === r.slidesPerGroup && r.slidesPerGroupAuto && (n = Math.max(i.slidesPerViewDynamic("current", !0), 1));
      var o = i.activeIndex < r.slidesPerGroupSkip ? 1 : n,
        d = i.virtual && r.virtual.enabled;
      if (r.loop) {
        if (l && !d && r.loopPreventsSliding) return !1;
        if (i.loopFix({
          direction: "next"
        }), i._clientLeft = i.wrapperEl.clientLeft, i.activeIndex === i.slides.length - 1 && r.cssMode) return requestAnimationFrame(function () {
          i.slideTo(i.activeIndex + o, e, t, s);
        }), !0;
      }
      return r.rewind && i.isEnd ? i.slideTo(0, e, t, s) : i.slideTo(i.activeIndex + o, e, t, s);
    },
    slidePrev: function slidePrev(e, t, s) {
      void 0 === e && (e = this.params.speed), void 0 === t && (t = !0);
      var i = this,
        a = i.params,
        r = i.snapGrid,
        l = i.slidesGrid,
        n = i.rtlTranslate,
        o = i.enabled,
        d = i.animating;
      if (!o || i.destroyed) return i;
      var c = i.virtual && a.virtual.enabled;
      if (a.loop) {
        if (d && !c && a.loopPreventsSliding) return !1;
        i.loopFix({
          direction: "prev"
        }), i._clientLeft = i.wrapperEl.clientLeft;
      }
      function p(e) {
        return e < 0 ? -Math.floor(Math.abs(e)) : Math.floor(e);
      }
      var u = p(n ? i.translate : -i.translate),
        m = r.map(function (e) {
          return p(e);
        });
      var h = r[m.indexOf(u) - 1];
      if (void 0 === h && a.cssMode) {
        var _e33;
        r.forEach(function (t, s) {
          u >= t && (_e33 = s);
        }), void 0 !== _e33 && (h = r[_e33 > 0 ? _e33 - 1 : _e33]);
      }
      var f = 0;
      if (void 0 !== h && (f = l.indexOf(h), f < 0 && (f = i.activeIndex - 1), "auto" === a.slidesPerView && 1 === a.slidesPerGroup && a.slidesPerGroupAuto && (f = f - i.slidesPerViewDynamic("previous", !0) + 1, f = Math.max(f, 0))), a.rewind && i.isBeginning) {
        var _a14 = i.params.virtual && i.params.virtual.enabled && i.virtual ? i.virtual.slides.length - 1 : i.slides.length - 1;
        return i.slideTo(_a14, e, t, s);
      }
      return a.loop && 0 === i.activeIndex && a.cssMode ? (requestAnimationFrame(function () {
        i.slideTo(f, e, t, s);
      }), !0) : i.slideTo(f, e, t, s);
    },
    slideReset: function slideReset(e, t, s) {
      void 0 === e && (e = this.params.speed), void 0 === t && (t = !0);
      var i = this;
      if (!i.destroyed) return i.slideTo(i.activeIndex, e, t, s);
    },
    slideToClosest: function slideToClosest(e, t, s, i) {
      void 0 === e && (e = this.params.speed), void 0 === t && (t = !0), void 0 === i && (i = .5);
      var a = this;
      if (a.destroyed) return;
      var r = a.activeIndex;
      var l = Math.min(a.params.slidesPerGroupSkip, r),
        n = l + Math.floor((r - l) / a.params.slidesPerGroup),
        o = a.rtlTranslate ? a.translate : -a.translate;
      if (o >= a.snapGrid[n]) {
        var _e34 = a.snapGrid[n];
        o - _e34 > (a.snapGrid[n + 1] - _e34) * i && (r += a.params.slidesPerGroup);
      } else {
        var _e35 = a.snapGrid[n - 1];
        o - _e35 <= (a.snapGrid[n] - _e35) * i && (r -= a.params.slidesPerGroup);
      }
      return r = Math.max(r, 0), r = Math.min(r, a.slidesGrid.length - 1), a.slideTo(r, e, t, s);
    },
    slideToClickedSlide: function slideToClickedSlide() {
      var e = this;
      if (e.destroyed) return;
      var t = e.params,
        s = e.slidesEl,
        i = "auto" === t.slidesPerView ? e.slidesPerViewDynamic() : t.slidesPerView;
      var a,
        r = e.clickedIndex;
      var l = e.isElement ? "swiper-slide" : ".".concat(t.slideClass);
      if (t.loop) {
        if (e.animating) return;
        a = parseInt(e.clickedSlide.getAttribute("data-swiper-slide-index"), 10), t.centeredSlides ? r < e.loopedSlides - i / 2 || r > e.slides.length - e.loopedSlides + i / 2 ? (e.loopFix(), r = e.getSlideIndex(h(s, "".concat(l, "[data-swiper-slide-index=\"").concat(a, "\"]"))[0]), n(function () {
          e.slideTo(r);
        })) : e.slideTo(r) : r > e.slides.length - i ? (e.loopFix(), r = e.getSlideIndex(h(s, "".concat(l, "[data-swiper-slide-index=\"").concat(a, "\"]"))[0]), n(function () {
          e.slideTo(r);
        })) : e.slideTo(r);
      } else e.slideTo(r);
    }
  };
  var $ = {
    loopCreate: function loopCreate(e) {
      var t = this,
        s = t.params,
        i = t.slidesEl;
      if (!s.loop || t.virtual && t.params.virtual.enabled) return;
      var a = function a() {
          h(i, ".".concat(s.slideClass, ", swiper-slide")).forEach(function (e, t) {
            e.setAttribute("data-swiper-slide-index", t);
          });
        },
        r = t.grid && s.grid && s.grid.rows > 1,
        l = s.slidesPerGroup * (r ? s.grid.rows : 1),
        n = t.slides.length % l != 0,
        o = r && t.slides.length % s.grid.rows != 0,
        d = function d(e) {
          for (var _i31 = 0; _i31 < e; _i31 += 1) {
            var _e36 = t.isElement ? v("swiper-slide", [s.slideBlankClass]) : v("div", [s.slideClass, s.slideBlankClass]);
            t.slidesEl.append(_e36);
          }
        };
      if (n) {
        if (s.loopAddBlankSlides) {
          d(l - t.slides.length % l), t.recalcSlides(), t.updateSlides();
        } else f("Swiper Loop Warning: The number of slides is not even to slidesPerGroup, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)");
        a();
      } else if (o) {
        if (s.loopAddBlankSlides) {
          d(s.grid.rows - t.slides.length % s.grid.rows), t.recalcSlides(), t.updateSlides();
        } else f("Swiper Loop Warning: The number of slides is not even to grid.rows, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)");
        a();
      } else a();
      t.loopFix({
        slideRealIndex: e,
        direction: s.centeredSlides ? void 0 : "next"
      });
    },
    loopFix: function loopFix(e) {
      var _ref6 = void 0 === e ? {} : e,
        t = _ref6.slideRealIndex,
        _ref6$slideTo = _ref6.slideTo,
        s = _ref6$slideTo === void 0 ? !0 : _ref6$slideTo,
        i = _ref6.direction,
        a = _ref6.setTranslate,
        r = _ref6.activeSlideIndex,
        l = _ref6.byController,
        n = _ref6.byMousewheel;
      var o = this;
      if (!o.params.loop) return;
      o.emit("beforeLoopFix");
      var d = o.slides,
        c = o.allowSlidePrev,
        p = o.allowSlideNext,
        u = o.slidesEl,
        m = o.params,
        h = m.centeredSlides;
      if (o.allowSlidePrev = !0, o.allowSlideNext = !0, o.virtual && m.virtual.enabled) return s && (m.centeredSlides || 0 !== o.snapIndex ? m.centeredSlides && o.snapIndex < m.slidesPerView ? o.slideTo(o.virtual.slides.length + o.snapIndex, 0, !1, !0) : o.snapIndex === o.snapGrid.length - 1 && o.slideTo(o.virtual.slidesBefore, 0, !1, !0) : o.slideTo(o.virtual.slides.length, 0, !1, !0)), o.allowSlidePrev = c, o.allowSlideNext = p, void o.emit("loopFix");
      var v = m.slidesPerView;
      "auto" === v ? v = o.slidesPerViewDynamic() : (v = Math.ceil(parseFloat(m.slidesPerView, 10)), h && v % 2 == 0 && (v += 1));
      var g = m.slidesPerGroupAuto ? v : m.slidesPerGroup;
      var b = g;
      b % g != 0 && (b += g - b % g), b += m.loopAdditionalSlides, o.loopedSlides = b;
      var w = o.grid && m.grid && m.grid.rows > 1;
      d.length < v + b ? f("Swiper Loop Warning: The number of slides is not enough for loop mode, it will be disabled and not function properly. You need to add more slides (or make duplicates) or lower the values of slidesPerView and slidesPerGroup parameters") : w && "row" === m.grid.fill && f("Swiper Loop Warning: Loop mode is not compatible with grid.fill = `row`");
      var y = [],
        T = [];
      var S = o.activeIndex;
      void 0 === r ? r = o.getSlideIndex(d.filter(function (e) {
        return e.classList.contains(m.slideActiveClass);
      })[0]) : S = r;
      var E = "next" === i || !i,
        x = "prev" === i || !i;
      var C = 0,
        M = 0;
      var L = w ? Math.ceil(d.length / m.grid.rows) : d.length,
        P = (w ? d[r].column : r) + (h && void 0 === a ? -v / 2 + .5 : 0);
      if (P < b) {
        C = Math.max(b - P, g);
        for (var _e37 = 0; _e37 < b - P; _e37 += 1) {
          var _t34 = _e37 - Math.floor(_e37 / L) * L;
          if (w) {
            var _e38 = L - _t34 - 1;
            for (var _t35 = d.length - 1; _t35 >= 0; _t35 -= 1) {
              d[_t35].column === _e38 && y.push(_t35);
            }
          } else y.push(L - _t34 - 1);
        }
      } else if (P + v > L - b) {
        M = Math.max(P - (L - 2 * b), g);
        var _loop = function _loop(_e39) {
          var t = _e39 - Math.floor(_e39 / L) * L;
          w ? d.forEach(function (e, s) {
            e.column === t && T.push(s);
          }) : T.push(t);
        };
        for (var _e39 = 0; _e39 < M; _e39 += 1) {
          _loop(_e39);
        }
      }
      if (o.__preventObserver__ = !0, requestAnimationFrame(function () {
        o.__preventObserver__ = !1;
      }), x && y.forEach(function (e) {
        d[e].swiperLoopMoveDOM = !0, u.prepend(d[e]), d[e].swiperLoopMoveDOM = !1;
      }), E && T.forEach(function (e) {
        d[e].swiperLoopMoveDOM = !0, u.append(d[e]), d[e].swiperLoopMoveDOM = !1;
      }), o.recalcSlides(), "auto" === m.slidesPerView ? o.updateSlides() : w && (y.length > 0 && x || T.length > 0 && E) && o.slides.forEach(function (e, t) {
        o.grid.updateSlide(t, e, o.slides);
      }), m.watchSlidesProgress && o.updateSlidesOffset(), s) if (y.length > 0 && x) {
        if (void 0 === t) {
          var _e40 = o.slidesGrid[S],
            _t36 = o.slidesGrid[S + C] - _e40;
          n ? o.setTranslate(o.translate - _t36) : (o.slideTo(S + Math.ceil(C), 0, !1, !0), a && (o.touchEventsData.startTranslate = o.touchEventsData.startTranslate - _t36, o.touchEventsData.currentTranslate = o.touchEventsData.currentTranslate - _t36));
        } else if (a) {
          var _e41 = w ? y.length / m.grid.rows : y.length;
          o.slideTo(o.activeIndex + _e41, 0, !1, !0), o.touchEventsData.currentTranslate = o.translate;
        }
      } else if (T.length > 0 && E) if (void 0 === t) {
        var _e42 = o.slidesGrid[S],
          _t37 = o.slidesGrid[S - M] - _e42;
        n ? o.setTranslate(o.translate - _t37) : (o.slideTo(S - M, 0, !1, !0), a && (o.touchEventsData.startTranslate = o.touchEventsData.startTranslate - _t37, o.touchEventsData.currentTranslate = o.touchEventsData.currentTranslate - _t37));
      } else {
        var _e43 = w ? T.length / m.grid.rows : T.length;
        o.slideTo(o.activeIndex - _e43, 0, !1, !0);
      }
      if (o.allowSlidePrev = c, o.allowSlideNext = p, o.controller && o.controller.control && !l) {
        var _e44 = {
          slideRealIndex: t,
          direction: i,
          setTranslate: a,
          activeSlideIndex: r,
          byController: !0
        };
        Array.isArray(o.controller.control) ? o.controller.control.forEach(function (t) {
          !t.destroyed && t.params.loop && t.loopFix(_objectSpread(_objectSpread({}, _e44), {}, {
            slideTo: t.params.slidesPerView === m.slidesPerView && s
          }));
        }) : o.controller.control instanceof o.constructor && o.controller.control.params.loop && o.controller.control.loopFix(_objectSpread(_objectSpread({}, _e44), {}, {
          slideTo: o.controller.control.params.slidesPerView === m.slidesPerView && s
        }));
      }
      o.emit("loopFix");
    },
    loopDestroy: function loopDestroy() {
      var e = this,
        t = e.params,
        s = e.slidesEl;
      if (!t.loop || e.virtual && e.params.virtual.enabled) return;
      e.recalcSlides();
      var i = [];
      e.slides.forEach(function (e) {
        var t = void 0 === e.swiperSlideIndex ? 1 * e.getAttribute("data-swiper-slide-index") : e.swiperSlideIndex;
        i[t] = e;
      }), e.slides.forEach(function (e) {
        e.removeAttribute("data-swiper-slide-index");
      }), i.forEach(function (e) {
        s.append(e);
      }), e.recalcSlides(), e.slideTo(e.realIndex, 0);
    }
  };
  function _(e, t, s) {
    var i = r(),
      a = e.params,
      l = a.edgeSwipeDetection,
      n = a.edgeSwipeThreshold;
    return !l || !(s <= n || s >= i.innerWidth - n) || "prevent" === l && (t.preventDefault(), !0);
  }
  function B(e) {
    var t = this,
      s = i();
    var a = e;
    a.originalEvent && (a = a.originalEvent);
    var l = t.touchEventsData;
    if ("pointerdown" === a.type) {
      if (null !== l.pointerId && l.pointerId !== a.pointerId) return;
      l.pointerId = a.pointerId;
    } else "touchstart" === a.type && 1 === a.targetTouches.length && (l.touchId = a.targetTouches[0].identifier);
    if ("touchstart" === a.type) return void _(t, a, a.targetTouches[0].pageX);
    var n = t.params,
      d = t.touches,
      c = t.enabled;
    if (!c) return;
    if (!n.simulateTouch && "mouse" === a.pointerType) return;
    if (t.animating && n.preventInteractionOnTransition) return;
    !t.animating && n.cssMode && n.loop && t.loopFix();
    var p = a.target;
    if ("wrapper" === n.touchEventsTarget && !t.wrapperEl.contains(p)) return;
    if ("which" in a && 3 === a.which) return;
    if ("button" in a && a.button > 0) return;
    if (l.isTouched && l.isMoved) return;
    var u = !!n.noSwipingClass && "" !== n.noSwipingClass,
      m = a.composedPath ? a.composedPath() : a.path;
    u && a.target && a.target.shadowRoot && m && (p = m[0]);
    var h = n.noSwipingSelector ? n.noSwipingSelector : ".".concat(n.noSwipingClass),
      f = !(!a.target || !a.target.shadowRoot);
    if (n.noSwiping && (f ? function (e, t) {
      return void 0 === t && (t = this), function t(s) {
        if (!s || s === i() || s === r()) return null;
        s.assignedSlot && (s = s.assignedSlot);
        var a = s.closest(e);
        return a || s.getRootNode ? a || t(s.getRootNode().host) : null;
      }(t);
    }(h, p) : p.closest(h))) return void (t.allowClick = !0);
    if (n.swipeHandler && !p.closest(n.swipeHandler)) return;
    d.currentX = a.pageX, d.currentY = a.pageY;
    var v = d.currentX,
      g = d.currentY;
    if (!_(t, a, v)) return;
    Object.assign(l, {
      isTouched: !0,
      isMoved: !1,
      allowTouchCallbacks: !0,
      isScrolling: void 0,
      startMoving: void 0
    }), d.startX = v, d.startY = g, l.touchStartTime = o(), t.allowClick = !0, t.updateSize(), t.swipeDirection = void 0, n.threshold > 0 && (l.allowThresholdMove = !1);
    var b = !0;
    p.matches(l.focusableElements) && (b = !1, "SELECT" === p.nodeName && (l.isTouched = !1)), s.activeElement && s.activeElement.matches(l.focusableElements) && s.activeElement !== p && s.activeElement.blur();
    var w = b && t.allowTouchMove && n.touchStartPreventDefault;
    !n.touchStartForcePreventDefault && !w || p.isContentEditable || a.preventDefault(), n.freeMode && n.freeMode.enabled && t.freeMode && t.animating && !n.cssMode && t.freeMode.onTouchStart(), t.emit("touchStart", a);
  }
  function N(e) {
    var t = i(),
      s = this,
      a = s.touchEventsData,
      r = s.params,
      l = s.touches,
      n = s.rtlTranslate,
      d = s.enabled;
    if (!d) return;
    if (!r.simulateTouch && "mouse" === e.pointerType) return;
    var c,
      p = e;
    if (p.originalEvent && (p = p.originalEvent), "pointermove" === p.type) {
      if (null !== a.touchId) return;
      if (p.pointerId !== a.pointerId) return;
    }
    if ("touchmove" === p.type) {
      if (c = _toConsumableArray(p.changedTouches).filter(function (e) {
        return e.identifier === a.touchId;
      })[0], !c || c.identifier !== a.touchId) return;
    } else c = p;
    if (!a.isTouched) return void (a.startMoving && a.isScrolling && s.emit("touchMoveOpposite", p));
    var u = c.pageX,
      m = c.pageY;
    if (p.preventedByNestedSwiper) return l.startX = u, void (l.startY = m);
    if (!s.allowTouchMove) return p.target.matches(a.focusableElements) || (s.allowClick = !1), void (a.isTouched && (Object.assign(l, {
      startX: u,
      startY: m,
      currentX: u,
      currentY: m
    }), a.touchStartTime = o()));
    if (r.touchReleaseOnEdges && !r.loop) if (s.isVertical()) {
      if (m < l.startY && s.translate <= s.maxTranslate() || m > l.startY && s.translate >= s.minTranslate()) return a.isTouched = !1, void (a.isMoved = !1);
    } else if (u < l.startX && s.translate <= s.maxTranslate() || u > l.startX && s.translate >= s.minTranslate()) return;
    if (t.activeElement && p.target === t.activeElement && p.target.matches(a.focusableElements)) return a.isMoved = !0, void (s.allowClick = !1);
    a.allowTouchCallbacks && s.emit("touchMove", p), l.previousX = l.currentX, l.previousY = l.currentY, l.currentX = u, l.currentY = m;
    var h = l.currentX - l.startX,
      f = l.currentY - l.startY;
    if (s.params.threshold && Math.sqrt(Math.pow(h, 2) + Math.pow(f, 2)) < s.params.threshold) return;
    if (void 0 === a.isScrolling) {
      var _e45;
      s.isHorizontal() && l.currentY === l.startY || s.isVertical() && l.currentX === l.startX ? a.isScrolling = !1 : h * h + f * f >= 25 && (_e45 = 180 * Math.atan2(Math.abs(f), Math.abs(h)) / Math.PI, a.isScrolling = s.isHorizontal() ? _e45 > r.touchAngle : 90 - _e45 > r.touchAngle);
    }
    if (a.isScrolling && s.emit("touchMoveOpposite", p), void 0 === a.startMoving && (l.currentX === l.startX && l.currentY === l.startY || (a.startMoving = !0)), a.isScrolling) return void (a.isTouched = !1);
    if (!a.startMoving) return;
    s.allowClick = !1, !r.cssMode && p.cancelable && p.preventDefault(), r.touchMoveStopPropagation && !r.nested && p.stopPropagation();
    var v = s.isHorizontal() ? h : f,
      g = s.isHorizontal() ? l.currentX - l.previousX : l.currentY - l.previousY;
    r.oneWayMovement && (v = Math.abs(v) * (n ? 1 : -1), g = Math.abs(g) * (n ? 1 : -1)), l.diff = v, v *= r.touchRatio, n && (v = -v, g = -g);
    var b = s.touchesDirection;
    s.swipeDirection = v > 0 ? "prev" : "next", s.touchesDirection = g > 0 ? "prev" : "next";
    var w = s.params.loop && !r.cssMode,
      y = "next" === s.touchesDirection && s.allowSlideNext || "prev" === s.touchesDirection && s.allowSlidePrev;
    if (!a.isMoved) {
      if (w && y && s.loopFix({
        direction: s.swipeDirection
      }), a.startTranslate = s.getTranslate(), s.setTransition(0), s.animating) {
        var _e46 = new window.CustomEvent("transitionend", {
          bubbles: !0,
          cancelable: !0
        });
        s.wrapperEl.dispatchEvent(_e46);
      }
      a.allowMomentumBounce = !1, !r.grabCursor || !0 !== s.allowSlideNext && !0 !== s.allowSlidePrev || s.setGrabCursor(!0), s.emit("sliderFirstMove", p);
    }
    if (new Date().getTime(), a.isMoved && a.allowThresholdMove && b !== s.touchesDirection && w && y && Math.abs(v) >= 1) return Object.assign(l, {
      startX: u,
      startY: m,
      currentX: u,
      currentY: m,
      startTranslate: a.currentTranslate
    }), a.loopSwapReset = !0, void (a.startTranslate = a.currentTranslate);
    s.emit("sliderMove", p), a.isMoved = !0, a.currentTranslate = v + a.startTranslate;
    var T = !0,
      S = r.resistanceRatio;
    if (r.touchReleaseOnEdges && (S = 0), v > 0 ? (w && y && a.allowThresholdMove && a.currentTranslate > (r.centeredSlides ? s.minTranslate() - s.slidesSizesGrid[s.activeIndex + 1] : s.minTranslate()) && s.loopFix({
      direction: "prev",
      setTranslate: !0,
      activeSlideIndex: 0
    }), a.currentTranslate > s.minTranslate() && (T = !1, r.resistance && (a.currentTranslate = s.minTranslate() - 1 + Math.pow(-s.minTranslate() + a.startTranslate + v, S)))) : v < 0 && (w && y && a.allowThresholdMove && a.currentTranslate < (r.centeredSlides ? s.maxTranslate() + s.slidesSizesGrid[s.slidesSizesGrid.length - 1] : s.maxTranslate()) && s.loopFix({
      direction: "next",
      setTranslate: !0,
      activeSlideIndex: s.slides.length - ("auto" === r.slidesPerView ? s.slidesPerViewDynamic() : Math.ceil(parseFloat(r.slidesPerView, 10)))
    }), a.currentTranslate < s.maxTranslate() && (T = !1, r.resistance && (a.currentTranslate = s.maxTranslate() + 1 - Math.pow(s.maxTranslate() - a.startTranslate - v, S)))), T && (p.preventedByNestedSwiper = !0), !s.allowSlideNext && "next" === s.swipeDirection && a.currentTranslate < a.startTranslate && (a.currentTranslate = a.startTranslate), !s.allowSlidePrev && "prev" === s.swipeDirection && a.currentTranslate > a.startTranslate && (a.currentTranslate = a.startTranslate), s.allowSlidePrev || s.allowSlideNext || (a.currentTranslate = a.startTranslate), r.threshold > 0) {
      if (!(Math.abs(v) > r.threshold || a.allowThresholdMove)) return void (a.currentTranslate = a.startTranslate);
      if (!a.allowThresholdMove) return a.allowThresholdMove = !0, l.startX = l.currentX, l.startY = l.currentY, a.currentTranslate = a.startTranslate, void (l.diff = s.isHorizontal() ? l.currentX - l.startX : l.currentY - l.startY);
    }
    r.followFinger && !r.cssMode && ((r.freeMode && r.freeMode.enabled && s.freeMode || r.watchSlidesProgress) && (s.updateActiveIndex(), s.updateSlidesClasses()), r.freeMode && r.freeMode.enabled && s.freeMode && s.freeMode.onTouchMove(), s.updateProgress(a.currentTranslate), s.setTranslate(a.currentTranslate));
  }
  function F(e) {
    var t = this,
      s = t.touchEventsData;
    var i,
      a = e;
    a.originalEvent && (a = a.originalEvent);
    if ("touchend" === a.type || "touchcancel" === a.type) {
      if (i = _toConsumableArray(a.changedTouches).filter(function (e) {
        return e.identifier === s.touchId;
      })[0], !i || i.identifier !== s.touchId) return;
    } else {
      if (null !== s.touchId) return;
      if (a.pointerId !== s.pointerId) return;
      i = a;
    }
    if (["pointercancel", "pointerout", "pointerleave", "contextmenu"].includes(a.type)) {
      if (!(["pointercancel", "contextmenu"].includes(a.type) && (t.browser.isSafari || t.browser.isWebView))) return;
    }
    s.pointerId = null, s.touchId = null;
    var r = t.params,
      l = t.touches,
      d = t.rtlTranslate,
      c = t.slidesGrid,
      p = t.enabled;
    if (!p) return;
    if (!r.simulateTouch && "mouse" === a.pointerType) return;
    if (s.allowTouchCallbacks && t.emit("touchEnd", a), s.allowTouchCallbacks = !1, !s.isTouched) return s.isMoved && r.grabCursor && t.setGrabCursor(!1), s.isMoved = !1, void (s.startMoving = !1);
    r.grabCursor && s.isMoved && s.isTouched && (!0 === t.allowSlideNext || !0 === t.allowSlidePrev) && t.setGrabCursor(!1);
    var u = o(),
      m = u - s.touchStartTime;
    if (t.allowClick) {
      var _e47 = a.path || a.composedPath && a.composedPath();
      t.updateClickedSlide(_e47 && _e47[0] || a.target, _e47), t.emit("tap click", a), m < 300 && u - s.lastClickTime < 300 && t.emit("doubleTap doubleClick", a);
    }
    if (s.lastClickTime = o(), n(function () {
      t.destroyed || (t.allowClick = !0);
    }), !s.isTouched || !s.isMoved || !t.swipeDirection || 0 === l.diff && !s.loopSwapReset || s.currentTranslate === s.startTranslate && !s.loopSwapReset) return s.isTouched = !1, s.isMoved = !1, void (s.startMoving = !1);
    var h;
    if (s.isTouched = !1, s.isMoved = !1, s.startMoving = !1, h = r.followFinger ? d ? t.translate : -t.translate : -s.currentTranslate, r.cssMode) return;
    if (r.freeMode && r.freeMode.enabled) return void t.freeMode.onTouchEnd({
      currentPos: h
    });
    var f = h >= -t.maxTranslate() && !t.params.loop;
    var v = 0,
      g = t.slidesSizesGrid[0];
    for (var _e48 = 0; _e48 < c.length; _e48 += _e48 < r.slidesPerGroupSkip ? 1 : r.slidesPerGroup) {
      var _t38 = _e48 < r.slidesPerGroupSkip - 1 ? 1 : r.slidesPerGroup;
      void 0 !== c[_e48 + _t38] ? (f || h >= c[_e48] && h < c[_e48 + _t38]) && (v = _e48, g = c[_e48 + _t38] - c[_e48]) : (f || h >= c[_e48]) && (v = _e48, g = c[c.length - 1] - c[c.length - 2]);
    }
    var b = null,
      w = null;
    r.rewind && (t.isBeginning ? w = r.virtual && r.virtual.enabled && t.virtual ? t.virtual.slides.length - 1 : t.slides.length - 1 : t.isEnd && (b = 0));
    var y = (h - c[v]) / g,
      T = v < r.slidesPerGroupSkip - 1 ? 1 : r.slidesPerGroup;
    if (m > r.longSwipesMs) {
      if (!r.longSwipes) return void t.slideTo(t.activeIndex);
      "next" === t.swipeDirection && (y >= r.longSwipesRatio ? t.slideTo(r.rewind && t.isEnd ? b : v + T) : t.slideTo(v)), "prev" === t.swipeDirection && (y > 1 - r.longSwipesRatio ? t.slideTo(v + T) : null !== w && y < 0 && Math.abs(y) > r.longSwipesRatio ? t.slideTo(w) : t.slideTo(v));
    } else {
      if (!r.shortSwipes) return void t.slideTo(t.activeIndex);
      t.navigation && (a.target === t.navigation.nextEl || a.target === t.navigation.prevEl) ? a.target === t.navigation.nextEl ? t.slideTo(v + T) : t.slideTo(v) : ("next" === t.swipeDirection && t.slideTo(null !== b ? b : v + T), "prev" === t.swipeDirection && t.slideTo(null !== w ? w : v));
    }
  }
  function V() {
    var e = this,
      t = e.params,
      s = e.el;
    if (s && 0 === s.offsetWidth) return;
    t.breakpoints && e.setBreakpoint();
    var i = e.allowSlideNext,
      a = e.allowSlidePrev,
      r = e.snapGrid,
      l = e.virtual && e.params.virtual.enabled;
    e.allowSlideNext = !0, e.allowSlidePrev = !0, e.updateSize(), e.updateSlides(), e.updateSlidesClasses();
    var n = l && t.loop;
    !("auto" === t.slidesPerView || t.slidesPerView > 1) || !e.isEnd || e.isBeginning || e.params.centeredSlides || n ? e.params.loop && !l ? e.slideToLoop(e.realIndex, 0, !1, !0) : e.slideTo(e.activeIndex, 0, !1, !0) : e.slideTo(e.slides.length - 1, 0, !1, !0), e.autoplay && e.autoplay.running && e.autoplay.paused && (clearTimeout(e.autoplay.resizeTimeout), e.autoplay.resizeTimeout = setTimeout(function () {
      e.autoplay && e.autoplay.running && e.autoplay.paused && e.autoplay.resume();
    }, 500)), e.allowSlidePrev = a, e.allowSlideNext = i, e.params.watchOverflow && r !== e.snapGrid && e.checkOverflow();
  }
  function H(e) {
    var t = this;
    t.enabled && (t.allowClick || (t.params.preventClicks && e.preventDefault(), t.params.preventClicksPropagation && t.animating && (e.stopPropagation(), e.stopImmediatePropagation())));
  }
  function j() {
    var e = this,
      t = e.wrapperEl,
      s = e.rtlTranslate,
      i = e.enabled;
    if (!i) return;
    var a;
    e.previousTranslate = e.translate, e.isHorizontal() ? e.translate = -t.scrollLeft : e.translate = -t.scrollTop, 0 === e.translate && (e.translate = 0), e.updateActiveIndex(), e.updateSlidesClasses();
    var r = e.maxTranslate() - e.minTranslate();
    a = 0 === r ? 0 : (e.translate - e.minTranslate()) / r, a !== e.progress && e.updateProgress(s ? -e.translate : e.translate), e.emit("setTranslate", e.translate, !1);
  }
  function R(e) {
    var t = this;
    k(t, e.target), t.params.cssMode || "auto" !== t.params.slidesPerView && !t.params.autoHeight || t.update();
  }
  function q() {
    var e = this;
    e.documentTouchHandlerProceeded || (e.documentTouchHandlerProceeded = !0, e.params.touchReleaseOnEdges && (e.el.style.touchAction = "auto"));
  }
  var Y = function Y(e, t) {
    var s = i(),
      a = e.params,
      r = e.el,
      l = e.wrapperEl,
      n = e.device,
      o = !!a.nested,
      d = "on" === t ? "addEventListener" : "removeEventListener",
      c = t;
    s[d]("touchstart", e.onDocumentTouchStart, {
      passive: !1,
      capture: o
    }), r[d]("touchstart", e.onTouchStart, {
      passive: !1
    }), r[d]("pointerdown", e.onTouchStart, {
      passive: !1
    }), s[d]("touchmove", e.onTouchMove, {
      passive: !1,
      capture: o
    }), s[d]("pointermove", e.onTouchMove, {
      passive: !1,
      capture: o
    }), s[d]("touchend", e.onTouchEnd, {
      passive: !0
    }), s[d]("pointerup", e.onTouchEnd, {
      passive: !0
    }), s[d]("pointercancel", e.onTouchEnd, {
      passive: !0
    }), s[d]("touchcancel", e.onTouchEnd, {
      passive: !0
    }), s[d]("pointerout", e.onTouchEnd, {
      passive: !0
    }), s[d]("pointerleave", e.onTouchEnd, {
      passive: !0
    }), s[d]("contextmenu", e.onTouchEnd, {
      passive: !0
    }), (a.preventClicks || a.preventClicksPropagation) && r[d]("click", e.onClick, !0), a.cssMode && l[d]("scroll", e.onScroll), a.updateOnWindowResize ? e[c](n.ios || n.android ? "resize orientationchange observerUpdate" : "resize observerUpdate", V, !0) : e[c]("observerUpdate", V, !0), r[d]("load", e.onLoad, {
      capture: !0
    });
  };
  var X = function X(e, t) {
    return e.grid && t.grid && t.grid.rows > 1;
  };
  var W = {
    init: !0,
    direction: "horizontal",
    oneWayMovement: !1,
    swiperElementNodeName: "SWIPER-CONTAINER",
    touchEventsTarget: "wrapper",
    initialSlide: 0,
    speed: 300,
    cssMode: !1,
    updateOnWindowResize: !0,
    resizeObserver: !0,
    nested: !1,
    createElements: !1,
    eventsPrefix: "swiper",
    enabled: !0,
    focusableElements: "input, select, option, textarea, button, video, label",
    width: null,
    height: null,
    preventInteractionOnTransition: !1,
    userAgent: null,
    url: null,
    edgeSwipeDetection: !1,
    edgeSwipeThreshold: 20,
    autoHeight: !1,
    setWrapperSize: !1,
    virtualTranslate: !1,
    effect: "slide",
    breakpoints: void 0,
    breakpointsBase: "window",
    spaceBetween: 0,
    slidesPerView: 1,
    slidesPerGroup: 1,
    slidesPerGroupSkip: 0,
    slidesPerGroupAuto: !1,
    centeredSlides: !1,
    centeredSlidesBounds: !1,
    slidesOffsetBefore: 0,
    slidesOffsetAfter: 0,
    normalizeSlideIndex: !0,
    centerInsufficientSlides: !1,
    watchOverflow: !0,
    roundLengths: !1,
    touchRatio: 1,
    touchAngle: 45,
    simulateTouch: !0,
    shortSwipes: !0,
    longSwipes: !0,
    longSwipesRatio: .5,
    longSwipesMs: 300,
    followFinger: !0,
    allowTouchMove: !0,
    threshold: 5,
    touchMoveStopPropagation: !1,
    touchStartPreventDefault: !0,
    touchStartForcePreventDefault: !1,
    touchReleaseOnEdges: !1,
    uniqueNavElements: !0,
    resistance: !0,
    resistanceRatio: .85,
    watchSlidesProgress: !1,
    grabCursor: !1,
    preventClicks: !0,
    preventClicksPropagation: !0,
    slideToClickedSlide: !1,
    loop: !1,
    loopAddBlankSlides: !0,
    loopAdditionalSlides: 0,
    loopPreventsSliding: !0,
    rewind: !1,
    allowSlidePrev: !0,
    allowSlideNext: !0,
    swipeHandler: null,
    noSwiping: !0,
    noSwipingClass: "swiper-no-swiping",
    noSwipingSelector: null,
    passiveListeners: !0,
    maxBackfaceHiddenSlides: 10,
    containerModifierClass: "swiper-",
    slideClass: "swiper-slide",
    slideBlankClass: "swiper-slide-blank",
    slideActiveClass: "swiper-slide-active",
    slideVisibleClass: "swiper-slide-visible",
    slideFullyVisibleClass: "swiper-slide-fully-visible",
    slideNextClass: "swiper-slide-next",
    slidePrevClass: "swiper-slide-prev",
    wrapperClass: "swiper-wrapper",
    lazyPreloaderClass: "swiper-lazy-preloader",
    lazyPreloadPrevNext: 0,
    runCallbacksOnInit: !0,
    _emitClasses: !1
  };
  function U(e, t) {
    return function (s) {
      void 0 === s && (s = {});
      var i = Object.keys(s)[0],
        a = s[i];
      "object" == _typeof(a) && null !== a ? (!0 === e[i] && (e[i] = {
        enabled: !0
      }), "navigation" === i && e[i] && e[i].enabled && !e[i].prevEl && !e[i].nextEl && (e[i].auto = !0), ["pagination", "scrollbar"].indexOf(i) >= 0 && e[i] && e[i].enabled && !e[i].el && (e[i].auto = !0), i in e && "enabled" in a ? ("object" != _typeof(e[i]) || "enabled" in e[i] || (e[i].enabled = !0), e[i] || (e[i] = {
        enabled: !1
      }), p(t, s)) : p(t, s)) : p(t, s);
    };
  }
  var K = {
      eventsEmitter: P,
      update: O,
      translate: z,
      transition: {
        setTransition: function setTransition(e, t) {
          var s = this;
          s.params.cssMode || (s.wrapperEl.style.transitionDuration = "".concat(e, "ms"), s.wrapperEl.style.transitionDelay = 0 === e ? "0ms" : ""), s.emit("setTransition", e, t);
        },
        transitionStart: function transitionStart(e, t) {
          void 0 === e && (e = !0);
          var s = this,
            i = s.params;
          i.cssMode || (i.autoHeight && s.updateAutoHeight(), D({
            swiper: s,
            runCallbacks: e,
            direction: t,
            step: "Start"
          }));
        },
        transitionEnd: function transitionEnd(e, t) {
          void 0 === e && (e = !0);
          var s = this,
            i = s.params;
          s.animating = !1, i.cssMode || (s.setTransition(0), D({
            swiper: s,
            runCallbacks: e,
            direction: t,
            step: "End"
          }));
        }
      },
      slide: G,
      loop: $,
      grabCursor: {
        setGrabCursor: function setGrabCursor(e) {
          var t = this;
          if (!t.params.simulateTouch || t.params.watchOverflow && t.isLocked || t.params.cssMode) return;
          var s = "container" === t.params.touchEventsTarget ? t.el : t.wrapperEl;
          t.isElement && (t.__preventObserver__ = !0), s.style.cursor = "move", s.style.cursor = e ? "grabbing" : "grab", t.isElement && requestAnimationFrame(function () {
            t.__preventObserver__ = !1;
          });
        },
        unsetGrabCursor: function unsetGrabCursor() {
          var e = this;
          e.params.watchOverflow && e.isLocked || e.params.cssMode || (e.isElement && (e.__preventObserver__ = !0), e["container" === e.params.touchEventsTarget ? "el" : "wrapperEl"].style.cursor = "", e.isElement && requestAnimationFrame(function () {
            e.__preventObserver__ = !1;
          }));
        }
      },
      events: {
        attachEvents: function attachEvents() {
          var e = this,
            t = e.params;
          e.onTouchStart = B.bind(e), e.onTouchMove = N.bind(e), e.onTouchEnd = F.bind(e), e.onDocumentTouchStart = q.bind(e), t.cssMode && (e.onScroll = j.bind(e)), e.onClick = H.bind(e), e.onLoad = R.bind(e), Y(e, "on");
        },
        detachEvents: function detachEvents() {
          Y(this, "off");
        }
      },
      breakpoints: {
        setBreakpoint: function setBreakpoint() {
          var e = this,
            t = e.realIndex,
            s = e.initialized,
            i = e.params,
            a = e.el,
            r = i.breakpoints;
          if (!r || r && 0 === Object.keys(r).length) return;
          var l = e.getBreakpoint(r, e.params.breakpointsBase, e.el);
          if (!l || e.currentBreakpoint === l) return;
          var n = (l in r ? r[l] : void 0) || e.originalParams,
            o = X(e, i),
            d = X(e, n),
            c = i.enabled;
          o && !d ? (a.classList.remove("".concat(i.containerModifierClass, "grid"), "".concat(i.containerModifierClass, "grid-column")), e.emitContainerClasses()) : !o && d && (a.classList.add("".concat(i.containerModifierClass, "grid")), (n.grid.fill && "column" === n.grid.fill || !n.grid.fill && "column" === i.grid.fill) && a.classList.add("".concat(i.containerModifierClass, "grid-column")), e.emitContainerClasses()), ["navigation", "pagination", "scrollbar"].forEach(function (t) {
            if (void 0 === n[t]) return;
            var s = i[t] && i[t].enabled,
              a = n[t] && n[t].enabled;
            s && !a && e[t].disable(), !s && a && e[t].enable();
          });
          var u = n.direction && n.direction !== i.direction,
            m = i.loop && (n.slidesPerView !== i.slidesPerView || u),
            h = i.loop;
          u && s && e.changeDirection(), p(e.params, n);
          var f = e.params.enabled,
            v = e.params.loop;
          Object.assign(e, {
            allowTouchMove: e.params.allowTouchMove,
            allowSlideNext: e.params.allowSlideNext,
            allowSlidePrev: e.params.allowSlidePrev
          }), c && !f ? e.disable() : !c && f && e.enable(), e.currentBreakpoint = l, e.emit("_beforeBreakpoint", n), s && (m ? (e.loopDestroy(), e.loopCreate(t), e.updateSlides()) : !h && v ? (e.loopCreate(t), e.updateSlides()) : h && !v && e.loopDestroy()), e.emit("breakpoint", n);
        },
        getBreakpoint: function getBreakpoint(e, t, s) {
          if (void 0 === t && (t = "window"), !e || "container" === t && !s) return;
          var i = !1;
          var a = r(),
            l = "window" === t ? a.innerHeight : s.clientHeight,
            n = Object.keys(e).map(function (e) {
              if ("string" == typeof e && 0 === e.indexOf("@")) {
                var _t39 = parseFloat(e.substr(1));
                return {
                  value: l * _t39,
                  point: e
                };
              }
              return {
                value: e,
                point: e
              };
            });
          n.sort(function (e, t) {
            return parseInt(e.value, 10) - parseInt(t.value, 10);
          });
          for (var _e49 = 0; _e49 < n.length; _e49 += 1) {
            var _n$_e = n[_e49],
              _r8 = _n$_e.point,
              _l5 = _n$_e.value;
            "window" === t ? a.matchMedia("(min-width: ".concat(_l5, "px)")).matches && (i = _r8) : _l5 <= s.clientWidth && (i = _r8);
          }
          return i || "max";
        }
      },
      checkOverflow: {
        checkOverflow: function checkOverflow() {
          var e = this,
            t = e.isLocked,
            s = e.params,
            i = s.slidesOffsetBefore;
          if (i) {
            var _t40 = e.slides.length - 1,
              _s28 = e.slidesGrid[_t40] + e.slidesSizesGrid[_t40] + 2 * i;
            e.isLocked = e.size > _s28;
          } else e.isLocked = 1 === e.snapGrid.length;
          !0 === s.allowSlideNext && (e.allowSlideNext = !e.isLocked), !0 === s.allowSlidePrev && (e.allowSlidePrev = !e.isLocked), t && t !== e.isLocked && (e.isEnd = !1), t !== e.isLocked && e.emit(e.isLocked ? "lock" : "unlock");
        }
      },
      classes: {
        addClasses: function addClasses() {
          var _a$classList;
          var e = this,
            t = e.classNames,
            s = e.params,
            i = e.rtl,
            a = e.el,
            r = e.device,
            l = function (e, t) {
              var s = [];
              return e.forEach(function (e) {
                "object" == _typeof(e) ? Object.keys(e).forEach(function (i) {
                  e[i] && s.push(t + i);
                }) : "string" == typeof e && s.push(t + e);
              }), s;
            }(["initialized", s.direction, {
              "free-mode": e.params.freeMode && s.freeMode.enabled
            }, {
              autoheight: s.autoHeight
            }, {
              rtl: i
            }, {
              grid: s.grid && s.grid.rows > 1
            }, {
              "grid-column": s.grid && s.grid.rows > 1 && "column" === s.grid.fill
            }, {
              android: r.android
            }, {
              ios: r.ios
            }, {
              "css-mode": s.cssMode
            }, {
              centered: s.cssMode && s.centeredSlides
            }, {
              "watch-progress": s.watchSlidesProgress
            }], s.containerModifierClass);
          t.push.apply(t, _toConsumableArray(l)), (_a$classList = a.classList).add.apply(_a$classList, _toConsumableArray(t)), e.emitContainerClasses();
        },
        removeClasses: function removeClasses() {
          var _e$classList;
          var e = this.el,
            t = this.classNames;
          (_e$classList = e.classList).remove.apply(_e$classList, _toConsumableArray(t)), this.emitContainerClasses();
        }
      }
    },
    Z = {};
  var J = /*#__PURE__*/function () {
    function J() {
      var _a15, _a16, _n$modules;
      _classCallCheck(this, J);
      var e, t;
      for (var s = arguments.length, a = new Array(s), r = 0; r < s; r++) {
        a[r] = arguments[r];
      }
      1 === a.length && a[0].constructor && "Object" === Object.prototype.toString.call(a[0]).slice(8, -1) ? t = a[0] : (_a15 = a, _a16 = _slicedToArray(_a15, 2), e = _a16[0], t = _a16[1], _a15), t || (t = {}), t = p({}, t), e && !t.el && (t.el = e);
      var l = i();
      if (t.el && "string" == typeof t.el && l.querySelectorAll(t.el).length > 1) {
        var _e50 = [];
        return l.querySelectorAll(t.el).forEach(function (s) {
          var i = p({}, t, {
            el: s
          });
          _e50.push(new J(i));
        }), _e50;
      }
      var n = this;
      n.__swiper__ = !0, n.support = C(), n.device = M({
        userAgent: t.userAgent
      }), n.browser = L(), n.eventsListeners = {}, n.eventsAnyListeners = [], n.modules = _toConsumableArray(n.__modules__), t.modules && Array.isArray(t.modules) && (_n$modules = n.modules).push.apply(_n$modules, _toConsumableArray(t.modules));
      var o = {};
      n.modules.forEach(function (e) {
        e({
          params: t,
          swiper: n,
          extendParams: U(t, o),
          on: n.on.bind(n),
          once: n.once.bind(n),
          off: n.off.bind(n),
          emit: n.emit.bind(n)
        });
      });
      var d = p({}, W, o);
      return n.params = p({}, d, Z, t), n.originalParams = p({}, n.params), n.passedParams = p({}, t), n.params && n.params.on && Object.keys(n.params.on).forEach(function (e) {
        n.on(e, n.params.on[e]);
      }), n.params && n.params.onAny && n.onAny(n.params.onAny), Object.assign(n, {
        enabled: n.params.enabled,
        el: e,
        classNames: [],
        slides: [],
        slidesGrid: [],
        snapGrid: [],
        slidesSizesGrid: [],
        isHorizontal: function isHorizontal() {
          return "horizontal" === n.params.direction;
        },
        isVertical: function isVertical() {
          return "vertical" === n.params.direction;
        },
        activeIndex: 0,
        realIndex: 0,
        isBeginning: !0,
        isEnd: !1,
        translate: 0,
        previousTranslate: 0,
        progress: 0,
        velocity: 0,
        animating: !1,
        cssOverflowAdjustment: function cssOverflowAdjustment() {
          return Math.trunc(this.translate / Math.pow(2, 23)) * Math.pow(2, 23);
        },
        allowSlideNext: n.params.allowSlideNext,
        allowSlidePrev: n.params.allowSlidePrev,
        touchEventsData: {
          isTouched: void 0,
          isMoved: void 0,
          allowTouchCallbacks: void 0,
          touchStartTime: void 0,
          isScrolling: void 0,
          currentTranslate: void 0,
          startTranslate: void 0,
          allowThresholdMove: void 0,
          focusableElements: n.params.focusableElements,
          lastClickTime: 0,
          clickTimeout: void 0,
          velocities: [],
          allowMomentumBounce: void 0,
          startMoving: void 0,
          pointerId: null,
          touchId: null
        },
        allowClick: !0,
        allowTouchMove: n.params.allowTouchMove,
        touches: {
          startX: 0,
          startY: 0,
          currentX: 0,
          currentY: 0,
          diff: 0
        },
        imagesToLoad: [],
        imagesLoaded: 0
      }), n.emit("_swiper"), n.params.init && n.init(), n;
    }
    _createClass(J, [{
      key: "getDirectionLabel",
      value: function getDirectionLabel(e) {
        return this.isHorizontal() ? e : {
          width: "height",
          "margin-top": "margin-left",
          "margin-bottom ": "margin-right",
          "margin-left": "margin-top",
          "margin-right": "margin-bottom",
          "padding-left": "padding-top",
          "padding-right": "padding-bottom",
          marginRight: "marginBottom"
        }[e];
      }
    }, {
      key: "getSlideIndex",
      value: function getSlideIndex(e) {
        var t = this.slidesEl,
          s = this.params,
          i = b(h(t, ".".concat(s.slideClass, ", swiper-slide"))[0]);
        return b(e) - i;
      }
    }, {
      key: "getSlideIndexByData",
      value: function getSlideIndexByData(e) {
        return this.getSlideIndex(this.slides.filter(function (t) {
          return 1 * t.getAttribute("data-swiper-slide-index") === e;
        })[0]);
      }
    }, {
      key: "recalcSlides",
      value: function recalcSlides() {
        var e = this.slidesEl,
          t = this.params;
        this.slides = h(e, ".".concat(t.slideClass, ", swiper-slide"));
      }
    }, {
      key: "enable",
      value: function enable() {
        var e = this;
        e.enabled || (e.enabled = !0, e.params.grabCursor && e.setGrabCursor(), e.emit("enable"));
      }
    }, {
      key: "disable",
      value: function disable() {
        var e = this;
        e.enabled && (e.enabled = !1, e.params.grabCursor && e.unsetGrabCursor(), e.emit("disable"));
      }
    }, {
      key: "setProgress",
      value: function setProgress(e, t) {
        var s = this;
        e = Math.min(Math.max(e, 0), 1);
        var i = s.minTranslate(),
          a = (s.maxTranslate() - i) * e + i;
        s.translateTo(a, void 0 === t ? 0 : t), s.updateActiveIndex(), s.updateSlidesClasses();
      }
    }, {
      key: "emitContainerClasses",
      value: function emitContainerClasses() {
        var e = this;
        if (!e.params._emitClasses || !e.el) return;
        var t = e.el.className.split(" ").filter(function (t) {
          return 0 === t.indexOf("swiper") || 0 === t.indexOf(e.params.containerModifierClass);
        });
        e.emit("_containerClasses", t.join(" "));
      }
    }, {
      key: "getSlideClasses",
      value: function getSlideClasses(e) {
        var t = this;
        return t.destroyed ? "" : e.className.split(" ").filter(function (e) {
          return 0 === e.indexOf("swiper-slide") || 0 === e.indexOf(t.params.slideClass);
        }).join(" ");
      }
    }, {
      key: "emitSlidesClasses",
      value: function emitSlidesClasses() {
        var e = this;
        if (!e.params._emitClasses || !e.el) return;
        var t = [];
        e.slides.forEach(function (s) {
          var i = e.getSlideClasses(s);
          t.push({
            slideEl: s,
            classNames: i
          }), e.emit("_slideClass", s, i);
        }), e.emit("_slideClasses", t);
      }
    }, {
      key: "slidesPerViewDynamic",
      value: function slidesPerViewDynamic(e, t) {
        void 0 === e && (e = "current"), void 0 === t && (t = !1);
        var s = this.params,
          i = this.slides,
          a = this.slidesGrid,
          r = this.slidesSizesGrid,
          l = this.size,
          n = this.activeIndex;
        var o = 1;
        if ("number" == typeof s.slidesPerView) return s.slidesPerView;
        if (s.centeredSlides) {
          var _e51,
            _t41 = i[n] ? Math.ceil(i[n].swiperSlideSize) : 0;
          for (var _s29 = n + 1; _s29 < i.length; _s29 += 1) {
            i[_s29] && !_e51 && (_t41 += Math.ceil(i[_s29].swiperSlideSize), o += 1, _t41 > l && (_e51 = !0));
          }
          for (var _s30 = n - 1; _s30 >= 0; _s30 -= 1) {
            i[_s30] && !_e51 && (_t41 += i[_s30].swiperSlideSize, o += 1, _t41 > l && (_e51 = !0));
          }
        } else if ("current" === e) for (var _e52 = n + 1; _e52 < i.length; _e52 += 1) {
          (t ? a[_e52] + r[_e52] - a[n] < l : a[_e52] - a[n] < l) && (o += 1);
        } else for (var _e53 = n - 1; _e53 >= 0; _e53 -= 1) {
          a[n] - a[_e53] < l && (o += 1);
        }
        return o;
      }
    }, {
      key: "update",
      value: function update() {
        var e = this;
        if (!e || e.destroyed) return;
        var t = e.snapGrid,
          s = e.params;
        function i() {
          var t = e.rtlTranslate ? -1 * e.translate : e.translate,
            s = Math.min(Math.max(t, e.maxTranslate()), e.minTranslate());
          e.setTranslate(s), e.updateActiveIndex(), e.updateSlidesClasses();
        }
        var a;
        if (s.breakpoints && e.setBreakpoint(), _toConsumableArray(e.el.querySelectorAll('[loading="lazy"]')).forEach(function (t) {
          t.complete && k(e, t);
        }), e.updateSize(), e.updateSlides(), e.updateProgress(), e.updateSlidesClasses(), s.freeMode && s.freeMode.enabled && !s.cssMode) i(), s.autoHeight && e.updateAutoHeight();else {
          if (("auto" === s.slidesPerView || s.slidesPerView > 1) && e.isEnd && !s.centeredSlides) {
            var _t42 = e.virtual && s.virtual.enabled ? e.virtual.slides : e.slides;
            a = e.slideTo(_t42.length - 1, 0, !1, !0);
          } else a = e.slideTo(e.activeIndex, 0, !1, !0);
          a || i();
        }
        s.watchOverflow && t !== e.snapGrid && e.checkOverflow(), e.emit("update");
      }
    }, {
      key: "changeDirection",
      value: function changeDirection(e, t) {
        void 0 === t && (t = !0);
        var s = this,
          i = s.params.direction;
        return e || (e = "horizontal" === i ? "vertical" : "horizontal"), e === i || "horizontal" !== e && "vertical" !== e || (s.el.classList.remove("".concat(s.params.containerModifierClass).concat(i)), s.el.classList.add("".concat(s.params.containerModifierClass).concat(e)), s.emitContainerClasses(), s.params.direction = e, s.slides.forEach(function (t) {
          "vertical" === e ? t.style.width = "" : t.style.height = "";
        }), s.emit("changeDirection"), t && s.update()), s;
      }
    }, {
      key: "changeLanguageDirection",
      value: function changeLanguageDirection(e) {
        var t = this;
        t.rtl && "rtl" === e || !t.rtl && "ltr" === e || (t.rtl = "rtl" === e, t.rtlTranslate = "horizontal" === t.params.direction && t.rtl, t.rtl ? (t.el.classList.add("".concat(t.params.containerModifierClass, "rtl")), t.el.dir = "rtl") : (t.el.classList.remove("".concat(t.params.containerModifierClass, "rtl")), t.el.dir = "ltr"), t.update());
      }
    }, {
      key: "mount",
      value: function mount(e) {
        var t = this;
        if (t.mounted) return !0;
        var s = e || t.params.el;
        if ("string" == typeof s && (s = document.querySelector(s)), !s) return !1;
        s.swiper = t, s.parentNode && s.parentNode.host && s.parentNode.host.nodeName === t.params.swiperElementNodeName.toUpperCase() && (t.isElement = !0);
        var i = function i() {
          return ".".concat((t.params.wrapperClass || "").trim().split(" ").join("."));
        };
        var a = function () {
          if (s && s.shadowRoot && s.shadowRoot.querySelector) {
            return s.shadowRoot.querySelector(i());
          }
          return h(s, i())[0];
        }();
        return !a && t.params.createElements && (a = v("div", t.params.wrapperClass), s.append(a), h(s, ".".concat(t.params.slideClass)).forEach(function (e) {
          a.append(e);
        })), Object.assign(t, {
          el: s,
          wrapperEl: a,
          slidesEl: t.isElement && !s.parentNode.host.slideSlots ? s.parentNode.host : a,
          hostEl: t.isElement ? s.parentNode.host : s,
          mounted: !0,
          rtl: "rtl" === s.dir.toLowerCase() || "rtl" === g(s, "direction"),
          rtlTranslate: "horizontal" === t.params.direction && ("rtl" === s.dir.toLowerCase() || "rtl" === g(s, "direction")),
          wrongRTL: "-webkit-box" === g(a, "display")
        }), !0;
      }
    }, {
      key: "init",
      value: function init(e) {
        var t = this;
        if (t.initialized) return t;
        if (!1 === t.mount(e)) return t;
        t.emit("beforeInit"), t.params.breakpoints && t.setBreakpoint(), t.addClasses(), t.updateSize(), t.updateSlides(), t.params.watchOverflow && t.checkOverflow(), t.params.grabCursor && t.enabled && t.setGrabCursor(), t.params.loop && t.virtual && t.params.virtual.enabled ? t.slideTo(t.params.initialSlide + t.virtual.slidesBefore, 0, t.params.runCallbacksOnInit, !1, !0) : t.slideTo(t.params.initialSlide, 0, t.params.runCallbacksOnInit, !1, !0), t.params.loop && t.loopCreate(), t.attachEvents();
        var s = _toConsumableArray(t.el.querySelectorAll('[loading="lazy"]'));
        return t.isElement && s.push.apply(s, _toConsumableArray(t.hostEl.querySelectorAll('[loading="lazy"]'))), s.forEach(function (e) {
          e.complete ? k(t, e) : e.addEventListener("load", function (e) {
            k(t, e.target);
          });
        }), A(t), t.initialized = !0, A(t), t.emit("init"), t.emit("afterInit"), t;
      }
    }, {
      key: "destroy",
      value: function destroy(e, t) {
        void 0 === e && (e = !0), void 0 === t && (t = !0);
        var s = this,
          i = s.params,
          a = s.el,
          r = s.wrapperEl,
          l = s.slides;
        return void 0 === s.params || s.destroyed || (s.emit("beforeDestroy"), s.initialized = !1, s.detachEvents(), i.loop && s.loopDestroy(), t && (s.removeClasses(), a.removeAttribute("style"), r.removeAttribute("style"), l && l.length && l.forEach(function (e) {
          e.classList.remove(i.slideVisibleClass, i.slideFullyVisibleClass, i.slideActiveClass, i.slideNextClass, i.slidePrevClass), e.removeAttribute("style"), e.removeAttribute("data-swiper-slide-index");
        })), s.emit("destroy"), Object.keys(s.eventsListeners).forEach(function (e) {
          s.off(e);
        }), !1 !== e && (s.el.swiper = null, function (e) {
          var t = e;
          Object.keys(t).forEach(function (e) {
            try {
              t[e] = null;
            } catch (e) {}
            try {
              delete t[e];
            } catch (e) {}
          });
        }(s)), s.destroyed = !0), null;
      }
    }], [{
      key: "extendDefaults",
      value: function extendDefaults(e) {
        p(Z, e);
      }
    }, {
      key: "extendedDefaults",
      get: function get() {
        return Z;
      }
    }, {
      key: "defaults",
      get: function get() {
        return W;
      }
    }, {
      key: "installModule",
      value: function installModule(e) {
        J.prototype.__modules__ || (J.prototype.__modules__ = []);
        var t = J.prototype.__modules__;
        "function" == typeof e && t.indexOf(e) < 0 && t.push(e);
      }
    }, {
      key: "use",
      value: function use(e) {
        return Array.isArray(e) ? (e.forEach(function (e) {
          return J.installModule(e);
        }), J) : (J.installModule(e), J);
      }
    }]);
    return J;
  }();
  function Q(e, t, s, i) {
    return e.params.createElements && Object.keys(i).forEach(function (a) {
      if (!s[a] && !0 === s.auto) {
        var _r9 = h(e.el, ".".concat(i[a]))[0];
        _r9 || (_r9 = v("div", i[a]), _r9.className = i[a], e.el.append(_r9)), s[a] = _r9, t[a] = _r9;
      }
    }), s;
  }
  function ee(e) {
    return void 0 === e && (e = ""), ".".concat(e.trim().replace(/([\.:!+\/])/g, "\\$1").replace(/ /g, "."));
  }
  Object.keys(K).forEach(function (e) {
    Object.keys(K[e]).forEach(function (t) {
      J.prototype[t] = K[e][t];
    });
  }), J.use([function (e) {
    var t = e.swiper,
      s = e.on,
      i = e.emit;
    var a = r();
    var l = null,
      n = null;
    var o = function o() {
        t && !t.destroyed && t.initialized && (i("beforeResize"), i("resize"));
      },
      d = function d() {
        t && !t.destroyed && t.initialized && i("orientationchange");
      };
    s("init", function () {
      t.params.resizeObserver && void 0 !== a.ResizeObserver ? t && !t.destroyed && t.initialized && (l = new ResizeObserver(function (e) {
        n = a.requestAnimationFrame(function () {
          var s = t.width,
            i = t.height;
          var a = s,
            r = i;
          e.forEach(function (e) {
            var s = e.contentBoxSize,
              i = e.contentRect,
              l = e.target;
            l && l !== t.el || (a = i ? i.width : (s[0] || s).inlineSize, r = i ? i.height : (s[0] || s).blockSize);
          }), a === s && r === i || o();
        });
      }), l.observe(t.el)) : (a.addEventListener("resize", o), a.addEventListener("orientationchange", d));
    }), s("destroy", function () {
      n && a.cancelAnimationFrame(n), l && l.unobserve && t.el && (l.unobserve(t.el), l = null), a.removeEventListener("resize", o), a.removeEventListener("orientationchange", d);
    });
  }, function (e) {
    var t = e.swiper,
      s = e.extendParams,
      i = e.on,
      a = e.emit;
    var l = [],
      n = r(),
      o = function o(e, s) {
        void 0 === s && (s = {});
        var i = new (n.MutationObserver || n.WebkitMutationObserver)(function (e) {
          if (t.__preventObserver__) return;
          if (1 === e.length) return void a("observerUpdate", e[0]);
          var s = function s() {
            a("observerUpdate", e[0]);
          };
          n.requestAnimationFrame ? n.requestAnimationFrame(s) : n.setTimeout(s, 0);
        });
        i.observe(e, {
          attributes: void 0 === s.attributes || s.attributes,
          childList: void 0 === s.childList || s.childList,
          characterData: void 0 === s.characterData || s.characterData
        }), l.push(i);
      };
    s({
      observer: !1,
      observeParents: !1,
      observeSlideChildren: !1
    }), i("init", function () {
      if (t.params.observer) {
        if (t.params.observeParents) {
          var _e54 = w(t.hostEl);
          for (var _t43 = 0; _t43 < _e54.length; _t43 += 1) {
            o(_e54[_t43]);
          }
        }
        o(t.hostEl, {
          childList: t.params.observeSlideChildren
        }), o(t.wrapperEl, {
          attributes: !1
        });
      }
    }), i("destroy", function () {
      l.forEach(function (e) {
        e.disconnect();
      }), l.splice(0, l.length);
    });
  }]);
  var te = [function (e) {
    var t,
      s = e.swiper,
      a = e.extendParams,
      r = e.on,
      l = e.emit;
    a({
      virtual: {
        enabled: !1,
        slides: [],
        cache: !0,
        renderSlide: null,
        renderExternal: null,
        renderExternalUpdate: !0,
        addSlidesBefore: 0,
        addSlidesAfter: 0
      }
    });
    var n = i();
    s.virtual = {
      cache: {},
      from: void 0,
      to: void 0,
      slides: [],
      offset: 0,
      slidesGrid: []
    };
    var o = n.createElement("div");
    function d(e, t) {
      var i = s.params.virtual;
      if (i.cache && s.virtual.cache[t]) return s.virtual.cache[t];
      var a;
      return i.renderSlide ? (a = i.renderSlide.call(s, e, t), "string" == typeof a && (o.innerHTML = a, a = o.children[0])) : a = s.isElement ? v("swiper-slide") : v("div", s.params.slideClass), a.setAttribute("data-swiper-slide-index", t), i.renderSlide || (a.innerHTML = e), i.cache && (s.virtual.cache[t] = a), a;
    }
    function c(e) {
      var _s$params = s.params,
        t = _s$params.slidesPerView,
        i = _s$params.slidesPerGroup,
        a = _s$params.centeredSlides,
        r = _s$params.loop,
        _s$params$virtual = s.params.virtual,
        n = _s$params$virtual.addSlidesBefore,
        o = _s$params$virtual.addSlidesAfter,
        _s$virtual = s.virtual,
        c = _s$virtual.from,
        p = _s$virtual.to,
        u = _s$virtual.slides,
        m = _s$virtual.slidesGrid,
        f = _s$virtual.offset;
      s.params.cssMode || s.updateActiveIndex();
      var v = s.activeIndex || 0;
      var g, b, w;
      g = s.rtlTranslate ? "right" : s.isHorizontal() ? "left" : "top", a ? (b = Math.floor(t / 2) + i + o, w = Math.floor(t / 2) + i + n) : (b = t + (i - 1) + o, w = (r ? t : i) + n);
      var y = v - w,
        T = v + b;
      r || (y = Math.max(y, 0), T = Math.min(T, u.length - 1));
      var S = (s.slidesGrid[y] || 0) - (s.slidesGrid[0] || 0);
      function E() {
        s.updateSlides(), s.updateProgress(), s.updateSlidesClasses(), l("virtualUpdate");
      }
      if (r && v >= w ? (y -= w, a || (S += s.slidesGrid[0])) : r && v < w && (y = -w, a && (S += s.slidesGrid[0])), Object.assign(s.virtual, {
        from: y,
        to: T,
        offset: S,
        slidesGrid: s.slidesGrid,
        slidesBefore: w,
        slidesAfter: b
      }), c === y && p === T && !e) return s.slidesGrid !== m && S !== f && s.slides.forEach(function (e) {
        e.style[g] = S - Math.abs(s.cssOverflowAdjustment()) + "px";
      }), s.updateProgress(), void l("virtualUpdate");
      if (s.params.virtual.renderExternal) return s.params.virtual.renderExternal.call(s, {
        offset: S,
        from: y,
        to: T,
        slides: function () {
          var e = [];
          for (var _t44 = y; _t44 <= T; _t44 += 1) {
            e.push(u[_t44]);
          }
          return e;
        }()
      }), void (s.params.virtual.renderExternalUpdate ? E() : l("virtualUpdate"));
      var x = [],
        C = [],
        M = function M(e) {
          var t = e;
          return e < 0 ? t = u.length + e : t >= u.length && (t -= u.length), t;
        };
      if (e) s.slides.filter(function (e) {
        return e.matches(".".concat(s.params.slideClass, ", swiper-slide"));
      }).forEach(function (e) {
        e.remove();
      });else for (var _e55 = c; _e55 <= p; _e55 += 1) {
        if (_e55 < y || _e55 > T) {
          (function () {
            var t = M(_e55);
            s.slides.filter(function (e) {
              return e.matches(".".concat(s.params.slideClass, "[data-swiper-slide-index=\"").concat(t, "\"], swiper-slide[data-swiper-slide-index=\"").concat(t, "\"]"));
            }).forEach(function (e) {
              e.remove();
            });
          })();
        }
      }
      var L = r ? -u.length : 0,
        P = r ? 2 * u.length : u.length;
      for (var _t45 = L; _t45 < P; _t45 += 1) {
        if (_t45 >= y && _t45 <= T) {
          var _s31 = M(_t45);
          void 0 === p || e ? C.push(_s31) : (_t45 > p && C.push(_s31), _t45 < c && x.push(_s31));
        }
      }
      if (C.forEach(function (e) {
        s.slidesEl.append(d(u[e], e));
      }), r) for (var _e56 = x.length - 1; _e56 >= 0; _e56 -= 1) {
        var _t46 = x[_e56];
        s.slidesEl.prepend(d(u[_t46], _t46));
      } else x.sort(function (e, t) {
        return t - e;
      }), x.forEach(function (e) {
        s.slidesEl.prepend(d(u[e], e));
      });
      h(s.slidesEl, ".swiper-slide, swiper-slide").forEach(function (e) {
        e.style[g] = S - Math.abs(s.cssOverflowAdjustment()) + "px";
      }), E();
    }
    r("beforeInit", function () {
      if (!s.params.virtual.enabled) return;
      var e;
      if (void 0 === s.passedParams.virtual.slides) {
        var _t47 = _toConsumableArray(s.slidesEl.children).filter(function (e) {
          return e.matches(".".concat(s.params.slideClass, ", swiper-slide"));
        });
        _t47 && _t47.length && (s.virtual.slides = _toConsumableArray(_t47), e = !0, _t47.forEach(function (e, t) {
          e.setAttribute("data-swiper-slide-index", t), s.virtual.cache[t] = e, e.remove();
        }));
      }
      e || (s.virtual.slides = s.params.virtual.slides), s.classNames.push("".concat(s.params.containerModifierClass, "virtual")), s.params.watchSlidesProgress = !0, s.originalParams.watchSlidesProgress = !0, c();
    }), r("setTranslate", function () {
      s.params.virtual.enabled && (s.params.cssMode && !s._immediateVirtual ? (clearTimeout(t), t = setTimeout(function () {
        c();
      }, 100)) : c());
    }), r("init update resize", function () {
      s.params.virtual.enabled && s.params.cssMode && u(s.wrapperEl, "--swiper-virtual-size", "".concat(s.virtualSize, "px"));
    }), Object.assign(s.virtual, {
      appendSlide: function appendSlide(e) {
        if ("object" == _typeof(e) && "length" in e) for (var _t48 = 0; _t48 < e.length; _t48 += 1) {
          e[_t48] && s.virtual.slides.push(e[_t48]);
        } else s.virtual.slides.push(e);
        c(!0);
      },
      prependSlide: function prependSlide(e) {
        var t = s.activeIndex;
        var i = t + 1,
          a = 1;
        if (Array.isArray(e)) {
          for (var _t49 = 0; _t49 < e.length; _t49 += 1) {
            e[_t49] && s.virtual.slides.unshift(e[_t49]);
          }
          i = t + e.length, a = e.length;
        } else s.virtual.slides.unshift(e);
        if (s.params.virtual.cache) {
          var _e57 = s.virtual.cache,
            _t50 = {};
          Object.keys(_e57).forEach(function (s) {
            var i = _e57[s],
              r = i.getAttribute("data-swiper-slide-index");
            r && i.setAttribute("data-swiper-slide-index", parseInt(r, 10) + a), _t50[parseInt(s, 10) + a] = i;
          }), s.virtual.cache = _t50;
        }
        c(!0), s.slideTo(i, 0);
      },
      removeSlide: function removeSlide(e) {
        if (null == e) return;
        var t = s.activeIndex;
        if (Array.isArray(e)) for (var _i32 = e.length - 1; _i32 >= 0; _i32 -= 1) {
          s.params.virtual.cache && (delete s.virtual.cache[e[_i32]], Object.keys(s.virtual.cache).forEach(function (t) {
            t > e && (s.virtual.cache[t - 1] = s.virtual.cache[t], s.virtual.cache[t - 1].setAttribute("data-swiper-slide-index", t - 1), delete s.virtual.cache[t]);
          })), s.virtual.slides.splice(e[_i32], 1), e[_i32] < t && (t -= 1), t = Math.max(t, 0);
        } else s.params.virtual.cache && (delete s.virtual.cache[e], Object.keys(s.virtual.cache).forEach(function (t) {
          t > e && (s.virtual.cache[t - 1] = s.virtual.cache[t], s.virtual.cache[t - 1].setAttribute("data-swiper-slide-index", t - 1), delete s.virtual.cache[t]);
        })), s.virtual.slides.splice(e, 1), e < t && (t -= 1), t = Math.max(t, 0);
        c(!0), s.slideTo(t, 0);
      },
      removeAllSlides: function removeAllSlides() {
        s.virtual.slides = [], s.params.virtual.cache && (s.virtual.cache = {}), c(!0), s.slideTo(0, 0);
      },
      update: c
    });
  }, function (e) {
    var t = e.swiper,
      s = e.extendParams,
      i = e.on,
      a = e.emit;
    var l = r();
    var d;
    s({
      mousewheel: {
        enabled: !1,
        releaseOnEdges: !1,
        invert: !1,
        forceToAxis: !1,
        sensitivity: 1,
        eventsTarget: "container",
        thresholdDelta: null,
        thresholdTime: null,
        noMousewheelClass: "swiper-no-mousewheel"
      }
    }), t.mousewheel = {
      enabled: !1
    };
    var c,
      p = o();
    var u = [];
    function m() {
      t.enabled && (t.mouseEntered = !0);
    }
    function h() {
      t.enabled && (t.mouseEntered = !1);
    }
    function f(e) {
      return !(t.params.mousewheel.thresholdDelta && e.delta < t.params.mousewheel.thresholdDelta) && !(t.params.mousewheel.thresholdTime && o() - p < t.params.mousewheel.thresholdTime) && (e.delta >= 6 && o() - p < 60 || (e.direction < 0 ? t.isEnd && !t.params.loop || t.animating || (t.slideNext(), a("scroll", e.raw)) : t.isBeginning && !t.params.loop || t.animating || (t.slidePrev(), a("scroll", e.raw)), p = new l.Date().getTime(), !1));
    }
    function v(e) {
      var s = e,
        i = !0;
      if (!t.enabled) return;
      if (e.target.closest(".".concat(t.params.mousewheel.noMousewheelClass))) return;
      var r = t.params.mousewheel;
      t.params.cssMode && s.preventDefault();
      var l = t.el;
      "container" !== t.params.mousewheel.eventsTarget && (l = document.querySelector(t.params.mousewheel.eventsTarget));
      var p = l && l.contains(s.target);
      if (!t.mouseEntered && !p && !r.releaseOnEdges) return !0;
      s.originalEvent && (s = s.originalEvent);
      var m = 0;
      var h = t.rtlTranslate ? -1 : 1,
        v = function (e) {
          var t = 0,
            s = 0,
            i = 0,
            a = 0;
          return "detail" in e && (s = e.detail), "wheelDelta" in e && (s = -e.wheelDelta / 120), "wheelDeltaY" in e && (s = -e.wheelDeltaY / 120), "wheelDeltaX" in e && (t = -e.wheelDeltaX / 120), "axis" in e && e.axis === e.HORIZONTAL_AXIS && (t = s, s = 0), i = 10 * t, a = 10 * s, "deltaY" in e && (a = e.deltaY), "deltaX" in e && (i = e.deltaX), e.shiftKey && !i && (i = a, a = 0), (i || a) && e.deltaMode && (1 === e.deltaMode ? (i *= 40, a *= 40) : (i *= 800, a *= 800)), i && !t && (t = i < 1 ? -1 : 1), a && !s && (s = a < 1 ? -1 : 1), {
            spinX: t,
            spinY: s,
            pixelX: i,
            pixelY: a
          };
        }(s);
      if (r.forceToAxis) {
        if (t.isHorizontal()) {
          if (!(Math.abs(v.pixelX) > Math.abs(v.pixelY))) return !0;
          m = -v.pixelX * h;
        } else {
          if (!(Math.abs(v.pixelY) > Math.abs(v.pixelX))) return !0;
          m = -v.pixelY;
        }
      } else m = Math.abs(v.pixelX) > Math.abs(v.pixelY) ? -v.pixelX * h : -v.pixelY;
      if (0 === m) return !0;
      r.invert && (m = -m);
      var g = t.getTranslate() + m * r.sensitivity;
      if (g >= t.minTranslate() && (g = t.minTranslate()), g <= t.maxTranslate() && (g = t.maxTranslate()), i = !!t.params.loop || !(g === t.minTranslate() || g === t.maxTranslate()), i && t.params.nested && s.stopPropagation(), t.params.freeMode && t.params.freeMode.enabled) {
        var _e58 = {
            time: o(),
            delta: Math.abs(m),
            direction: Math.sign(m)
          },
          _i33 = c && _e58.time < c.time + 500 && _e58.delta <= c.delta && _e58.direction === c.direction;
        if (!_i33) {
          c = void 0;
          var _l6 = t.getTranslate() + m * r.sensitivity;
          var _o5 = t.isBeginning,
            _p5 = t.isEnd;
          if (_l6 >= t.minTranslate() && (_l6 = t.minTranslate()), _l6 <= t.maxTranslate() && (_l6 = t.maxTranslate()), t.setTransition(0), t.setTranslate(_l6), t.updateProgress(), t.updateActiveIndex(), t.updateSlidesClasses(), (!_o5 && t.isBeginning || !_p5 && t.isEnd) && t.updateSlidesClasses(), t.params.loop && t.loopFix({
            direction: _e58.direction < 0 ? "next" : "prev",
            byMousewheel: !0
          }), t.params.freeMode.sticky) {
            clearTimeout(d), d = void 0, u.length >= 15 && u.shift();
            var _s32 = u.length ? u[u.length - 1] : void 0,
              _i34 = u[0];
            if (u.push(_e58), _s32 && (_e58.delta > _s32.delta || _e58.direction !== _s32.direction)) u.splice(0);else if (u.length >= 15 && _e58.time - _i34.time < 500 && _i34.delta - _e58.delta >= 1 && _e58.delta <= 6) {
              var _s33 = m > 0 ? .8 : .2;
              c = _e58, u.splice(0), d = n(function () {
                t.slideToClosest(t.params.speed, !0, void 0, _s33);
              }, 0);
            }
            d || (d = n(function () {
              c = _e58, u.splice(0), t.slideToClosest(t.params.speed, !0, void 0, .5);
            }, 500));
          }
          if (_i33 || a("scroll", s), t.params.autoplay && t.params.autoplayDisableOnInteraction && t.autoplay.stop(), r.releaseOnEdges && (_l6 === t.minTranslate() || _l6 === t.maxTranslate())) return !0;
        }
      } else {
        var _s34 = {
          time: o(),
          delta: Math.abs(m),
          direction: Math.sign(m),
          raw: e
        };
        u.length >= 2 && u.shift();
        var _i35 = u.length ? u[u.length - 1] : void 0;
        if (u.push(_s34), _i35 ? (_s34.direction !== _i35.direction || _s34.delta > _i35.delta || _s34.time > _i35.time + 150) && f(_s34) : f(_s34), function (e) {
          var s = t.params.mousewheel;
          if (e.direction < 0) {
            if (t.isEnd && !t.params.loop && s.releaseOnEdges) return !0;
          } else if (t.isBeginning && !t.params.loop && s.releaseOnEdges) return !0;
          return !1;
        }(_s34)) return !0;
      }
      return s.preventDefault ? s.preventDefault() : s.returnValue = !1, !1;
    }
    function g(e) {
      var s = t.el;
      "container" !== t.params.mousewheel.eventsTarget && (s = document.querySelector(t.params.mousewheel.eventsTarget)), s[e]("mouseenter", m), s[e]("mouseleave", h), s[e]("wheel", v);
    }
    function b() {
      return t.params.cssMode ? (t.wrapperEl.removeEventListener("wheel", v), !0) : !t.mousewheel.enabled && (g("addEventListener"), t.mousewheel.enabled = !0, !0);
    }
    function w() {
      return t.params.cssMode ? (t.wrapperEl.addEventListener(event, v), !0) : !!t.mousewheel.enabled && (g("removeEventListener"), t.mousewheel.enabled = !1, !0);
    }
    i("init", function () {
      !t.params.mousewheel.enabled && t.params.cssMode && w(), t.params.mousewheel.enabled && b();
    }), i("destroy", function () {
      t.params.cssMode && b(), t.mousewheel.enabled && w();
    }), Object.assign(t.mousewheel, {
      enable: b,
      disable: w
    });
  }, function (e) {
    var t = e.swiper,
      s = e.extendParams,
      i = e.on,
      a = e.emit;
    function r(e) {
      var s;
      return e && "string" == typeof e && t.isElement && (s = t.el.querySelector(e), s) ? s : (e && ("string" == typeof e && (s = _toConsumableArray(document.querySelectorAll(e))), t.params.uniqueNavElements && "string" == typeof e && s.length > 1 && 1 === t.el.querySelectorAll(e).length && (s = t.el.querySelector(e))), e && !s ? e : s);
    }
    function l(e, s) {
      var i = t.params.navigation;
      (e = T(e)).forEach(function (e) {
        var _e$classList2;
        e && ((_e$classList2 = e.classList)[s ? "add" : "remove"].apply(_e$classList2, _toConsumableArray(i.disabledClass.split(" "))), "BUTTON" === e.tagName && (e.disabled = s), t.params.watchOverflow && t.enabled && e.classList[t.isLocked ? "add" : "remove"](i.lockClass));
      });
    }
    function n() {
      var _t$navigation = t.navigation,
        e = _t$navigation.nextEl,
        s = _t$navigation.prevEl;
      if (t.params.loop) return l(s, !1), void l(e, !1);
      l(s, t.isBeginning && !t.params.rewind), l(e, t.isEnd && !t.params.rewind);
    }
    function o(e) {
      e.preventDefault(), (!t.isBeginning || t.params.loop || t.params.rewind) && (t.slidePrev(), a("navigationPrev"));
    }
    function d(e) {
      e.preventDefault(), (!t.isEnd || t.params.loop || t.params.rewind) && (t.slideNext(), a("navigationNext"));
    }
    function c() {
      var e = t.params.navigation;
      if (t.params.navigation = Q(t, t.originalParams.navigation, t.params.navigation, {
        nextEl: "swiper-button-next",
        prevEl: "swiper-button-prev"
      }), !e.nextEl && !e.prevEl) return;
      var s = r(e.nextEl),
        i = r(e.prevEl);
      Object.assign(t.navigation, {
        nextEl: s,
        prevEl: i
      }), s = T(s), i = T(i);
      var a = function a(s, i) {
        var _s$classList2;
        s && s.addEventListener("click", "next" === i ? d : o), !t.enabled && s && (_s$classList2 = s.classList).add.apply(_s$classList2, _toConsumableArray(e.lockClass.split(" ")));
      };
      s.forEach(function (e) {
        return a(e, "next");
      }), i.forEach(function (e) {
        return a(e, "prev");
      });
    }
    function p() {
      var _t$navigation2 = t.navigation,
        e = _t$navigation2.nextEl,
        s = _t$navigation2.prevEl;
      e = T(e), s = T(s);
      var i = function i(e, s) {
        var _e$classList3;
        e.removeEventListener("click", "next" === s ? d : o), (_e$classList3 = e.classList).remove.apply(_e$classList3, _toConsumableArray(t.params.navigation.disabledClass.split(" ")));
      };
      e.forEach(function (e) {
        return i(e, "next");
      }), s.forEach(function (e) {
        return i(e, "prev");
      });
    }
    s({
      navigation: {
        nextEl: null,
        prevEl: null,
        hideOnClick: !1,
        disabledClass: "swiper-button-disabled",
        hiddenClass: "swiper-button-hidden",
        lockClass: "swiper-button-lock",
        navigationDisabledClass: "swiper-navigation-disabled"
      }
    }), t.navigation = {
      nextEl: null,
      prevEl: null
    }, i("init", function () {
      !1 === t.params.navigation.enabled ? u() : (c(), n());
    }), i("toEdge fromEdge lock unlock", function () {
      n();
    }), i("destroy", function () {
      p();
    }), i("enable disable", function () {
      var _t$navigation3 = t.navigation,
        e = _t$navigation3.nextEl,
        s = _t$navigation3.prevEl;
      e = T(e), s = T(s), t.enabled ? n() : [].concat(_toConsumableArray(e), _toConsumableArray(s)).filter(function (e) {
        return !!e;
      }).forEach(function (e) {
        return e.classList.add(t.params.navigation.lockClass);
      });
    }), i("click", function (e, s) {
      var _t$navigation4 = t.navigation,
        i = _t$navigation4.nextEl,
        r = _t$navigation4.prevEl;
      i = T(i), r = T(r);
      var l = s.target;
      if (t.params.navigation.hideOnClick && !r.includes(l) && !i.includes(l)) {
        if (t.pagination && t.params.pagination && t.params.pagination.clickable && (t.pagination.el === l || t.pagination.el.contains(l))) return;
        var _e59;
        i.length ? _e59 = i[0].classList.contains(t.params.navigation.hiddenClass) : r.length && (_e59 = r[0].classList.contains(t.params.navigation.hiddenClass)), a(!0 === _e59 ? "navigationShow" : "navigationHide"), [].concat(_toConsumableArray(i), _toConsumableArray(r)).filter(function (e) {
          return !!e;
        }).forEach(function (e) {
          return e.classList.toggle(t.params.navigation.hiddenClass);
        });
      }
    });
    var u = function u() {
      var _t$el$classList;
      (_t$el$classList = t.el.classList).add.apply(_t$el$classList, _toConsumableArray(t.params.navigation.navigationDisabledClass.split(" "))), p();
    };
    Object.assign(t.navigation, {
      enable: function enable() {
        var _t$el$classList2;
        (_t$el$classList2 = t.el.classList).remove.apply(_t$el$classList2, _toConsumableArray(t.params.navigation.navigationDisabledClass.split(" "))), c(), n();
      },
      disable: u,
      update: n,
      init: c,
      destroy: p
    });
  }, function (e) {
    var t = e.swiper,
      s = e.extendParams,
      i = e.on,
      a = e.emit;
    var r = "swiper-pagination";
    var l;
    s({
      pagination: {
        el: null,
        bulletElement: "span",
        clickable: !1,
        hideOnClick: !1,
        renderBullet: null,
        renderProgressbar: null,
        renderFraction: null,
        renderCustom: null,
        progressbarOpposite: !1,
        type: "bullets",
        dynamicBullets: !1,
        dynamicMainBullets: 1,
        formatFractionCurrent: function formatFractionCurrent(e) {
          return e;
        },
        formatFractionTotal: function formatFractionTotal(e) {
          return e;
        },
        bulletClass: "".concat(r, "-bullet"),
        bulletActiveClass: "".concat(r, "-bullet-active"),
        modifierClass: "".concat(r, "-"),
        currentClass: "".concat(r, "-current"),
        totalClass: "".concat(r, "-total"),
        hiddenClass: "".concat(r, "-hidden"),
        progressbarFillClass: "".concat(r, "-progressbar-fill"),
        progressbarOppositeClass: "".concat(r, "-progressbar-opposite"),
        clickableClass: "".concat(r, "-clickable"),
        lockClass: "".concat(r, "-lock"),
        horizontalClass: "".concat(r, "-horizontal"),
        verticalClass: "".concat(r, "-vertical"),
        paginationDisabledClass: "".concat(r, "-disabled")
      }
    }), t.pagination = {
      el: null,
      bullets: []
    };
    var n = 0;
    function o() {
      return !t.params.pagination.el || !t.pagination.el || Array.isArray(t.pagination.el) && 0 === t.pagination.el.length;
    }
    function d(e, s) {
      var i = t.params.pagination.bulletActiveClass;
      e && (e = e[("prev" === s ? "previous" : "next") + "ElementSibling"]) && (e.classList.add("".concat(i, "-").concat(s)), (e = e[("prev" === s ? "previous" : "next") + "ElementSibling"]) && e.classList.add("".concat(i, "-").concat(s, "-").concat(s)));
    }
    function c(e) {
      var s = e.target.closest(ee(t.params.pagination.bulletClass));
      if (!s) return;
      e.preventDefault();
      var i = b(s) * t.params.slidesPerGroup;
      if (t.params.loop) {
        if (t.realIndex === i) return;
        t.slideToLoop(i);
      } else t.slideTo(i);
    }
    function p() {
      var e = t.rtl,
        s = t.params.pagination;
      if (o()) return;
      var i,
        r,
        c = t.pagination.el;
      c = T(c);
      var p = t.virtual && t.params.virtual.enabled ? t.virtual.slides.length : t.slides.length,
        u = t.params.loop ? Math.ceil(p / t.params.slidesPerGroup) : t.snapGrid.length;
      if (t.params.loop ? (r = t.previousRealIndex || 0, i = t.params.slidesPerGroup > 1 ? Math.floor(t.realIndex / t.params.slidesPerGroup) : t.realIndex) : void 0 !== t.snapIndex ? (i = t.snapIndex, r = t.previousSnapIndex) : (r = t.previousIndex || 0, i = t.activeIndex || 0), "bullets" === s.type && t.pagination.bullets && t.pagination.bullets.length > 0) {
        var _a17 = t.pagination.bullets;
        var _o6, _p6, _u10;
        if (s.dynamicBullets && (l = y(_a17[0], t.isHorizontal() ? "width" : "height", !0), c.forEach(function (e) {
          e.style[t.isHorizontal() ? "width" : "height"] = l * (s.dynamicMainBullets + 4) + "px";
        }), s.dynamicMainBullets > 1 && void 0 !== r && (n += i - (r || 0), n > s.dynamicMainBullets - 1 ? n = s.dynamicMainBullets - 1 : n < 0 && (n = 0)), _o6 = Math.max(i - n, 0), _p6 = _o6 + (Math.min(_a17.length, s.dynamicMainBullets) - 1), _u10 = (_p6 + _o6) / 2), _a17.forEach(function (e) {
          var _e$classList4;
          var t = _toConsumableArray(["", "-next", "-next-next", "-prev", "-prev-prev", "-main"].map(function (e) {
            return "".concat(s.bulletActiveClass).concat(e);
          })).map(function (e) {
            return "string" == typeof e && e.includes(" ") ? e.split(" ") : e;
          }).flat();
          (_e$classList4 = e.classList).remove.apply(_e$classList4, _toConsumableArray(t));
        }), c.length > 1) _a17.forEach(function (e) {
          var _e$classList5, _e$classList6;
          var a = b(e);
          a === i ? (_e$classList5 = e.classList).add.apply(_e$classList5, _toConsumableArray(s.bulletActiveClass.split(" "))) : t.isElement && e.setAttribute("part", "bullet"), s.dynamicBullets && (a >= _o6 && a <= _p6 && (_e$classList6 = e.classList).add.apply(_e$classList6, _toConsumableArray("".concat(s.bulletActiveClass, "-main").split(" "))), a === _o6 && d(e, "prev"), a === _p6 && d(e, "next"));
        });else {
          var _e60$classList;
          var _e60 = _a17[i];
          if (_e60 && (_e60$classList = _e60.classList).add.apply(_e60$classList, _toConsumableArray(s.bulletActiveClass.split(" "))), t.isElement && _a17.forEach(function (e, t) {
            e.setAttribute("part", t === i ? "bullet-active" : "bullet");
          }), s.dynamicBullets) {
            var _e61 = _a17[_o6],
              _t51 = _a17[_p6];
            for (var _e62 = _o6; _e62 <= _p6; _e62 += 1) {
              var _a17$_e62$classList;
              _a17[_e62] && (_a17$_e62$classList = _a17[_e62].classList).add.apply(_a17$_e62$classList, _toConsumableArray("".concat(s.bulletActiveClass, "-main").split(" ")));
            }
            d(_e61, "prev"), d(_t51, "next");
          }
        }
        if (s.dynamicBullets) {
          var _i36 = Math.min(_a17.length, s.dynamicMainBullets + 4),
            _r10 = (l * _i36 - l) / 2 - _u10 * l,
            _n13 = e ? "right" : "left";
          _a17.forEach(function (e) {
            e.style[t.isHorizontal() ? _n13 : "top"] = "".concat(_r10, "px");
          });
        }
      }
      c.forEach(function (e, r) {
        if ("fraction" === s.type && (e.querySelectorAll(ee(s.currentClass)).forEach(function (e) {
          e.textContent = s.formatFractionCurrent(i + 1);
        }), e.querySelectorAll(ee(s.totalClass)).forEach(function (e) {
          e.textContent = s.formatFractionTotal(u);
        })), "progressbar" === s.type) {
          var _a18;
          _a18 = s.progressbarOpposite ? t.isHorizontal() ? "vertical" : "horizontal" : t.isHorizontal() ? "horizontal" : "vertical";
          var _r11 = (i + 1) / u;
          var _l7 = 1,
            _n14 = 1;
          "horizontal" === _a18 ? _l7 = _r11 : _n14 = _r11, e.querySelectorAll(ee(s.progressbarFillClass)).forEach(function (e) {
            e.style.transform = "translate3d(0,0,0) scaleX(".concat(_l7, ") scaleY(").concat(_n14, ")"), e.style.transitionDuration = "".concat(t.params.speed, "ms");
          });
        }
        "custom" === s.type && s.renderCustom ? (e.innerHTML = s.renderCustom(t, i + 1, u), 0 === r && a("paginationRender", e)) : (0 === r && a("paginationRender", e), a("paginationUpdate", e)), t.params.watchOverflow && t.enabled && e.classList[t.isLocked ? "add" : "remove"](s.lockClass);
      });
    }
    function u() {
      var e = t.params.pagination;
      if (o()) return;
      var s = t.virtual && t.params.virtual.enabled ? t.virtual.slides.length : t.grid && t.params.grid.rows > 1 ? t.slides.length / Math.ceil(t.params.grid.rows) : t.slides.length;
      var i = t.pagination.el;
      i = T(i);
      var r = "";
      if ("bullets" === e.type) {
        var _i37 = t.params.loop ? Math.ceil(s / t.params.slidesPerGroup) : t.snapGrid.length;
        t.params.freeMode && t.params.freeMode.enabled && _i37 > s && (_i37 = s);
        for (var _s35 = 0; _s35 < _i37; _s35 += 1) {
          e.renderBullet ? r += e.renderBullet.call(t, _s35, e.bulletClass) : r += "<".concat(e.bulletElement, " ").concat(t.isElement ? 'part="bullet"' : "", " class=\"").concat(e.bulletClass, "\"></").concat(e.bulletElement, ">");
        }
      }
      "fraction" === e.type && (r = e.renderFraction ? e.renderFraction.call(t, e.currentClass, e.totalClass) : "<span class=\"".concat(e.currentClass, "\"></span> / <span class=\"").concat(e.totalClass, "\"></span>")), "progressbar" === e.type && (r = e.renderProgressbar ? e.renderProgressbar.call(t, e.progressbarFillClass) : "<span class=\"".concat(e.progressbarFillClass, "\"></span>")), t.pagination.bullets = [], i.forEach(function (s) {
        var _t$pagination$bullets;
        "custom" !== e.type && (s.innerHTML = r || ""), "bullets" === e.type && (_t$pagination$bullets = t.pagination.bullets).push.apply(_t$pagination$bullets, _toConsumableArray(s.querySelectorAll(ee(e.bulletClass))));
      }), "custom" !== e.type && a("paginationRender", i[0]);
    }
    function m() {
      t.params.pagination = Q(t, t.originalParams.pagination, t.params.pagination, {
        el: "swiper-pagination"
      });
      var e = t.params.pagination;
      if (!e.el) return;
      var s;
      "string" == typeof e.el && t.isElement && (s = t.el.querySelector(e.el)), s || "string" != typeof e.el || (s = _toConsumableArray(document.querySelectorAll(e.el))), s || (s = e.el), s && 0 !== s.length && (t.params.uniqueNavElements && "string" == typeof e.el && Array.isArray(s) && s.length > 1 && (s = _toConsumableArray(t.el.querySelectorAll(e.el)), s.length > 1 && (s = s.filter(function (e) {
        return w(e, ".swiper")[0] === t.el;
      })[0])), Array.isArray(s) && 1 === s.length && (s = s[0]), Object.assign(t.pagination, {
        el: s
      }), s = T(s), s.forEach(function (s) {
        var _s$classList3;
        "bullets" === e.type && e.clickable && (_s$classList3 = s.classList).add.apply(_s$classList3, _toConsumableArray((e.clickableClass || "").split(" "))), s.classList.add(e.modifierClass + e.type), s.classList.add(t.isHorizontal() ? e.horizontalClass : e.verticalClass), "bullets" === e.type && e.dynamicBullets && (s.classList.add("".concat(e.modifierClass).concat(e.type, "-dynamic")), n = 0, e.dynamicMainBullets < 1 && (e.dynamicMainBullets = 1)), "progressbar" === e.type && e.progressbarOpposite && s.classList.add(e.progressbarOppositeClass), e.clickable && s.addEventListener("click", c), t.enabled || s.classList.add(e.lockClass);
      }));
    }
    function h() {
      var e = t.params.pagination;
      if (o()) return;
      var s = t.pagination.el;
      s && (s = T(s), s.forEach(function (s) {
        var _s$classList4;
        s.classList.remove(e.hiddenClass), s.classList.remove(e.modifierClass + e.type), s.classList.remove(t.isHorizontal() ? e.horizontalClass : e.verticalClass), e.clickable && ((_s$classList4 = s.classList).remove.apply(_s$classList4, _toConsumableArray((e.clickableClass || "").split(" "))), s.removeEventListener("click", c));
      })), t.pagination.bullets && t.pagination.bullets.forEach(function (t) {
        var _t$classList;
        return (_t$classList = t.classList).remove.apply(_t$classList, _toConsumableArray(e.bulletActiveClass.split(" ")));
      });
    }
    i("changeDirection", function () {
      if (!t.pagination || !t.pagination.el) return;
      var e = t.params.pagination;
      var s = t.pagination.el;
      s = T(s), s.forEach(function (s) {
        s.classList.remove(e.horizontalClass, e.verticalClass), s.classList.add(t.isHorizontal() ? e.horizontalClass : e.verticalClass);
      });
    }), i("init", function () {
      !1 === t.params.pagination.enabled ? f() : (m(), u(), p());
    }), i("activeIndexChange", function () {
      void 0 === t.snapIndex && p();
    }), i("snapIndexChange", function () {
      p();
    }), i("snapGridLengthChange", function () {
      u(), p();
    }), i("destroy", function () {
      h();
    }), i("enable disable", function () {
      var e = t.pagination.el;
      e && (e = T(e), e.forEach(function (e) {
        return e.classList[t.enabled ? "remove" : "add"](t.params.pagination.lockClass);
      }));
    }), i("lock unlock", function () {
      p();
    }), i("click", function (e, s) {
      var i = s.target,
        r = T(t.pagination.el);
      if (t.params.pagination.el && t.params.pagination.hideOnClick && r && r.length > 0 && !i.classList.contains(t.params.pagination.bulletClass)) {
        if (t.navigation && (t.navigation.nextEl && i === t.navigation.nextEl || t.navigation.prevEl && i === t.navigation.prevEl)) return;
        var _e63 = r[0].classList.contains(t.params.pagination.hiddenClass);
        a(!0 === _e63 ? "paginationShow" : "paginationHide"), r.forEach(function (e) {
          return e.classList.toggle(t.params.pagination.hiddenClass);
        });
      }
    });
    var f = function f() {
      t.el.classList.add(t.params.pagination.paginationDisabledClass);
      var e = t.pagination.el;
      e && (e = T(e), e.forEach(function (e) {
        return e.classList.add(t.params.pagination.paginationDisabledClass);
      })), h();
    };
    Object.assign(t.pagination, {
      enable: function enable() {
        t.el.classList.remove(t.params.pagination.paginationDisabledClass);
        var e = t.pagination.el;
        e && (e = T(e), e.forEach(function (e) {
          return e.classList.remove(t.params.pagination.paginationDisabledClass);
        })), m(), u(), p();
      },
      disable: f,
      render: u,
      update: p,
      init: m,
      destroy: h
    });
  }, function (e) {
    var t = e.swiper,
      s = e.extendParams,
      a = e.on,
      o = e.emit;
    var d = i();
    var c,
      p,
      u,
      m,
      h = !1,
      f = null,
      g = null;
    function b() {
      if (!t.params.scrollbar.el || !t.scrollbar.el) return;
      var e = t.scrollbar,
        s = t.rtlTranslate,
        i = e.dragEl,
        a = e.el,
        r = t.params.scrollbar,
        l = t.params.loop ? t.progressLoop : t.progress;
      var n = p,
        o = (u - p) * l;
      s ? (o = -o, o > 0 ? (n = p - o, o = 0) : -o + p > u && (n = u + o)) : o < 0 ? (n = p + o, o = 0) : o + p > u && (n = u - o), t.isHorizontal() ? (i.style.transform = "translate3d(".concat(o, "px, 0, 0)"), i.style.width = "".concat(n, "px")) : (i.style.transform = "translate3d(0px, ".concat(o, "px, 0)"), i.style.height = "".concat(n, "px")), r.hide && (clearTimeout(f), a.style.opacity = 1, f = setTimeout(function () {
        a.style.opacity = 0, a.style.transitionDuration = "400ms";
      }, 1e3));
    }
    function w() {
      if (!t.params.scrollbar.el || !t.scrollbar.el) return;
      var e = t.scrollbar,
        s = e.dragEl,
        i = e.el;
      s.style.width = "", s.style.height = "", u = t.isHorizontal() ? i.offsetWidth : i.offsetHeight, m = t.size / (t.virtualSize + t.params.slidesOffsetBefore - (t.params.centeredSlides ? t.snapGrid[0] : 0)), p = "auto" === t.params.scrollbar.dragSize ? u * m : parseInt(t.params.scrollbar.dragSize, 10), t.isHorizontal() ? s.style.width = "".concat(p, "px") : s.style.height = "".concat(p, "px"), i.style.display = m >= 1 ? "none" : "", t.params.scrollbar.hide && (i.style.opacity = 0), t.params.watchOverflow && t.enabled && e.el.classList[t.isLocked ? "add" : "remove"](t.params.scrollbar.lockClass);
    }
    function y(e) {
      return t.isHorizontal() ? e.clientX : e.clientY;
    }
    function S(e) {
      var s = t.scrollbar,
        a = t.rtlTranslate,
        l = s.el;
      var n;
      n = (y(e) - function (e) {
        var t = r(),
          s = i(),
          a = e.getBoundingClientRect(),
          l = s.body,
          n = e.clientTop || l.clientTop || 0,
          o = e.clientLeft || l.clientLeft || 0,
          d = e === t ? t.scrollY : e.scrollTop,
          c = e === t ? t.scrollX : e.scrollLeft;
        return {
          top: a.top + d - n,
          left: a.left + c - o
        };
      }(l)[t.isHorizontal() ? "left" : "top"] - (null !== c ? c : p / 2)) / (u - p), n = Math.max(Math.min(n, 1), 0), a && (n = 1 - n);
      var o = t.minTranslate() + (t.maxTranslate() - t.minTranslate()) * n;
      t.updateProgress(o), t.setTranslate(o), t.updateActiveIndex(), t.updateSlidesClasses();
    }
    function E(e) {
      var s = t.params.scrollbar,
        i = t.scrollbar,
        a = t.wrapperEl,
        r = i.el,
        l = i.dragEl;
      h = !0, c = e.target === l ? y(e) - e.target.getBoundingClientRect()[t.isHorizontal() ? "left" : "top"] : null, e.preventDefault(), e.stopPropagation(), a.style.transitionDuration = "100ms", l.style.transitionDuration = "100ms", S(e), clearTimeout(g), r.style.transitionDuration = "0ms", s.hide && (r.style.opacity = 1), t.params.cssMode && (t.wrapperEl.style["scroll-snap-type"] = "none"), o("scrollbarDragStart", e);
    }
    function x(e) {
      var s = t.scrollbar,
        i = t.wrapperEl,
        a = s.el,
        r = s.dragEl;
      h && (e.preventDefault ? e.preventDefault() : e.returnValue = !1, S(e), i.style.transitionDuration = "0ms", a.style.transitionDuration = "0ms", r.style.transitionDuration = "0ms", o("scrollbarDragMove", e));
    }
    function C(e) {
      var s = t.params.scrollbar,
        i = t.scrollbar,
        a = t.wrapperEl,
        r = i.el;
      h && (h = !1, t.params.cssMode && (t.wrapperEl.style["scroll-snap-type"] = "", a.style.transitionDuration = ""), s.hide && (clearTimeout(g), g = n(function () {
        r.style.opacity = 0, r.style.transitionDuration = "400ms";
      }, 1e3)), o("scrollbarDragEnd", e), s.snapOnRelease && t.slideToClosest());
    }
    function M(e) {
      var s = t.scrollbar,
        i = t.params,
        a = s.el;
      if (!a) return;
      var r = a,
        l = !!i.passiveListeners && {
          passive: !1,
          capture: !1
        },
        n = !!i.passiveListeners && {
          passive: !0,
          capture: !1
        };
      if (!r) return;
      var o = "on" === e ? "addEventListener" : "removeEventListener";
      r[o]("pointerdown", E, l), d[o]("pointermove", x, l), d[o]("pointerup", C, n);
    }
    function L() {
      var _a$classList2;
      var e = t.scrollbar,
        s = t.el;
      t.params.scrollbar = Q(t, t.originalParams.scrollbar, t.params.scrollbar, {
        el: "swiper-scrollbar"
      });
      var i = t.params.scrollbar;
      if (!i.el) return;
      var a, r;
      if ("string" == typeof i.el && t.isElement && (a = t.el.querySelector(i.el)), a || "string" != typeof i.el) a || (a = i.el);else if (a = d.querySelectorAll(i.el), !a.length) return;
      t.params.uniqueNavElements && "string" == typeof i.el && a.length > 1 && 1 === s.querySelectorAll(i.el).length && (a = s.querySelector(i.el)), a.length > 0 && (a = a[0]), a.classList.add(t.isHorizontal() ? i.horizontalClass : i.verticalClass), a && (r = a.querySelector(ee(t.params.scrollbar.dragClass)), r || (r = v("div", t.params.scrollbar.dragClass), a.append(r))), Object.assign(e, {
        el: a,
        dragEl: r
      }), i.draggable && t.params.scrollbar.el && t.scrollbar.el && M("on"), a && (_a$classList2 = a.classList)[t.enabled ? "remove" : "add"].apply(_a$classList2, _toConsumableArray(l(t.params.scrollbar.lockClass)));
    }
    function P() {
      var _s$classList5;
      var e = t.params.scrollbar,
        s = t.scrollbar.el;
      s && (_s$classList5 = s.classList).remove.apply(_s$classList5, _toConsumableArray(l(t.isHorizontal() ? e.horizontalClass : e.verticalClass))), t.params.scrollbar.el && t.scrollbar.el && M("off");
    }
    s({
      scrollbar: {
        el: null,
        dragSize: "auto",
        hide: !1,
        draggable: !1,
        snapOnRelease: !0,
        lockClass: "swiper-scrollbar-lock",
        dragClass: "swiper-scrollbar-drag",
        scrollbarDisabledClass: "swiper-scrollbar-disabled",
        horizontalClass: "swiper-scrollbar-horizontal",
        verticalClass: "swiper-scrollbar-vertical"
      }
    }), t.scrollbar = {
      el: null,
      dragEl: null
    }, a("changeDirection", function () {
      if (!t.scrollbar || !t.scrollbar.el) return;
      var e = t.params.scrollbar;
      var s = t.scrollbar.el;
      s = T(s), s.forEach(function (s) {
        s.classList.remove(e.horizontalClass, e.verticalClass), s.classList.add(t.isHorizontal() ? e.horizontalClass : e.verticalClass);
      });
    }), a("init", function () {
      !1 === t.params.scrollbar.enabled ? k() : (L(), w(), b());
    }), a("update resize observerUpdate lock unlock changeDirection", function () {
      w();
    }), a("setTranslate", function () {
      b();
    }), a("setTransition", function (e, s) {
      !function (e) {
        t.params.scrollbar.el && t.scrollbar.el && (t.scrollbar.dragEl.style.transitionDuration = "".concat(e, "ms"));
      }(s);
    }), a("enable disable", function () {
      var _e$classList7;
      var e = t.scrollbar.el;
      e && (_e$classList7 = e.classList)[t.enabled ? "remove" : "add"].apply(_e$classList7, _toConsumableArray(l(t.params.scrollbar.lockClass)));
    }), a("destroy", function () {
      P();
    });
    var k = function k() {
      var _t$el$classList3, _t$scrollbar$el$class;
      (_t$el$classList3 = t.el.classList).add.apply(_t$el$classList3, _toConsumableArray(l(t.params.scrollbar.scrollbarDisabledClass))), t.scrollbar.el && (_t$scrollbar$el$class = t.scrollbar.el.classList).add.apply(_t$scrollbar$el$class, _toConsumableArray(l(t.params.scrollbar.scrollbarDisabledClass))), P();
    };
    Object.assign(t.scrollbar, {
      enable: function enable() {
        var _t$el$classList4, _t$scrollbar$el$class2;
        (_t$el$classList4 = t.el.classList).remove.apply(_t$el$classList4, _toConsumableArray(l(t.params.scrollbar.scrollbarDisabledClass))), t.scrollbar.el && (_t$scrollbar$el$class2 = t.scrollbar.el.classList).remove.apply(_t$scrollbar$el$class2, _toConsumableArray(l(t.params.scrollbar.scrollbarDisabledClass))), L(), w(), b();
      },
      disable: k,
      updateSize: w,
      setTranslate: b,
      init: L,
      destroy: P
    });
  }, function (e) {
    var t,
      s,
      a = e.swiper,
      r = e.extendParams,
      l = e.on,
      n = e.emit,
      o = e.params;
    a.autoplay = {
      running: !1,
      paused: !1,
      timeLeft: 0
    }, r({
      autoplay: {
        enabled: !1,
        delay: 3e3,
        waitForTransition: !0,
        disableOnInteraction: !1,
        stopOnLastSlide: !1,
        reverseDirection: !1,
        pauseOnMouseEnter: !1
      }
    });
    var d,
      c,
      p,
      u,
      m,
      h,
      f,
      v,
      g = o && o.autoplay ? o.autoplay.delay : 3e3,
      b = o && o.autoplay ? o.autoplay.delay : 3e3,
      w = new Date().getTime();
    function y(e) {
      a && !a.destroyed && a.wrapperEl && e.target === a.wrapperEl && (a.wrapperEl.removeEventListener("transitionend", y), v || M());
    }
    var T = function T() {
        if (a.destroyed || !a.autoplay.running) return;
        a.autoplay.paused ? c = !0 : c && (b = d, c = !1);
        var e = a.autoplay.paused ? d : w + b - new Date().getTime();
        a.autoplay.timeLeft = e, n("autoplayTimeLeft", e, e / g), s = requestAnimationFrame(function () {
          T();
        });
      },
      S = function S(e) {
        if (a.destroyed || !a.autoplay.running) return;
        cancelAnimationFrame(s), T();
        var i = void 0 === e ? a.params.autoplay.delay : e;
        g = a.params.autoplay.delay, b = a.params.autoplay.delay;
        var r = function () {
          var e;
          if (e = a.virtual && a.params.virtual.enabled ? a.slides.filter(function (e) {
            return e.classList.contains("swiper-slide-active");
          })[0] : a.slides[a.activeIndex], !e) return;
          return parseInt(e.getAttribute("data-swiper-autoplay"), 10);
        }();
        !Number.isNaN(r) && r > 0 && void 0 === e && (i = r, g = r, b = r), d = i;
        var l = a.params.speed,
          o = function o() {
            a && !a.destroyed && (a.params.autoplay.reverseDirection ? !a.isBeginning || a.params.loop || a.params.rewind ? (a.slidePrev(l, !0, !0), n("autoplay")) : a.params.autoplay.stopOnLastSlide || (a.slideTo(a.slides.length - 1, l, !0, !0), n("autoplay")) : !a.isEnd || a.params.loop || a.params.rewind ? (a.slideNext(l, !0, !0), n("autoplay")) : a.params.autoplay.stopOnLastSlide || (a.slideTo(0, l, !0, !0), n("autoplay")), a.params.cssMode && (w = new Date().getTime(), requestAnimationFrame(function () {
              S();
            })));
          };
        return i > 0 ? (clearTimeout(t), t = setTimeout(function () {
          o();
        }, i)) : requestAnimationFrame(function () {
          o();
        }), i;
      },
      E = function E() {
        w = new Date().getTime(), a.autoplay.running = !0, S(), n("autoplayStart");
      },
      x = function x() {
        a.autoplay.running = !1, clearTimeout(t), cancelAnimationFrame(s), n("autoplayStop");
      },
      C = function C(e, s) {
        if (a.destroyed || !a.autoplay.running) return;
        clearTimeout(t), e || (f = !0);
        var i = function i() {
          n("autoplayPause"), a.params.autoplay.waitForTransition ? a.wrapperEl.addEventListener("transitionend", y) : M();
        };
        if (a.autoplay.paused = !0, s) return h && (d = a.params.autoplay.delay), h = !1, void i();
        var r = d || a.params.autoplay.delay;
        d = r - (new Date().getTime() - w), a.isEnd && d < 0 && !a.params.loop || (d < 0 && (d = 0), i());
      },
      M = function M() {
        a.isEnd && d < 0 && !a.params.loop || a.destroyed || !a.autoplay.running || (w = new Date().getTime(), f ? (f = !1, S(d)) : S(), a.autoplay.paused = !1, n("autoplayResume"));
      },
      L = function L() {
        if (a.destroyed || !a.autoplay.running) return;
        var e = i();
        "hidden" === e.visibilityState && (f = !0, C(!0)), "visible" === e.visibilityState && M();
      },
      P = function P(e) {
        "mouse" === e.pointerType && (f = !0, v = !0, a.animating || a.autoplay.paused || C(!0));
      },
      k = function k(e) {
        "mouse" === e.pointerType && (v = !1, a.autoplay.paused && M());
      };
    l("init", function () {
      a.params.autoplay.enabled && (a.params.autoplay.pauseOnMouseEnter && (a.el.addEventListener("pointerenter", P), a.el.addEventListener("pointerleave", k)), i().addEventListener("visibilitychange", L), E());
    }), l("destroy", function () {
      a.el.removeEventListener("pointerenter", P), a.el.removeEventListener("pointerleave", k), i().removeEventListener("visibilitychange", L), a.autoplay.running && x();
    }), l("_freeModeStaticRelease", function () {
      (u || f) && M();
    }), l("_freeModeNoMomentumRelease", function () {
      a.params.autoplay.disableOnInteraction ? x() : C(!0, !0);
    }), l("beforeTransitionStart", function (e, t, s) {
      !a.destroyed && a.autoplay.running && (s || !a.params.autoplay.disableOnInteraction ? C(!0, !0) : x());
    }), l("sliderFirstMove", function () {
      !a.destroyed && a.autoplay.running && (a.params.autoplay.disableOnInteraction ? x() : (p = !0, u = !1, f = !1, m = setTimeout(function () {
        f = !0, u = !0, C(!0);
      }, 200)));
    }), l("touchEnd", function () {
      if (!a.destroyed && a.autoplay.running && p) {
        if (clearTimeout(m), clearTimeout(t), a.params.autoplay.disableOnInteraction) return u = !1, void (p = !1);
        u && a.params.cssMode && M(), u = !1, p = !1;
      }
    }), l("slideChange", function () {
      !a.destroyed && a.autoplay.running && (h = !0);
    }), Object.assign(a.autoplay, {
      start: E,
      stop: x,
      pause: C,
      resume: M
    });
  }];
  return J.use(te), J;
}();
document.addEventListener("DOMContentLoaded", function () {
  var header = document.querySelector('.header');
  var main = document.querySelector('.main');
  var ipapi = fetch('https://ipapi.co/json', {
    method: 'GET'
  }).then(function (response) {
    return response.json();
  }).then(function (data) {
    return data;
  });
  function resize() {
    if (window.innerWidth < 1140) {
      var _mains = document.querySelectorAll('.main');
      if (_mains[0]) {
        _mains.forEach(function (main) {
          var form = main.querySelector('.main__form');
          if (window.innerWidth < 1140) {
            form.style.minHeight = form.scrollHeight + 'px';
            main.style.setProperty('--height-form', "".concat(form.scrollHeight, "px"));
          } else {
            main.style.removeProperty('--height-form');
            form.style.minHeight = '';
          }
        });
      }
    }
  }
  resize();
  window.addEventListener('resize', function () {
    resize();
  });
  window.addEventListener('scroll', function () {
    if (window.scrollY > 200) {
      header.classList.add('fixed');
      main.classList.add('fixed');
    } else {
      header.classList.remove('fixed');
      main.classList.remove('fixed');
    }
  });
  var _countries = pPhones;
  function getOptionByCode(slug) {
    return _countries.find(function (country) {
      return country.countryCode.toLowerCase() === slug;
    });
  }
  var mains = document.querySelectorAll('.main');
  if (mains[0]) {
    mains.forEach(function (main) {
      var _swiperElement = main.querySelector('.swiper');
      var _swiperPagination = main.querySelector(".swiper-pagination");
      new IntersectionObserver(function (entries, observer) {
        if (entries[0].isIntersecting) {
          _swiper.autoplay.resume();
        } else {
          _swiper.autoplay.pause();
        }
      }).observe(_swiperElement);
      var _swiper = new Swiper(_swiperElement, {
        speed: _swiperElement.dataset.speed,
        spaceBetween: 10,
        autoplay: {
          delay: _swiperElement.dataset.autoplay,
          disableOnInteraction: false
        },
        pagination: {
          el: _swiperPagination,
          clickable: true
        },
        loop: true,
        rewind: true,
        breakpoints: {
          320: {
            allowTouchMove: true,
            autoHeight: 'auto'
          },
          1200: {
            allowTouchMove: false,
            autoHeight: false
          }
        },
        on: {
          afterInit: function afterInit(swiper) {
            _swiperPagination.style.setProperty('--count', swiper.pagination.bullets.length);
            main.querySelector('.main__nums-end').textContent = swiper.pagination.bullets.length < 10 ? '0' + swiper.pagination.bullets.length : swiper.pagination.bullets.length;
          },
          slideChange: function slideChange(swiper) {
            main.querySelector('.main__nums-start').textContent = swiper.realIndex + 1 < 10 ? '0' + (swiper.realIndex + 1) : swiper.realIndex + 1;
          }
        }
      });
      _swiper.autoplay.pause();
    });
  }
  var interTels = document.querySelectorAll('.p-inter-tel');
  if (interTels[0]) {
    interTels.forEach(function (interTel) {
      var lang = interTel.querySelector('input[name="tel_lang"]');
      var slug = interTel.querySelector('input[name="tel_slug"]');
      var langUpper = lang.value.charAt(0).toUpperCase() + lang.value.slice(1);
      var number = interTel.querySelector('input[name="tel_number"]');
      var prefix = interTel.querySelector('.p-inter-tel__input-item span');
      var input = interTel.querySelector('.p-inter-tel__input-item input[type="tel"]');
      var button = interTel.querySelector('.p-inter-tel__select-block');
      var buttonFlag = button.querySelector('.fi');
      var options = interTel.querySelector('.p-inter-tel__options');
      var optionsUl = options.querySelector('ul');
      var optionsSearch = options.querySelector('input');
      function resetQuery() {
        _options.forEach(function (option) {
          option.classList.remove('hidden');
          optionsSearch.value = '';
        });
      }
      button.addEventListener('click', function () {
        if (interTel.classList.contains('active')) {
          resetQuery();
        }
        interTel.classList.toggle('active');
      });
      var _options = null;
      var _mask = IMask(input, {
        mask: input.placeholder,
        lazy: false
      });
      input._mask = _mask;
      var activeOptionToJson = getOptionByCode(slug.value);
      number.value = "+".concat(activeOptionToJson.phoneCode);
      prefix.textContent = "+".concat(activeOptionToJson.phoneCode);
      buttonFlag.className = "fi fi-".concat(activeOptionToJson.countryCode.toLowerCase());
      lang.value = "".concat(activeOptionToJson.countryCode.toLowerCase());
      input.placeholder = '';
      input.value = '';
      _mask.masked.reset();
      _mask.updateOptions({
        mask: activeOptionToJson.phoneMask
      });
      _countries.forEach(function (country) {
        var classes = slug.value === country.countryCode.toLowerCase() ? 'active' : '';
        var optionOutput = "\n                    <li class=\"p-inter-tel__option ".concat(classes, "\" data-country=\"").concat(country['name' + langUpper], "\" data-code=\"").concat(country.countryCode.toLowerCase(), "\">\n                      <div class=\"fi fi-").concat(country.countryCode.toLowerCase(), "\"></div>\n                      <div class=\"p-inter-tel__option-name\">").concat(country['name' + langUpper], "</div>\n                      <div class=\"p-inter-tel__option-num\">+").concat(country.phoneCode, "</div>\n                    </li>\n                ");
        optionsUl.insertAdjacentHTML('beforeend', optionOutput);
      });
      _options = optionsUl.querySelectorAll('.p-inter-tel__option');
      _options.forEach(function (option) {
        option.addEventListener('click', function () {
          var code = option.dataset.code;
          var activeOptionToJson = getOptionByCode(option.dataset.code);
          var num = activeOptionToJson.phoneCode;
          var mask = activeOptionToJson.phoneMask;
          console.log(mask);
          var activeOption = optionsUl.querySelector('.p-inter-tel__option.active');
          if (activeOption) {
            activeOption.classList.remove('active');
          }
          slug.value = code;
          number.value = num;
          prefix.textContent = "+".concat(num);
          buttonFlag.className = "fi fi-".concat(code);
          input.value = '';
          _mask.masked.reset();
          _mask.updateOptions({
            mask: mask,
            lazy: false
          });
          input.focus();
          option.classList.add('active');
          interTel.classList.remove('active');
          resetQuery();
        });
      });
      optionsSearch.addEventListener('input', function () {
        var search_query = optionsSearch.value.toLowerCase();
        _options.forEach(function (option) {
          var is_matched = option.dataset.country.toLowerCase().includes(search_query);
          is_matched ? option.classList.remove('hidden') : option.classList.add('hidden');
        });
      });
    });
  }
  ipapi.then(function (data) {
    var slug = data.country_code.toLowerCase();
    interTels.forEach(function (interTel) {
      var tel_number = interTel.querySelector('input[name="tel_number"]');
      var statusIp = interTel.querySelector('input[name="ip_status"]');
      if (statusIp.value === 'true') {
        interTel.querySelector('input[name="tel_slug"]').value = slug;
        var options = interTel.querySelector('.p-inter-tel__options');
        var optionsUl = options.querySelector('ul');
        var input = interTel.querySelector('.p-inter-tel__input-item input[type="tel"]');
        var _mask = input._mask;
        var button = interTel.querySelector('.p-inter-tel__select-block');
        var buttonFlag = button.querySelector('.fi');
        var prefix = interTel.querySelector('.p-inter-tel__input-item span');
        var option = optionsUl.querySelector('.p-inter-tel__option[data-code="' + slug + '"]');
        var activeOptionToJson = getOptionByCode(slug);
        if (option) {
          option.classList.add('active');
          input.value = '';
          buttonFlag.className = "fi fi-".concat(option.dataset.code);
          input._mask = _mask;
          tel_number.value = "".concat(activeOptionToJson.phoneCode);
          prefix.textContent = "+".concat(activeOptionToJson.phoneCode);
          _mask.masked.reset();
          _mask.updateOptions({
            mask: activeOptionToJson.phoneMask,
            lazy: false
          });
        }
      }
    });
  });
  var cards = document.querySelectorAll('.cards');
  if (cards[0]) {
    cards.forEach(function (card) {
      var _swiperElement = card.querySelector('.swiper');
      var _swiperPagination = card.querySelector(".swiper-pagination");
      var _swiperScrollbar = card.querySelector(".swiper-scrollbar");
      var _swiper = new Swiper(_swiperElement, {
        speed: _swiperElement.dataset.speed,
        slidesPerView: 'auto',
        spaceBetween: 15,
        pagination: {
          el: _swiperPagination,
          clickable: true,
          type: 'custom',
          renderCustom: function renderCustom(swiper, current, total) {
            var start = current < 10 ? '0' + current : current;
            var end = total - 1 < 10 ? '0' + total : total;
            return "<span class=\"cards__nums-start\">".concat(start, "</span>/<span class=\"cards__nums-end\">").concat(end, "</span>");
          }
        },
        scrollbar: {
          el: _swiperScrollbar,
          draggable: true,
          snapOnRelease: true
        },
        navigation: {
          nextEl: card.querySelector(".swiper-button-next"),
          prevEl: card.querySelector(".swiper-button-prev")
        },
        breakpoints: {
          320: {
            allowTouchMove: true,
            spaceBetween: 5
          },
          768: {
            spaceBetween: 15,
            allowTouchMove: false
          }
        }
      });
    });
  }
  var pSelects = document.querySelectorAll('.p-select');
  if (pSelects[0]) {
    pSelects.forEach(function (pSelect) {
      var input = pSelect.querySelector('.p-select__input');
      var btn = pSelect.querySelector('.p-select__btn');
      var current = btn.querySelector('.p-select__current');
      var options = pSelect.querySelectorAll('.p-select__options .p-select__option');
      btn.addEventListener('click', function () {
        pSelect.classList.toggle('active');
      });
      options.forEach(function (option) {
        option.addEventListener('click', function () {
          input.value = option.textContent;
          current.textContent = option.textContent;
          pSelect.classList.remove('active');
          btn.classList.add('active');
        });
      });
    });
  }
  var anchors = document.querySelectorAll('a[href*="#"]');
  var _iterator = _createForOfIteratorHelper(anchors),
    _step;
  try {
    var _loop2 = function _loop2() {
      var anchor = _step.value;
      anchor.addEventListener('click', function (e) {
        e.preventDefault();
        var blockID = anchor.getAttribute('href').substr(1);
        document.getElementById(blockID).scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
      });
    };
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      _loop2();
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  var forms = document.querySelectorAll('form');
  if (forms[0]) {
    forms.forEach(function (form) {
      form.addEventListener('submit', function (e) {
        resetEvent(e);
        e.stopImmediatePropagation();
        var status = false;
        var countInvalid = 0;
        var isValidForm = form.checkValidity();
        var pFormInputs = form.querySelectorAll('.p-form__input');
        if (pFormInputs[0]) {
          pFormInputs.forEach(function (pFormInput) {
            pFormInput.classList.remove('invalid', 'valid');
            if (pFormInput.classList.contains('p-form__input_single')) {
              var input = pFormInput.querySelector('input');
              if (!input.checkValidity()) {
                countInvalid = countInvalid + 1;
                pFormInput.classList.add('invalid');
              }
            } else if (pFormInput.classList.contains('p-form__input_checkbox')) {
              var _input = pFormInput.querySelector('input');
              if (!_input.checked) {
                countInvalid = countInvalid + 1;
                pFormInput.classList.add('invalid');
              }
            } else {
              var interTel = pFormInput.querySelector('.p-inter-tel');
              if (interTel) {
                var _input2 = interTel.querySelector('.p-inter-tel__input-item input[type="tel"]');
                if (_input2._mask.value.includes('_')) {
                  countInvalid = countInvalid + 1;
                  pFormInput.classList.add('invalid');
                }
              }
              var pSelect = pFormInput.querySelector('.p-select');
              if (pSelect) {
                var _input3 = pSelect.querySelector('.p-select__input');
                if (_input3.value === '' || _input3.value === _input3.dataset["default"]) {
                  countInvalid = countInvalid + 1;
                  pFormInput.classList.add('invalid');
                }
              }
            }
          });
        }
        if (!countInvalid) {
          status = true;
        }
        if (status && isValidForm) {
          console.log('Validated!');

          // Main Block
          var _main = form.closest('.main');
          if (_main) {
            var mainForm = _main.querySelector('.main__form');
            form.style.display = 'none';
            mainForm.insertAdjacentElement('afterbegin', thankYouOutput());
          }

          // Modal
          var modalWithThank = form.closest('.modal.modal_with-thank');
          if (modalWithThank) {
            var modalThankContent = modalWithThank.querySelector('.modal_with-thank__content');
            var modalContent = modalWithThank.querySelector('.modal__content');
            modalThankContent.style.display = 'block';
            modalContent.style.display = 'none';
            modalThankContent.insertAdjacentElement('afterbegin', thankYouOutput());
            var close = modalThankContent.querySelector('.thank__close');
            if (close) {
              close.addEventListener('click', function () {
                removeModal(modalWithThank);
                document.body.style.overflow = '';
              });
            }
          }
          lazyContent.update();
          lazyBackground.update();
        }
      });
    });
  }
  function thankYouOutput() {
    var element = document.createElement('div');
    element.className = 'thank';
    element.innerHTML = "\n          <div class=\"thank__close\">\n            <picture>\n              <source type=\"image/webp\" srcset=\"#\" data-srcset=\"img/modal/close_thank.webp\">\n              <img class=\"lazy \" width=\"21\" height=\"21\" src=\"#\" data-src=\"img/modal/close_thank.png\" alt=\"\" loading=\"lazy\">\n            </picture>\n          </div>\n          <div class=\"thank__img\">\n                <picture>\n                  <source type=\"image/webp\" srcset=\"#\" data-srcset=\"img/modal/verified.webp\">\n                  <img class=\"lazy \" width=\"84\" height=\"84\" src=\"#\" data-src=\"img/modal/verified.png\" alt=\"\" loading=\"lazy\">\n                </picture>\n          </div>\n          <div class=\"thank__title\">\u0421\u043F\u0430\u0441\u0438\u0431\u043E \u0437\u0430 \u043E\u0442\u043F\u0440\u0430\u0432\u043A\u0443!</div>\n          <div class=\"thank__subtitle\">\u041D\u0430\u0448\u0438 \u044D\u043A\u0441\u043F\u0435\u0440\u0442\u044B \u0441\u0432\u044F\u0436\u0443\u0442\u0441\u044F \u0441 \u0412\u0430\u043C\u0438 \u0432&nbsp;\u0442\u0435\u0447\u0435\u043D\u0438\u0435 2 \u0440\u0430\u0431\u043E\u0447\u0438\u0445 \u0447\u0430\u0441\u043E\u0432.</div>\n        ";
    return element;
  }
  function resetEvent(e) {
    e.preventDefault();
    e.stopPropagation();
  }
  function addModal(element) {
    element.classList.add("active");
  }
  function removeModal(element) {
    element.classList.remove("active");
  }
  var PovlyModal = /*#__PURE__*/function () {
    function PovlyModal() {
      _classCallCheck(this, PovlyModal);
      this.allModals();
      this.allModalShows();
    }
    _createClass(PovlyModal, [{
      key: "allModals",
      value: function allModals() {
        var modals = document.querySelectorAll(".modal");
        modals.forEach(function (modal) {
          function eventClose() {
            var event = new CustomEvent("pModalClose", {
              detail: {
                modal: modal
              }
            });
            document.dispatchEvent(event);
          }
          function remove() {
            removeModal(modal);
            document.body.style.overflow = "";
            eventClose();
          }
          var close = modal.querySelector(".modal__close");
          if (close) {
            close.addEventListener("click", function () {
              remove();
            });
          }
          var back = modal.querySelector(".modal__back");
          if (back) {
            back.addEventListener("click", function () {
              remove();
            });
          }
          modal.addEventListener("click", function (e) {
            if (e.target == modal) {
              remove();
            }
          });
        });
      }
    }, {
      key: "allModalShows",
      value: function allModalShows() {
        var modalShows = document.querySelectorAll(".modal__show");
        modalShows.forEach(function (modal) {
          modal.addEventListener("click", function (e) {
            resetEvent(e);
            var dataModal = modal.getAttribute("data-modal");
            var _modal = document.querySelector(".modal__" + dataModal);
            addModal(_modal);
            document.body.style.overflow = "hidden";
            var event = new CustomEvent("pModalOpen", {
              detail: {
                modal: _modal,
                element: modal
              }
            });
            document.dispatchEvent(event);
          });
        });
      }
    }]);
    return PovlyModal;
  }();
  new PovlyModal();
});